/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { benchmarksDeleteApiBenchmarksId } from "../funcs/benchmarksDeleteApiBenchmarksId.js";
import { benchmarksGetApiBenchmarks } from "../funcs/benchmarksGetApiBenchmarks.js";
import { benchmarksGetApiBenchmarksId } from "../funcs/benchmarksGetApiBenchmarksId.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Benchmarks extends ClientSDK {
  /**
   * List all Benchmarks
   *
   * @remarks
   * Returns a list of all Benchmarks
   */
  async getApiBenchmarks(
    options?: RequestOptions,
  ): Promise<operations.GetApiBenchmarksResponseBody> {
    return unwrapAsync(benchmarksGetApiBenchmarks(
      this,
      options,
    ));
  }

  /**
   * Get a specific Benchmark
   *
   * @remarks
   * Returns a specific Benchmark by ID
   */
  async getApiBenchmarksId(
    request: operations.GetApiBenchmarksIdRequest,
    options?: RequestOptions,
  ): Promise<components.Benchmark> {
    return unwrapAsync(benchmarksGetApiBenchmarksId(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete a Benchmark
   *
   * @remarks
   * Deletes a specific Benchmark by ID
   */
  async deleteApiBenchmarksId(
    request: operations.DeleteApiBenchmarksIdRequest,
    options?: RequestOptions,
  ): Promise<operations.DeleteApiBenchmarksIdResponseBody> {
    return unwrapAsync(benchmarksDeleteApiBenchmarksId(
      this,
      request,
      options,
    ));
  }
}
