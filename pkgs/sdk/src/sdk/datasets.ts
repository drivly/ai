/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { datasetsDeleteApiDatasetsId } from "../funcs/datasetsDeleteApiDatasetsId.js";
import { datasetsGetApiDatasets } from "../funcs/datasetsGetApiDatasets.js";
import { datasetsGetApiDatasetsId } from "../funcs/datasetsGetApiDatasetsId.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Datasets extends ClientSDK {
  /**
   * List all Datasets
   *
   * @remarks
   * Returns a list of all Datasets
   */
  async getApiDatasets(
    options?: RequestOptions,
  ): Promise<operations.GetApiDatasetsResponseBody> {
    return unwrapAsync(datasetsGetApiDatasets(
      this,
      options,
    ));
  }

  /**
   * Get a specific Dataset
   *
   * @remarks
   * Returns a specific Dataset by ID
   */
  async getApiDatasetsId(
    request: operations.GetApiDatasetsIdRequest,
    options?: RequestOptions,
  ): Promise<components.Dataset> {
    return unwrapAsync(datasetsGetApiDatasetsId(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete a Dataset
   *
   * @remarks
   * Deletes a specific Dataset by ID
   */
  async deleteApiDatasetsId(
    request: operations.DeleteApiDatasetsIdRequest,
    options?: RequestOptions,
  ): Promise<operations.DeleteApiDatasetsIdResponseBody> {
    return unwrapAsync(datasetsDeleteApiDatasetsId(
      this,
      request,
      options,
    ));
  }
}
