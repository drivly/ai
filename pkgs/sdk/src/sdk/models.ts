/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { modelsDeleteApiModelsId } from "../funcs/modelsDeleteApiModelsId.js";
import { modelsGetApiModels } from "../funcs/modelsGetApiModels.js";
import { modelsGetApiModelsId } from "../funcs/modelsGetApiModelsId.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Models extends ClientSDK {
  /**
   * List all Models
   *
   * @remarks
   * Returns a list of all Models
   */
  async getApiModels(
    options?: RequestOptions,
  ): Promise<operations.GetApiModelsResponseBody> {
    return unwrapAsync(modelsGetApiModels(
      this,
      options,
    ));
  }

  /**
   * Get a specific Model
   *
   * @remarks
   * Returns a specific Model by ID
   */
  async getApiModelsId(
    request: operations.GetApiModelsIdRequest,
    options?: RequestOptions,
  ): Promise<components.Model> {
    return unwrapAsync(modelsGetApiModelsId(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete a Model
   *
   * @remarks
   * Deletes a specific Model by ID
   */
  async deleteApiModelsId(
    request: operations.DeleteApiModelsIdRequest,
    options?: RequestOptions,
  ): Promise<operations.DeleteApiModelsIdResponseBody> {
    return unwrapAsync(modelsDeleteApiModelsId(
      this,
      request,
      options,
    ));
  }
}
