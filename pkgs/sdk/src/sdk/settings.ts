/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { settingsDeleteApiSettingsId } from "../funcs/settingsDeleteApiSettingsId.js";
import { settingsGetApiSettings } from "../funcs/settingsGetApiSettings.js";
import { settingsGetApiSettingsId } from "../funcs/settingsGetApiSettingsId.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Settings extends ClientSDK {
  /**
   * List all Settings
   *
   * @remarks
   * Returns a list of all Settings
   */
  async getApiSettings(
    options?: RequestOptions,
  ): Promise<operations.GetApiSettingsResponseBody> {
    return unwrapAsync(settingsGetApiSettings(
      this,
      options,
    ));
  }

  /**
   * Get a specific Setting
   *
   * @remarks
   * Returns a specific Setting by ID
   */
  async getApiSettingsId(
    request: operations.GetApiSettingsIdRequest,
    options?: RequestOptions,
  ): Promise<components.Setting> {
    return unwrapAsync(settingsGetApiSettingsId(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete a Setting
   *
   * @remarks
   * Deletes a specific Setting by ID
   */
  async deleteApiSettingsId(
    request: operations.DeleteApiSettingsIdRequest,
    options?: RequestOptions,
  ): Promise<operations.DeleteApiSettingsIdResponseBody> {
    return unwrapAsync(settingsDeleteApiSettingsId(
      this,
      request,
      options,
    ));
  }
}
