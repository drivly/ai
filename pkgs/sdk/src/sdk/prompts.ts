/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { promptsDeleteApiPromptsId } from "../funcs/promptsDeleteApiPromptsId.js";
import { promptsGetApiPrompts } from "../funcs/promptsGetApiPrompts.js";
import { promptsGetApiPromptsId } from "../funcs/promptsGetApiPromptsId.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Prompts extends ClientSDK {
  /**
   * List all Prompts
   *
   * @remarks
   * Returns a list of all Prompts
   */
  async getApiPrompts(
    options?: RequestOptions,
  ): Promise<operations.GetApiPromptsResponseBody> {
    return unwrapAsync(promptsGetApiPrompts(
      this,
      options,
    ));
  }

  /**
   * Get a specific Prompt
   *
   * @remarks
   * Returns a specific Prompt by ID
   */
  async getApiPromptsId(
    request: operations.GetApiPromptsIdRequest,
    options?: RequestOptions,
  ): Promise<components.Prompt> {
    return unwrapAsync(promptsGetApiPromptsId(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete a Prompt
   *
   * @remarks
   * Deletes a specific Prompt by ID
   */
  async deleteApiPromptsId(
    request: operations.DeleteApiPromptsIdRequest,
    options?: RequestOptions,
  ): Promise<operations.DeleteApiPromptsIdResponseBody> {
    return unwrapAsync(promptsDeleteApiPromptsId(
      this,
      request,
      options,
    ));
  }
}
