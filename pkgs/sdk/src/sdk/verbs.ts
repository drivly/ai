/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { verbsDeleteApiVerbsId } from "../funcs/verbsDeleteApiVerbsId.js";
import { verbsGetApiVerbs } from "../funcs/verbsGetApiVerbs.js";
import { verbsGetApiVerbsId } from "../funcs/verbsGetApiVerbsId.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Verbs extends ClientSDK {
  /**
   * List all Verbs
   *
   * @remarks
   * Returns a list of all Verbs
   */
  async getApiVerbs(
    options?: RequestOptions,
  ): Promise<operations.GetApiVerbsResponseBody> {
    return unwrapAsync(verbsGetApiVerbs(
      this,
      options,
    ));
  }

  /**
   * Get a specific Verb
   *
   * @remarks
   * Returns a specific Verb by ID
   */
  async getApiVerbsId(
    request: operations.GetApiVerbsIdRequest,
    options?: RequestOptions,
  ): Promise<components.Verb> {
    return unwrapAsync(verbsGetApiVerbsId(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete a Verb
   *
   * @remarks
   * Deletes a specific Verb by ID
   */
  async deleteApiVerbsId(
    request: operations.DeleteApiVerbsIdRequest,
    options?: RequestOptions,
  ): Promise<operations.DeleteApiVerbsIdResponseBody> {
    return unwrapAsync(verbsDeleteApiVerbsId(
      this,
      request,
      options,
    ));
  }
}
