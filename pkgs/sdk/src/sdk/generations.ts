/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { generationsDeleteApiGenerationsId } from "../funcs/generationsDeleteApiGenerationsId.js";
import { generationsGetApiGenerations } from "../funcs/generationsGetApiGenerations.js";
import { generationsGetApiGenerationsId } from "../funcs/generationsGetApiGenerationsId.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Generations extends ClientSDK {
  /**
   * List all Generations
   *
   * @remarks
   * Returns a list of all Generations
   */
  async getApiGenerations(
    options?: RequestOptions,
  ): Promise<operations.GetApiGenerationsResponseBody> {
    return unwrapAsync(generationsGetApiGenerations(
      this,
      options,
    ));
  }

  /**
   * Get a specific Generation
   *
   * @remarks
   * Returns a specific Generation by ID
   */
  async getApiGenerationsId(
    request: operations.GetApiGenerationsIdRequest,
    options?: RequestOptions,
  ): Promise<components.Generation> {
    return unwrapAsync(generationsGetApiGenerationsId(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete a Generation
   *
   * @remarks
   * Deletes a specific Generation by ID
   */
  async deleteApiGenerationsId(
    request: operations.DeleteApiGenerationsIdRequest,
    options?: RequestOptions,
  ): Promise<operations.DeleteApiGenerationsIdResponseBody> {
    return unwrapAsync(generationsDeleteApiGenerationsId(
      this,
      request,
      options,
    ));
  }
}
