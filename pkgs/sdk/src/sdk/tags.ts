/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { tagsDeleteApiTagsId } from "../funcs/tagsDeleteApiTagsId.js";
import { tagsGetApiTags } from "../funcs/tagsGetApiTags.js";
import { tagsGetApiTagsId } from "../funcs/tagsGetApiTagsId.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Tags extends ClientSDK {
  /**
   * List all Tags
   *
   * @remarks
   * Returns a list of all Tags
   */
  async getApiTags(
    options?: RequestOptions,
  ): Promise<operations.GetApiTagsResponseBody> {
    return unwrapAsync(tagsGetApiTags(
      this,
      options,
    ));
  }

  /**
   * Get a specific Tag
   *
   * @remarks
   * Returns a specific Tag by ID
   */
  async getApiTagsId(
    request: operations.GetApiTagsIdRequest,
    options?: RequestOptions,
  ): Promise<components.Tag> {
    return unwrapAsync(tagsGetApiTagsId(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete a Tag
   *
   * @remarks
   * Deletes a specific Tag by ID
   */
  async deleteApiTagsId(
    request: operations.DeleteApiTagsIdRequest,
    options?: RequestOptions,
  ): Promise<operations.DeleteApiTagsIdResponseBody> {
    return unwrapAsync(tagsDeleteApiTagsId(
      this,
      request,
      options,
    ));
  }
}
