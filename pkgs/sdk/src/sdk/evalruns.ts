/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { evalRunsDeleteApiEvalRunsId } from "../funcs/evalRunsDeleteApiEvalRunsId.js";
import { evalRunsGetApiEvalRuns } from "../funcs/evalRunsGetApiEvalRuns.js";
import { evalRunsGetApiEvalRunsId } from "../funcs/evalRunsGetApiEvalRunsId.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class EvalRuns extends ClientSDK {
  /**
   * List all Eval Runs
   *
   * @remarks
   * Returns a list of all Eval Runs
   */
  async getApiEvalRuns(
    options?: RequestOptions,
  ): Promise<operations.GetApiEvalRunsResponseBody> {
    return unwrapAsync(evalRunsGetApiEvalRuns(
      this,
      options,
    ));
  }

  /**
   * Get a specific Eval Run
   *
   * @remarks
   * Returns a specific Eval Run by ID
   */
  async getApiEvalRunsId(
    request: operations.GetApiEvalRunsIdRequest,
    options?: RequestOptions,
  ): Promise<components.EvalRun> {
    return unwrapAsync(evalRunsGetApiEvalRunsId(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete a Eval Run
   *
   * @remarks
   * Deletes a specific Eval Run by ID
   */
  async deleteApiEvalRunsId(
    request: operations.DeleteApiEvalRunsIdRequest,
    options?: RequestOptions,
  ): Promise<operations.DeleteApiEvalRunsIdResponseBody> {
    return unwrapAsync(evalRunsDeleteApiEvalRunsId(
      this,
      request,
      options,
    ));
  }
}
