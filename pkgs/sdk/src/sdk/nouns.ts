/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { nounsDeleteApiNounsId } from "../funcs/nounsDeleteApiNounsId.js";
import { nounsGetApiNouns } from "../funcs/nounsGetApiNouns.js";
import { nounsGetApiNounsId } from "../funcs/nounsGetApiNounsId.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Nouns extends ClientSDK {
  /**
   * List all Nouns
   *
   * @remarks
   * Returns a list of all Nouns
   */
  async getApiNouns(
    options?: RequestOptions,
  ): Promise<operations.GetApiNounsResponseBody> {
    return unwrapAsync(nounsGetApiNouns(
      this,
      options,
    ));
  }

  /**
   * Get a specific Noun
   *
   * @remarks
   * Returns a specific Noun by ID
   */
  async getApiNounsId(
    request: operations.GetApiNounsIdRequest,
    options?: RequestOptions,
  ): Promise<components.Noun> {
    return unwrapAsync(nounsGetApiNounsId(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete a Noun
   *
   * @remarks
   * Deletes a specific Noun by ID
   */
  async deleteApiNounsId(
    request: operations.DeleteApiNounsIdRequest,
    options?: RequestOptions,
  ): Promise<operations.DeleteApiNounsIdResponseBody> {
    return unwrapAsync(nounsDeleteApiNounsId(
      this,
      request,
      options,
    ));
  }
}
