/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { searchesDeleteApiSearchesId } from "../funcs/searchesDeleteApiSearchesId.js";
import { searchesGetApiSearches } from "../funcs/searchesGetApiSearches.js";
import { searchesGetApiSearchesId } from "../funcs/searchesGetApiSearchesId.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Searches extends ClientSDK {
  /**
   * List all Searches
   *
   * @remarks
   * Returns a list of all Searches
   */
  async getApiSearches(
    options?: RequestOptions,
  ): Promise<operations.GetApiSearchesResponseBody> {
    return unwrapAsync(searchesGetApiSearches(
      this,
      options,
    ));
  }

  /**
   * Get a specific Search
   *
   * @remarks
   * Returns a specific Search by ID
   */
  async getApiSearchesId(
    request: operations.GetApiSearchesIdRequest,
    options?: RequestOptions,
  ): Promise<components.Search> {
    return unwrapAsync(searchesGetApiSearchesId(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete a Search
   *
   * @remarks
   * Deletes a specific Search by ID
   */
  async deleteApiSearchesId(
    request: operations.DeleteApiSearchesIdRequest,
    options?: RequestOptions,
  ): Promise<operations.DeleteApiSearchesIdResponseBody> {
    return unwrapAsync(searchesDeleteApiSearchesId(
      this,
      request,
      options,
    ));
  }
}
