/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { usersDeleteApiUsersId } from "../funcs/usersDeleteApiUsersId.js";
import { usersGetApiUsers } from "../funcs/usersGetApiUsers.js";
import { usersGetApiUsersId } from "../funcs/usersGetApiUsersId.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Users extends ClientSDK {
  /**
   * List all Users
   *
   * @remarks
   * Returns a list of all Users
   */
  async getApiUsers(
    options?: RequestOptions,
  ): Promise<operations.GetApiUsersResponseBody> {
    return unwrapAsync(usersGetApiUsers(
      this,
      options,
    ));
  }

  /**
   * Get a specific User
   *
   * @remarks
   * Returns a specific User by ID
   */
  async getApiUsersId(
    request: operations.GetApiUsersIdRequest,
    options?: RequestOptions,
  ): Promise<components.User> {
    return unwrapAsync(usersGetApiUsersId(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete a User
   *
   * @remarks
   * Deletes a specific User by ID
   */
  async deleteApiUsersId(
    request: operations.DeleteApiUsersIdRequest,
    options?: RequestOptions,
  ): Promise<operations.DeleteApiUsersIdResponseBody> {
    return unwrapAsync(usersDeleteApiUsersId(
      this,
      request,
      options,
    ));
  }
}
