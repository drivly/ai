/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { projectsDeleteApiProjectsId } from "../funcs/projectsDeleteApiProjectsId.js";
import { projectsGetApiProjects } from "../funcs/projectsGetApiProjects.js";
import { projectsGetApiProjectsId } from "../funcs/projectsGetApiProjectsId.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Projects extends ClientSDK {
  /**
   * List all Projects
   *
   * @remarks
   * Returns a list of all Projects
   */
  async getApiProjects(
    options?: RequestOptions,
  ): Promise<operations.GetApiProjectsResponseBody> {
    return unwrapAsync(projectsGetApiProjects(
      this,
      options,
    ));
  }

  /**
   * Get a specific Project
   *
   * @remarks
   * Returns a specific Project by ID
   */
  async getApiProjectsId(
    request: operations.GetApiProjectsIdRequest,
    options?: RequestOptions,
  ): Promise<components.Project> {
    return unwrapAsync(projectsGetApiProjectsId(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete a Project
   *
   * @remarks
   * Deletes a specific Project by ID
   */
  async deleteApiProjectsId(
    request: operations.DeleteApiProjectsIdRequest,
    options?: RequestOptions,
  ): Promise<operations.DeleteApiProjectsIdResponseBody> {
    return unwrapAsync(projectsDeleteApiProjectsId(
      this,
      request,
      options,
    ));
  }
}
