/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { deploymentsDeleteApiDeploymentsId } from "../funcs/deploymentsDeleteApiDeploymentsId.js";
import { deploymentsGetApiDeployments } from "../funcs/deploymentsGetApiDeployments.js";
import { deploymentsGetApiDeploymentsId } from "../funcs/deploymentsGetApiDeploymentsId.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Deployments extends ClientSDK {
  /**
   * List all Deployments
   *
   * @remarks
   * Returns a list of all Deployments
   */
  async getApiDeployments(
    options?: RequestOptions,
  ): Promise<operations.GetApiDeploymentsResponseBody> {
    return unwrapAsync(deploymentsGetApiDeployments(
      this,
      options,
    ));
  }

  /**
   * Get a specific Deployment
   *
   * @remarks
   * Returns a specific Deployment by ID
   */
  async getApiDeploymentsId(
    request: operations.GetApiDeploymentsIdRequest,
    options?: RequestOptions,
  ): Promise<components.Deployment> {
    return unwrapAsync(deploymentsGetApiDeploymentsId(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete a Deployment
   *
   * @remarks
   * Deletes a specific Deployment by ID
   */
  async deleteApiDeploymentsId(
    request: operations.DeleteApiDeploymentsIdRequest,
    options?: RequestOptions,
  ): Promise<operations.DeleteApiDeploymentsIdResponseBody> {
    return unwrapAsync(deploymentsDeleteApiDeploymentsId(
      this,
      request,
      options,
    ));
  }
}
