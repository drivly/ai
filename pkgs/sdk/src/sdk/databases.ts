/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { databasesDeleteApiDatabasesId } from "../funcs/databasesDeleteApiDatabasesId.js";
import { databasesGetApiDatabases } from "../funcs/databasesGetApiDatabases.js";
import { databasesGetApiDatabasesId } from "../funcs/databasesGetApiDatabasesId.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Databases extends ClientSDK {
  /**
   * List all Databases
   *
   * @remarks
   * Returns a list of all Databases
   */
  async getApiDatabases(
    options?: RequestOptions,
  ): Promise<operations.GetApiDatabasesResponseBody> {
    return unwrapAsync(databasesGetApiDatabases(
      this,
      options,
    ));
  }

  /**
   * Get a specific Database
   *
   * @remarks
   * Returns a specific Database by ID
   */
  async getApiDatabasesId(
    request: operations.GetApiDatabasesIdRequest,
    options?: RequestOptions,
  ): Promise<components.Database> {
    return unwrapAsync(databasesGetApiDatabasesId(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete a Database
   *
   * @remarks
   * Deletes a specific Database by ID
   */
  async deleteApiDatabasesId(
    request: operations.DeleteApiDatabasesIdRequest,
    options?: RequestOptions,
  ): Promise<operations.DeleteApiDatabasesIdResponseBody> {
    return unwrapAsync(databasesDeleteApiDatabasesId(
      this,
      request,
      options,
    ));
  }
}
