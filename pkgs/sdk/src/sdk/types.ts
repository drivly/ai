/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { typesDeleteApiTypesId } from "../funcs/typesDeleteApiTypesId.js";
import { typesGetApiTypes } from "../funcs/typesGetApiTypes.js";
import { typesGetApiTypesId } from "../funcs/typesGetApiTypesId.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Types extends ClientSDK {
  /**
   * List all Types
   *
   * @remarks
   * Returns a list of all Types
   */
  async getApiTypes(
    options?: RequestOptions,
  ): Promise<operations.GetApiTypesResponseBody> {
    return unwrapAsync(typesGetApiTypes(
      this,
      options,
    ));
  }

  /**
   * Get a specific Type
   *
   * @remarks
   * Returns a specific Type by ID
   */
  async getApiTypesId(
    request: operations.GetApiTypesIdRequest,
    options?: RequestOptions,
  ): Promise<components.Type> {
    return unwrapAsync(typesGetApiTypesId(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete a Type
   *
   * @remarks
   * Deletes a specific Type by ID
   */
  async deleteApiTypesId(
    request: operations.DeleteApiTypesIdRequest,
    options?: RequestOptions,
  ): Promise<operations.DeleteApiTypesIdResponseBody> {
    return unwrapAsync(typesDeleteApiTypesId(
      this,
      request,
      options,
    ));
  }
}
