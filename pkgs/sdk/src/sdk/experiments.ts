/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { experimentsDeleteApiExperimentsId } from "../funcs/experimentsDeleteApiExperimentsId.js";
import { experimentsGetApiExperiments } from "../funcs/experimentsGetApiExperiments.js";
import { experimentsGetApiExperimentsId } from "../funcs/experimentsGetApiExperimentsId.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Experiments extends ClientSDK {
  /**
   * List all Experiments
   *
   * @remarks
   * Returns a list of all Experiments
   */
  async getApiExperiments(
    options?: RequestOptions,
  ): Promise<operations.GetApiExperimentsResponseBody> {
    return unwrapAsync(experimentsGetApiExperiments(
      this,
      options,
    ));
  }

  /**
   * Get a specific Experiment
   *
   * @remarks
   * Returns a specific Experiment by ID
   */
  async getApiExperimentsId(
    request: operations.GetApiExperimentsIdRequest,
    options?: RequestOptions,
  ): Promise<components.Experiment> {
    return unwrapAsync(experimentsGetApiExperimentsId(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete a Experiment
   *
   * @remarks
   * Deletes a specific Experiment by ID
   */
  async deleteApiExperimentsId(
    request: operations.DeleteApiExperimentsIdRequest,
    options?: RequestOptions,
  ): Promise<operations.DeleteApiExperimentsIdResponseBody> {
    return unwrapAsync(experimentsDeleteApiExperimentsId(
      this,
      request,
      options,
    ));
  }
}
