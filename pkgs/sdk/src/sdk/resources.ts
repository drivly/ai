/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { resourcesDeleteApiResourcesId } from "../funcs/resourcesDeleteApiResourcesId.js";
import { resourcesGetApiResources } from "../funcs/resourcesGetApiResources.js";
import { resourcesGetApiResourcesId } from "../funcs/resourcesGetApiResourcesId.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Resources extends ClientSDK {
  /**
   * List all Resources
   *
   * @remarks
   * Returns a list of all Resources
   */
  async getApiResources(
    options?: RequestOptions,
  ): Promise<operations.GetApiResourcesResponseBody> {
    return unwrapAsync(resourcesGetApiResources(
      this,
      options,
    ));
  }

  /**
   * Get a specific Resource
   *
   * @remarks
   * Returns a specific Resource by ID
   */
  async getApiResourcesId(
    request: operations.GetApiResourcesIdRequest,
    options?: RequestOptions,
  ): Promise<components.Resource> {
    return unwrapAsync(resourcesGetApiResourcesId(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete a Resource
   *
   * @remarks
   * Deletes a specific Resource by ID
   */
  async deleteApiResourcesId(
    request: operations.DeleteApiResourcesIdRequest,
    options?: RequestOptions,
  ): Promise<operations.DeleteApiResourcesIdResponseBody> {
    return unwrapAsync(resourcesDeleteApiResourcesId(
      this,
      request,
      options,
    ));
  }
}
