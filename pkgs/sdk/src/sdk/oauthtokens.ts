/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { oauthTokensDeleteApiOauthTokensId } from "../funcs/oauthTokensDeleteApiOauthTokensId.js";
import { oauthTokensGetApiOauthTokens } from "../funcs/oauthTokensGetApiOauthTokens.js";
import { oauthTokensGetApiOauthTokensId } from "../funcs/oauthTokensGetApiOauthTokensId.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class OauthTokens extends ClientSDK {
  /**
   * List all Oauth Tokens
   *
   * @remarks
   * Returns a list of all Oauth Tokens
   */
  async getApiOauthTokens(
    options?: RequestOptions,
  ): Promise<operations.GetApiOauthTokensResponseBody> {
    return unwrapAsync(oauthTokensGetApiOauthTokens(
      this,
      options,
    ));
  }

  /**
   * Get a specific Oauth Token
   *
   * @remarks
   * Returns a specific Oauth Token by ID
   */
  async getApiOauthTokensId(
    request: operations.GetApiOauthTokensIdRequest,
    options?: RequestOptions,
  ): Promise<components.OauthToken> {
    return unwrapAsync(oauthTokensGetApiOauthTokensId(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete a Oauth Token
   *
   * @remarks
   * Deletes a specific Oauth Token by ID
   */
  async deleteApiOauthTokensId(
    request: operations.DeleteApiOauthTokensIdRequest,
    options?: RequestOptions,
  ): Promise<operations.DeleteApiOauthTokensIdResponseBody> {
    return unwrapAsync(oauthTokensDeleteApiOauthTokensId(
      this,
      request,
      options,
    ));
  }
}
