/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { experimentMetricsDeleteApiExperimentMetricsId } from "../funcs/experimentMetricsDeleteApiExperimentMetricsId.js";
import { experimentMetricsGetApiExperimentMetrics } from "../funcs/experimentMetricsGetApiExperimentMetrics.js";
import { experimentMetricsGetApiExperimentMetricsId } from "../funcs/experimentMetricsGetApiExperimentMetricsId.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class ExperimentMetrics extends ClientSDK {
  /**
   * List all Experiment Metrics
   *
   * @remarks
   * Returns a list of all Experiment Metrics
   */
  async getApiExperimentMetrics(
    options?: RequestOptions,
  ): Promise<operations.GetApiExperimentMetricsResponseBody> {
    return unwrapAsync(experimentMetricsGetApiExperimentMetrics(
      this,
      options,
    ));
  }

  /**
   * Get a specific Experiment Metric
   *
   * @remarks
   * Returns a specific Experiment Metric by ID
   */
  async getApiExperimentMetricsId(
    request: operations.GetApiExperimentMetricsIdRequest,
    options?: RequestOptions,
  ): Promise<components.ExperimentMetric> {
    return unwrapAsync(experimentMetricsGetApiExperimentMetricsId(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete a Experiment Metric
   *
   * @remarks
   * Deletes a specific Experiment Metric by ID
   */
  async deleteApiExperimentMetricsId(
    request: operations.DeleteApiExperimentMetricsIdRequest,
    options?: RequestOptions,
  ): Promise<operations.DeleteApiExperimentMetricsIdResponseBody> {
    return unwrapAsync(experimentMetricsDeleteApiExperimentMetricsId(
      this,
      request,
      options,
    ));
  }
}
