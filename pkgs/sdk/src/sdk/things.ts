/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { thingsDeleteApiThingsId } from "../funcs/thingsDeleteApiThingsId.js";
import { thingsGetApiThings } from "../funcs/thingsGetApiThings.js";
import { thingsGetApiThingsId } from "../funcs/thingsGetApiThingsId.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Things extends ClientSDK {
  /**
   * List all Things
   *
   * @remarks
   * Returns a list of all Things
   */
  async getApiThings(
    options?: RequestOptions,
  ): Promise<operations.GetApiThingsResponseBody> {
    return unwrapAsync(thingsGetApiThings(
      this,
      options,
    ));
  }

  /**
   * Get a specific Thing
   *
   * @remarks
   * Returns a specific Thing by ID
   */
  async getApiThingsId(
    request: operations.GetApiThingsIdRequest,
    options?: RequestOptions,
  ): Promise<components.Thing> {
    return unwrapAsync(thingsGetApiThingsId(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete a Thing
   *
   * @remarks
   * Deletes a specific Thing by ID
   */
  async deleteApiThingsId(
    request: operations.DeleteApiThingsIdRequest,
    options?: RequestOptions,
  ): Promise<operations.DeleteApiThingsIdResponseBody> {
    return unwrapAsync(thingsDeleteApiThingsId(
      this,
      request,
      options,
    ));
  }
}
