/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { agentsDeleteApiAgentsId } from "../funcs/agentsDeleteApiAgentsId.js";
import { agentsGetApiAgents } from "../funcs/agentsGetApiAgents.js";
import { agentsGetApiAgentsId } from "../funcs/agentsGetApiAgentsId.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Agents extends ClientSDK {
  /**
   * List all Agents
   *
   * @remarks
   * Returns a list of all Agents
   */
  async getApiAgents(
    options?: RequestOptions,
  ): Promise<operations.GetApiAgentsResponseBody> {
    return unwrapAsync(agentsGetApiAgents(
      this,
      options,
    ));
  }

  /**
   * Get a specific Agent
   *
   * @remarks
   * Returns a specific Agent by ID
   */
  async getApiAgentsId(
    request: operations.GetApiAgentsIdRequest,
    options?: RequestOptions,
  ): Promise<components.Agent> {
    return unwrapAsync(agentsGetApiAgentsId(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete a Agent
   *
   * @remarks
   * Deletes a specific Agent by ID
   */
  async deleteApiAgentsId(
    request: operations.DeleteApiAgentsIdRequest,
    options?: RequestOptions,
  ): Promise<operations.DeleteApiAgentsIdResponseBody> {
    return unwrapAsync(agentsDeleteApiAgentsId(
      this,
      request,
      options,
    ));
  }
}
