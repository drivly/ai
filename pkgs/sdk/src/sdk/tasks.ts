/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { tasksDeleteApiTasksId } from "../funcs/tasksDeleteApiTasksId.js";
import { tasksGetApiTasks } from "../funcs/tasksGetApiTasks.js";
import { tasksGetApiTasksId } from "../funcs/tasksGetApiTasksId.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Tasks extends ClientSDK {
  /**
   * List all Tasks
   *
   * @remarks
   * Returns a list of all Tasks
   */
  async getApiTasks(
    options?: RequestOptions,
  ): Promise<operations.GetApiTasksResponseBody> {
    return unwrapAsync(tasksGetApiTasks(
      this,
      options,
    ));
  }

  /**
   * Get a specific Task
   *
   * @remarks
   * Returns a specific Task by ID
   */
  async getApiTasksId(
    request: operations.GetApiTasksIdRequest,
    options?: RequestOptions,
  ): Promise<components.Task> {
    return unwrapAsync(tasksGetApiTasksId(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete a Task
   *
   * @remarks
   * Deletes a specific Task by ID
   */
  async deleteApiTasksId(
    request: operations.DeleteApiTasksIdRequest,
    options?: RequestOptions,
  ): Promise<operations.DeleteApiTasksIdResponseBody> {
    return unwrapAsync(tasksDeleteApiTasksId(
      this,
      request,
      options,
    ));
  }
}
