/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { queuesDeleteApiQueuesId } from "../funcs/queuesDeleteApiQueuesId.js";
import { queuesGetApiQueues } from "../funcs/queuesGetApiQueues.js";
import { queuesGetApiQueuesId } from "../funcs/queuesGetApiQueuesId.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Queues extends ClientSDK {
  /**
   * List all Queues
   *
   * @remarks
   * Returns a list of all Queues
   */
  async getApiQueues(
    options?: RequestOptions,
  ): Promise<operations.GetApiQueuesResponseBody> {
    return unwrapAsync(queuesGetApiQueues(
      this,
      options,
    ));
  }

  /**
   * Get a specific Queue
   *
   * @remarks
   * Returns a specific Queue by ID
   */
  async getApiQueuesId(
    request: operations.GetApiQueuesIdRequest,
    options?: RequestOptions,
  ): Promise<components.Queue> {
    return unwrapAsync(queuesGetApiQueuesId(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete a Queue
   *
   * @remarks
   * Deletes a specific Queue by ID
   */
  async deleteApiQueuesId(
    request: operations.DeleteApiQueuesIdRequest,
    options?: RequestOptions,
  ): Promise<operations.DeleteApiQueuesIdResponseBody> {
    return unwrapAsync(queuesDeleteApiQueuesId(
      this,
      request,
      options,
    ));
  }
}
