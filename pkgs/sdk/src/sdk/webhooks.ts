/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { webhooksDeleteApiWebhooksId } from "../funcs/webhooksDeleteApiWebhooksId.js";
import { webhooksGetApiWebhooks } from "../funcs/webhooksGetApiWebhooks.js";
import { webhooksGetApiWebhooksId } from "../funcs/webhooksGetApiWebhooksId.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Webhooks extends ClientSDK {
  /**
   * List all Webhooks
   *
   * @remarks
   * Returns a list of all Webhooks
   */
  async getApiWebhooks(
    options?: RequestOptions,
  ): Promise<operations.GetApiWebhooksResponseBody> {
    return unwrapAsync(webhooksGetApiWebhooks(
      this,
      options,
    ));
  }

  /**
   * Get a specific Webhook
   *
   * @remarks
   * Returns a specific Webhook by ID
   */
  async getApiWebhooksId(
    request: operations.GetApiWebhooksIdRequest,
    options?: RequestOptions,
  ): Promise<components.Webhook> {
    return unwrapAsync(webhooksGetApiWebhooksId(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete a Webhook
   *
   * @remarks
   * Deletes a specific Webhook by ID
   */
  async deleteApiWebhooksId(
    request: operations.DeleteApiWebhooksIdRequest,
    options?: RequestOptions,
  ): Promise<operations.DeleteApiWebhooksIdResponseBody> {
    return unwrapAsync(webhooksDeleteApiWebhooksId(
      this,
      request,
      options,
    ));
  }
}
