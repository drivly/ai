/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { integrationsDeleteApiIntegrationsId } from "../funcs/integrationsDeleteApiIntegrationsId.js";
import { integrationsGetApiIntegrations } from "../funcs/integrationsGetApiIntegrations.js";
import { integrationsGetApiIntegrationsId } from "../funcs/integrationsGetApiIntegrationsId.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Integrations extends ClientSDK {
  /**
   * List all Integrations
   *
   * @remarks
   * Returns a list of all Integrations
   */
  async getApiIntegrations(
    options?: RequestOptions,
  ): Promise<operations.GetApiIntegrationsResponseBody> {
    return unwrapAsync(integrationsGetApiIntegrations(
      this,
      options,
    ));
  }

  /**
   * Get a specific Integration
   *
   * @remarks
   * Returns a specific Integration by ID
   */
  async getApiIntegrationsId(
    request: operations.GetApiIntegrationsIdRequest,
    options?: RequestOptions,
  ): Promise<components.Integration> {
    return unwrapAsync(integrationsGetApiIntegrationsId(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete a Integration
   *
   * @remarks
   * Deletes a specific Integration by ID
   */
  async deleteApiIntegrationsId(
    request: operations.DeleteApiIntegrationsIdRequest,
    options?: RequestOptions,
  ): Promise<operations.DeleteApiIntegrationsIdResponseBody> {
    return unwrapAsync(integrationsDeleteApiIntegrationsId(
      this,
      request,
      options,
    ));
  }
}
