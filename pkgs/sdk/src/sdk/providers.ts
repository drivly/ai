/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { providersDeleteApiProvidersId } from "../funcs/providersDeleteApiProvidersId.js";
import { providersGetApiProviders } from "../funcs/providersGetApiProviders.js";
import { providersGetApiProvidersId } from "../funcs/providersGetApiProvidersId.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Providers extends ClientSDK {
  /**
   * List all Providers
   *
   * @remarks
   * Returns a list of all Providers
   */
  async getApiProviders(
    options?: RequestOptions,
  ): Promise<operations.GetApiProvidersResponseBody> {
    return unwrapAsync(providersGetApiProviders(
      this,
      options,
    ));
  }

  /**
   * Get a specific Provider
   *
   * @remarks
   * Returns a specific Provider by ID
   */
  async getApiProvidersId(
    request: operations.GetApiProvidersIdRequest,
    options?: RequestOptions,
  ): Promise<components.Provider> {
    return unwrapAsync(providersGetApiProvidersId(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete a Provider
   *
   * @remarks
   * Deletes a specific Provider by ID
   */
  async deleteApiProvidersId(
    request: operations.DeleteApiProvidersIdRequest,
    options?: RequestOptions,
  ): Promise<operations.DeleteApiProvidersIdResponseBody> {
    return unwrapAsync(providersDeleteApiProvidersId(
      this,
      request,
      options,
    ));
  }
}
