/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { domainsDeleteApiDomainsId } from "../funcs/domainsDeleteApiDomainsId.js";
import { domainsGetApiDomains } from "../funcs/domainsGetApiDomains.js";
import { domainsGetApiDomainsId } from "../funcs/domainsGetApiDomainsId.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Domains extends ClientSDK {
  /**
   * List all Domains
   *
   * @remarks
   * Returns a list of all Domains
   */
  async getApiDomains(
    options?: RequestOptions,
  ): Promise<operations.GetApiDomainsResponseBody> {
    return unwrapAsync(domainsGetApiDomains(
      this,
      options,
    ));
  }

  /**
   * Get a specific Domain
   *
   * @remarks
   * Returns a specific Domain by ID
   */
  async getApiDomainsId(
    request: operations.GetApiDomainsIdRequest,
    options?: RequestOptions,
  ): Promise<components.Domain> {
    return unwrapAsync(domainsGetApiDomainsId(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete a Domain
   *
   * @remarks
   * Deletes a specific Domain by ID
   */
  async deleteApiDomainsId(
    request: operations.DeleteApiDomainsIdRequest,
    options?: RequestOptions,
  ): Promise<operations.DeleteApiDomainsIdResponseBody> {
    return unwrapAsync(domainsDeleteApiDomainsId(
      this,
      request,
      options,
    ));
  }
}
