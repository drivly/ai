/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { apiKeysDeleteAPIApikeysId } from "../funcs/apiKeysDeleteAPIApikeysId.js";
import { apiKeysGetAPIApikeys } from "../funcs/apiKeysGetAPIApikeys.js";
import { apiKeysGetAPIApikeysId } from "../funcs/apiKeysGetAPIApikeysId.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class APIKeys extends ClientSDK {
  /**
   * List all API Keys
   *
   * @remarks
   * Returns a list of all API Keys
   */
  async getApiApikeys(
    options?: RequestOptions,
  ): Promise<operations.GetApiApikeysResponseBody> {
    return unwrapAsync(apiKeysGetAPIApikeys(
      this,
      options,
    ));
  }

  /**
   * Get a specific API Key
   *
   * @remarks
   * Returns a specific API Key by ID
   */
  async getApiApikeysId(
    request: operations.GetApiApikeysIdRequest,
    options?: RequestOptions,
  ): Promise<components.APIKey> {
    return unwrapAsync(apiKeysGetAPIApikeysId(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete a API Key
   *
   * @remarks
   * Deletes a specific API Key by ID
   */
  async deleteApiApikeysId(
    request: operations.DeleteApiApikeysIdRequest,
    options?: RequestOptions,
  ): Promise<operations.DeleteApiApikeysIdResponseBody> {
    return unwrapAsync(apiKeysDeleteAPIApikeysId(
      this,
      request,
      options,
    ));
  }
}
