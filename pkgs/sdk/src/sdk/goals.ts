/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { goalsDeleteApiGoalsId } from "../funcs/goalsDeleteApiGoalsId.js";
import { goalsGetApiGoals } from "../funcs/goalsGetApiGoals.js";
import { goalsGetApiGoalsId } from "../funcs/goalsGetApiGoalsId.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Goals extends ClientSDK {
  /**
   * List all Goals
   *
   * @remarks
   * Returns a list of all Goals
   */
  async getApiGoals(
    options?: RequestOptions,
  ): Promise<operations.GetApiGoalsResponseBody> {
    return unwrapAsync(goalsGetApiGoals(
      this,
      options,
    ));
  }

  /**
   * Get a specific Goal
   *
   * @remarks
   * Returns a specific Goal by ID
   */
  async getApiGoalsId(
    request: operations.GetApiGoalsIdRequest,
    options?: RequestOptions,
  ): Promise<components.Goal> {
    return unwrapAsync(goalsGetApiGoalsId(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete a Goal
   *
   * @remarks
   * Deletes a specific Goal by ID
   */
  async deleteApiGoalsId(
    request: operations.DeleteApiGoalsIdRequest,
    options?: RequestOptions,
  ): Promise<operations.DeleteApiGoalsIdResponseBody> {
    return unwrapAsync(goalsDeleteApiGoalsId(
      this,
      request,
      options,
    ));
  }
}
