/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetApiTracesIdRequest = {
  /**
   * The ID of the Trace
   */
  id: string;
};

/** @internal */
export const GetApiTracesIdRequest$inboundSchema: z.ZodType<
  GetApiTracesIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type GetApiTracesIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const GetApiTracesIdRequest$outboundSchema: z.ZodType<
  GetApiTracesIdRequest$Outbound,
  z.ZodTypeDef,
  GetApiTracesIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiTracesIdRequest$ {
  /** @deprecated use `GetApiTracesIdRequest$inboundSchema` instead. */
  export const inboundSchema = GetApiTracesIdRequest$inboundSchema;
  /** @deprecated use `GetApiTracesIdRequest$outboundSchema` instead. */
  export const outboundSchema = GetApiTracesIdRequest$outboundSchema;
  /** @deprecated use `GetApiTracesIdRequest$Outbound` instead. */
  export type Outbound = GetApiTracesIdRequest$Outbound;
}

export function getApiTracesIdRequestToJSON(
  getApiTracesIdRequest: GetApiTracesIdRequest,
): string {
  return JSON.stringify(
    GetApiTracesIdRequest$outboundSchema.parse(getApiTracesIdRequest),
  );
}

export function getApiTracesIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetApiTracesIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetApiTracesIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetApiTracesIdRequest' from JSON`,
  );
}
