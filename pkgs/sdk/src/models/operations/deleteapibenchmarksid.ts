/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteApiBenchmarksIdRequest = {
  /**
   * The ID of the Benchmark
   */
  id: string;
};

/**
 * Successfully deleted
 */
export type DeleteApiBenchmarksIdResponseBody = {
  message?: string | undefined;
};

/** @internal */
export const DeleteApiBenchmarksIdRequest$inboundSchema: z.ZodType<
  DeleteApiBenchmarksIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type DeleteApiBenchmarksIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const DeleteApiBenchmarksIdRequest$outboundSchema: z.ZodType<
  DeleteApiBenchmarksIdRequest$Outbound,
  z.ZodTypeDef,
  DeleteApiBenchmarksIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiBenchmarksIdRequest$ {
  /** @deprecated use `DeleteApiBenchmarksIdRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteApiBenchmarksIdRequest$inboundSchema;
  /** @deprecated use `DeleteApiBenchmarksIdRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteApiBenchmarksIdRequest$outboundSchema;
  /** @deprecated use `DeleteApiBenchmarksIdRequest$Outbound` instead. */
  export type Outbound = DeleteApiBenchmarksIdRequest$Outbound;
}

export function deleteApiBenchmarksIdRequestToJSON(
  deleteApiBenchmarksIdRequest: DeleteApiBenchmarksIdRequest,
): string {
  return JSON.stringify(
    DeleteApiBenchmarksIdRequest$outboundSchema.parse(
      deleteApiBenchmarksIdRequest,
    ),
  );
}

export function deleteApiBenchmarksIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteApiBenchmarksIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteApiBenchmarksIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiBenchmarksIdRequest' from JSON`,
  );
}

/** @internal */
export const DeleteApiBenchmarksIdResponseBody$inboundSchema: z.ZodType<
  DeleteApiBenchmarksIdResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string().optional(),
});

/** @internal */
export type DeleteApiBenchmarksIdResponseBody$Outbound = {
  message?: string | undefined;
};

/** @internal */
export const DeleteApiBenchmarksIdResponseBody$outboundSchema: z.ZodType<
  DeleteApiBenchmarksIdResponseBody$Outbound,
  z.ZodTypeDef,
  DeleteApiBenchmarksIdResponseBody
> = z.object({
  message: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiBenchmarksIdResponseBody$ {
  /** @deprecated use `DeleteApiBenchmarksIdResponseBody$inboundSchema` instead. */
  export const inboundSchema = DeleteApiBenchmarksIdResponseBody$inboundSchema;
  /** @deprecated use `DeleteApiBenchmarksIdResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    DeleteApiBenchmarksIdResponseBody$outboundSchema;
  /** @deprecated use `DeleteApiBenchmarksIdResponseBody$Outbound` instead. */
  export type Outbound = DeleteApiBenchmarksIdResponseBody$Outbound;
}

export function deleteApiBenchmarksIdResponseBodyToJSON(
  deleteApiBenchmarksIdResponseBody: DeleteApiBenchmarksIdResponseBody,
): string {
  return JSON.stringify(
    DeleteApiBenchmarksIdResponseBody$outboundSchema.parse(
      deleteApiBenchmarksIdResponseBody,
    ),
  );
}

export function deleteApiBenchmarksIdResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<DeleteApiBenchmarksIdResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteApiBenchmarksIdResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiBenchmarksIdResponseBody' from JSON`,
  );
}
