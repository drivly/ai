/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetApiFunctionsIdRequest = {
  /**
   * The ID of the Function
   */
  id: string;
};

/** @internal */
export const GetApiFunctionsIdRequest$inboundSchema: z.ZodType<
  GetApiFunctionsIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type GetApiFunctionsIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const GetApiFunctionsIdRequest$outboundSchema: z.ZodType<
  GetApiFunctionsIdRequest$Outbound,
  z.ZodTypeDef,
  GetApiFunctionsIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiFunctionsIdRequest$ {
  /** @deprecated use `GetApiFunctionsIdRequest$inboundSchema` instead. */
  export const inboundSchema = GetApiFunctionsIdRequest$inboundSchema;
  /** @deprecated use `GetApiFunctionsIdRequest$outboundSchema` instead. */
  export const outboundSchema = GetApiFunctionsIdRequest$outboundSchema;
  /** @deprecated use `GetApiFunctionsIdRequest$Outbound` instead. */
  export type Outbound = GetApiFunctionsIdRequest$Outbound;
}

export function getApiFunctionsIdRequestToJSON(
  getApiFunctionsIdRequest: GetApiFunctionsIdRequest,
): string {
  return JSON.stringify(
    GetApiFunctionsIdRequest$outboundSchema.parse(getApiFunctionsIdRequest),
  );
}

export function getApiFunctionsIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetApiFunctionsIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetApiFunctionsIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetApiFunctionsIdRequest' from JSON`,
  );
}
