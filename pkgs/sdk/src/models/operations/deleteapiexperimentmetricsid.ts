/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteApiExperimentMetricsIdRequest = {
  /**
   * The ID of the Experiment Metric
   */
  id: string;
};

/**
 * Successfully deleted
 */
export type DeleteApiExperimentMetricsIdResponseBody = {
  message?: string | undefined;
};

/** @internal */
export const DeleteApiExperimentMetricsIdRequest$inboundSchema: z.ZodType<
  DeleteApiExperimentMetricsIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type DeleteApiExperimentMetricsIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const DeleteApiExperimentMetricsIdRequest$outboundSchema: z.ZodType<
  DeleteApiExperimentMetricsIdRequest$Outbound,
  z.ZodTypeDef,
  DeleteApiExperimentMetricsIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiExperimentMetricsIdRequest$ {
  /** @deprecated use `DeleteApiExperimentMetricsIdRequest$inboundSchema` instead. */
  export const inboundSchema =
    DeleteApiExperimentMetricsIdRequest$inboundSchema;
  /** @deprecated use `DeleteApiExperimentMetricsIdRequest$outboundSchema` instead. */
  export const outboundSchema =
    DeleteApiExperimentMetricsIdRequest$outboundSchema;
  /** @deprecated use `DeleteApiExperimentMetricsIdRequest$Outbound` instead. */
  export type Outbound = DeleteApiExperimentMetricsIdRequest$Outbound;
}

export function deleteApiExperimentMetricsIdRequestToJSON(
  deleteApiExperimentMetricsIdRequest: DeleteApiExperimentMetricsIdRequest,
): string {
  return JSON.stringify(
    DeleteApiExperimentMetricsIdRequest$outboundSchema.parse(
      deleteApiExperimentMetricsIdRequest,
    ),
  );
}

export function deleteApiExperimentMetricsIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteApiExperimentMetricsIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      DeleteApiExperimentMetricsIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiExperimentMetricsIdRequest' from JSON`,
  );
}

/** @internal */
export const DeleteApiExperimentMetricsIdResponseBody$inboundSchema: z.ZodType<
  DeleteApiExperimentMetricsIdResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string().optional(),
});

/** @internal */
export type DeleteApiExperimentMetricsIdResponseBody$Outbound = {
  message?: string | undefined;
};

/** @internal */
export const DeleteApiExperimentMetricsIdResponseBody$outboundSchema: z.ZodType<
  DeleteApiExperimentMetricsIdResponseBody$Outbound,
  z.ZodTypeDef,
  DeleteApiExperimentMetricsIdResponseBody
> = z.object({
  message: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiExperimentMetricsIdResponseBody$ {
  /** @deprecated use `DeleteApiExperimentMetricsIdResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    DeleteApiExperimentMetricsIdResponseBody$inboundSchema;
  /** @deprecated use `DeleteApiExperimentMetricsIdResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    DeleteApiExperimentMetricsIdResponseBody$outboundSchema;
  /** @deprecated use `DeleteApiExperimentMetricsIdResponseBody$Outbound` instead. */
  export type Outbound = DeleteApiExperimentMetricsIdResponseBody$Outbound;
}

export function deleteApiExperimentMetricsIdResponseBodyToJSON(
  deleteApiExperimentMetricsIdResponseBody:
    DeleteApiExperimentMetricsIdResponseBody,
): string {
  return JSON.stringify(
    DeleteApiExperimentMetricsIdResponseBody$outboundSchema.parse(
      deleteApiExperimentMetricsIdResponseBody,
    ),
  );
}

export function deleteApiExperimentMetricsIdResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  DeleteApiExperimentMetricsIdResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DeleteApiExperimentMetricsIdResponseBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DeleteApiExperimentMetricsIdResponseBody' from JSON`,
  );
}
