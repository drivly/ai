/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteApiSettingsIdRequest = {
  /**
   * The ID of the Setting
   */
  id: string;
};

/**
 * Successfully deleted
 */
export type DeleteApiSettingsIdResponseBody = {
  message?: string | undefined;
};

/** @internal */
export const DeleteApiSettingsIdRequest$inboundSchema: z.ZodType<
  DeleteApiSettingsIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type DeleteApiSettingsIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const DeleteApiSettingsIdRequest$outboundSchema: z.ZodType<
  DeleteApiSettingsIdRequest$Outbound,
  z.ZodTypeDef,
  DeleteApiSettingsIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiSettingsIdRequest$ {
  /** @deprecated use `DeleteApiSettingsIdRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteApiSettingsIdRequest$inboundSchema;
  /** @deprecated use `DeleteApiSettingsIdRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteApiSettingsIdRequest$outboundSchema;
  /** @deprecated use `DeleteApiSettingsIdRequest$Outbound` instead. */
  export type Outbound = DeleteApiSettingsIdRequest$Outbound;
}

export function deleteApiSettingsIdRequestToJSON(
  deleteApiSettingsIdRequest: DeleteApiSettingsIdRequest,
): string {
  return JSON.stringify(
    DeleteApiSettingsIdRequest$outboundSchema.parse(deleteApiSettingsIdRequest),
  );
}

export function deleteApiSettingsIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteApiSettingsIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteApiSettingsIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiSettingsIdRequest' from JSON`,
  );
}

/** @internal */
export const DeleteApiSettingsIdResponseBody$inboundSchema: z.ZodType<
  DeleteApiSettingsIdResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string().optional(),
});

/** @internal */
export type DeleteApiSettingsIdResponseBody$Outbound = {
  message?: string | undefined;
};

/** @internal */
export const DeleteApiSettingsIdResponseBody$outboundSchema: z.ZodType<
  DeleteApiSettingsIdResponseBody$Outbound,
  z.ZodTypeDef,
  DeleteApiSettingsIdResponseBody
> = z.object({
  message: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiSettingsIdResponseBody$ {
  /** @deprecated use `DeleteApiSettingsIdResponseBody$inboundSchema` instead. */
  export const inboundSchema = DeleteApiSettingsIdResponseBody$inboundSchema;
  /** @deprecated use `DeleteApiSettingsIdResponseBody$outboundSchema` instead. */
  export const outboundSchema = DeleteApiSettingsIdResponseBody$outboundSchema;
  /** @deprecated use `DeleteApiSettingsIdResponseBody$Outbound` instead. */
  export type Outbound = DeleteApiSettingsIdResponseBody$Outbound;
}

export function deleteApiSettingsIdResponseBodyToJSON(
  deleteApiSettingsIdResponseBody: DeleteApiSettingsIdResponseBody,
): string {
  return JSON.stringify(
    DeleteApiSettingsIdResponseBody$outboundSchema.parse(
      deleteApiSettingsIdResponseBody,
    ),
  );
}

export function deleteApiSettingsIdResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<DeleteApiSettingsIdResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteApiSettingsIdResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiSettingsIdResponseBody' from JSON`,
  );
}
