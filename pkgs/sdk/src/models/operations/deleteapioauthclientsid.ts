/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteApiOauthClientsIdRequest = {
  /**
   * The ID of the Oauth Client
   */
  id: string;
};

/**
 * Successfully deleted
 */
export type DeleteApiOauthClientsIdResponseBody = {
  message?: string | undefined;
};

/** @internal */
export const DeleteApiOauthClientsIdRequest$inboundSchema: z.ZodType<
  DeleteApiOauthClientsIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type DeleteApiOauthClientsIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const DeleteApiOauthClientsIdRequest$outboundSchema: z.ZodType<
  DeleteApiOauthClientsIdRequest$Outbound,
  z.ZodTypeDef,
  DeleteApiOauthClientsIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiOauthClientsIdRequest$ {
  /** @deprecated use `DeleteApiOauthClientsIdRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteApiOauthClientsIdRequest$inboundSchema;
  /** @deprecated use `DeleteApiOauthClientsIdRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteApiOauthClientsIdRequest$outboundSchema;
  /** @deprecated use `DeleteApiOauthClientsIdRequest$Outbound` instead. */
  export type Outbound = DeleteApiOauthClientsIdRequest$Outbound;
}

export function deleteApiOauthClientsIdRequestToJSON(
  deleteApiOauthClientsIdRequest: DeleteApiOauthClientsIdRequest,
): string {
  return JSON.stringify(
    DeleteApiOauthClientsIdRequest$outboundSchema.parse(
      deleteApiOauthClientsIdRequest,
    ),
  );
}

export function deleteApiOauthClientsIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteApiOauthClientsIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteApiOauthClientsIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiOauthClientsIdRequest' from JSON`,
  );
}

/** @internal */
export const DeleteApiOauthClientsIdResponseBody$inboundSchema: z.ZodType<
  DeleteApiOauthClientsIdResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string().optional(),
});

/** @internal */
export type DeleteApiOauthClientsIdResponseBody$Outbound = {
  message?: string | undefined;
};

/** @internal */
export const DeleteApiOauthClientsIdResponseBody$outboundSchema: z.ZodType<
  DeleteApiOauthClientsIdResponseBody$Outbound,
  z.ZodTypeDef,
  DeleteApiOauthClientsIdResponseBody
> = z.object({
  message: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiOauthClientsIdResponseBody$ {
  /** @deprecated use `DeleteApiOauthClientsIdResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    DeleteApiOauthClientsIdResponseBody$inboundSchema;
  /** @deprecated use `DeleteApiOauthClientsIdResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    DeleteApiOauthClientsIdResponseBody$outboundSchema;
  /** @deprecated use `DeleteApiOauthClientsIdResponseBody$Outbound` instead. */
  export type Outbound = DeleteApiOauthClientsIdResponseBody$Outbound;
}

export function deleteApiOauthClientsIdResponseBodyToJSON(
  deleteApiOauthClientsIdResponseBody: DeleteApiOauthClientsIdResponseBody,
): string {
  return JSON.stringify(
    DeleteApiOauthClientsIdResponseBody$outboundSchema.parse(
      deleteApiOauthClientsIdResponseBody,
    ),
  );
}

export function deleteApiOauthClientsIdResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<DeleteApiOauthClientsIdResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      DeleteApiOauthClientsIdResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiOauthClientsIdResponseBody' from JSON`,
  );
}
