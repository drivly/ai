/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetApiUsersLinks = {
  home?: string | undefined;
  next?: string | undefined;
  prev?: string | undefined;
};

export type Users = {
  href?: string | undefined;
};

/**
 * Successful response
 */
export type GetApiUsersResponseBody = {
  links?: GetApiUsersLinks | undefined;
  users?: { [k: string]: Users } | undefined;
};

/** @internal */
export const GetApiUsersLinks$inboundSchema: z.ZodType<
  GetApiUsersLinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  home: z.string().optional(),
  next: z.string().optional(),
  prev: z.string().optional(),
});

/** @internal */
export type GetApiUsersLinks$Outbound = {
  home?: string | undefined;
  next?: string | undefined;
  prev?: string | undefined;
};

/** @internal */
export const GetApiUsersLinks$outboundSchema: z.ZodType<
  GetApiUsersLinks$Outbound,
  z.ZodTypeDef,
  GetApiUsersLinks
> = z.object({
  home: z.string().optional(),
  next: z.string().optional(),
  prev: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiUsersLinks$ {
  /** @deprecated use `GetApiUsersLinks$inboundSchema` instead. */
  export const inboundSchema = GetApiUsersLinks$inboundSchema;
  /** @deprecated use `GetApiUsersLinks$outboundSchema` instead. */
  export const outboundSchema = GetApiUsersLinks$outboundSchema;
  /** @deprecated use `GetApiUsersLinks$Outbound` instead. */
  export type Outbound = GetApiUsersLinks$Outbound;
}

export function getApiUsersLinksToJSON(
  getApiUsersLinks: GetApiUsersLinks,
): string {
  return JSON.stringify(
    GetApiUsersLinks$outboundSchema.parse(getApiUsersLinks),
  );
}

export function getApiUsersLinksFromJSON(
  jsonString: string,
): SafeParseResult<GetApiUsersLinks, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetApiUsersLinks$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetApiUsersLinks' from JSON`,
  );
}

/** @internal */
export const Users$inboundSchema: z.ZodType<Users, z.ZodTypeDef, unknown> = z
  .object({
    href: z.string().optional(),
  });

/** @internal */
export type Users$Outbound = {
  href?: string | undefined;
};

/** @internal */
export const Users$outboundSchema: z.ZodType<
  Users$Outbound,
  z.ZodTypeDef,
  Users
> = z.object({
  href: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Users$ {
  /** @deprecated use `Users$inboundSchema` instead. */
  export const inboundSchema = Users$inboundSchema;
  /** @deprecated use `Users$outboundSchema` instead. */
  export const outboundSchema = Users$outboundSchema;
  /** @deprecated use `Users$Outbound` instead. */
  export type Outbound = Users$Outbound;
}

export function usersToJSON(users: Users): string {
  return JSON.stringify(Users$outboundSchema.parse(users));
}

export function usersFromJSON(
  jsonString: string,
): SafeParseResult<Users, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Users$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Users' from JSON`,
  );
}

/** @internal */
export const GetApiUsersResponseBody$inboundSchema: z.ZodType<
  GetApiUsersResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  links: z.lazy(() => GetApiUsersLinks$inboundSchema).optional(),
  users: z.record(z.lazy(() => Users$inboundSchema)).optional(),
});

/** @internal */
export type GetApiUsersResponseBody$Outbound = {
  links?: GetApiUsersLinks$Outbound | undefined;
  users?: { [k: string]: Users$Outbound } | undefined;
};

/** @internal */
export const GetApiUsersResponseBody$outboundSchema: z.ZodType<
  GetApiUsersResponseBody$Outbound,
  z.ZodTypeDef,
  GetApiUsersResponseBody
> = z.object({
  links: z.lazy(() => GetApiUsersLinks$outboundSchema).optional(),
  users: z.record(z.lazy(() => Users$outboundSchema)).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiUsersResponseBody$ {
  /** @deprecated use `GetApiUsersResponseBody$inboundSchema` instead. */
  export const inboundSchema = GetApiUsersResponseBody$inboundSchema;
  /** @deprecated use `GetApiUsersResponseBody$outboundSchema` instead. */
  export const outboundSchema = GetApiUsersResponseBody$outboundSchema;
  /** @deprecated use `GetApiUsersResponseBody$Outbound` instead. */
  export type Outbound = GetApiUsersResponseBody$Outbound;
}

export function getApiUsersResponseBodyToJSON(
  getApiUsersResponseBody: GetApiUsersResponseBody,
): string {
  return JSON.stringify(
    GetApiUsersResponseBody$outboundSchema.parse(getApiUsersResponseBody),
  );
}

export function getApiUsersResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<GetApiUsersResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetApiUsersResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetApiUsersResponseBody' from JSON`,
  );
}
