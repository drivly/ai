/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteApiTasksIdRequest = {
  /**
   * The ID of the Task
   */
  id: string;
};

/**
 * Successfully deleted
 */
export type DeleteApiTasksIdResponseBody = {
  message?: string | undefined;
};

/** @internal */
export const DeleteApiTasksIdRequest$inboundSchema: z.ZodType<
  DeleteApiTasksIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type DeleteApiTasksIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const DeleteApiTasksIdRequest$outboundSchema: z.ZodType<
  DeleteApiTasksIdRequest$Outbound,
  z.ZodTypeDef,
  DeleteApiTasksIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiTasksIdRequest$ {
  /** @deprecated use `DeleteApiTasksIdRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteApiTasksIdRequest$inboundSchema;
  /** @deprecated use `DeleteApiTasksIdRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteApiTasksIdRequest$outboundSchema;
  /** @deprecated use `DeleteApiTasksIdRequest$Outbound` instead. */
  export type Outbound = DeleteApiTasksIdRequest$Outbound;
}

export function deleteApiTasksIdRequestToJSON(
  deleteApiTasksIdRequest: DeleteApiTasksIdRequest,
): string {
  return JSON.stringify(
    DeleteApiTasksIdRequest$outboundSchema.parse(deleteApiTasksIdRequest),
  );
}

export function deleteApiTasksIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteApiTasksIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteApiTasksIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiTasksIdRequest' from JSON`,
  );
}

/** @internal */
export const DeleteApiTasksIdResponseBody$inboundSchema: z.ZodType<
  DeleteApiTasksIdResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string().optional(),
});

/** @internal */
export type DeleteApiTasksIdResponseBody$Outbound = {
  message?: string | undefined;
};

/** @internal */
export const DeleteApiTasksIdResponseBody$outboundSchema: z.ZodType<
  DeleteApiTasksIdResponseBody$Outbound,
  z.ZodTypeDef,
  DeleteApiTasksIdResponseBody
> = z.object({
  message: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiTasksIdResponseBody$ {
  /** @deprecated use `DeleteApiTasksIdResponseBody$inboundSchema` instead. */
  export const inboundSchema = DeleteApiTasksIdResponseBody$inboundSchema;
  /** @deprecated use `DeleteApiTasksIdResponseBody$outboundSchema` instead. */
  export const outboundSchema = DeleteApiTasksIdResponseBody$outboundSchema;
  /** @deprecated use `DeleteApiTasksIdResponseBody$Outbound` instead. */
  export type Outbound = DeleteApiTasksIdResponseBody$Outbound;
}

export function deleteApiTasksIdResponseBodyToJSON(
  deleteApiTasksIdResponseBody: DeleteApiTasksIdResponseBody,
): string {
  return JSON.stringify(
    DeleteApiTasksIdResponseBody$outboundSchema.parse(
      deleteApiTasksIdResponseBody,
    ),
  );
}

export function deleteApiTasksIdResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<DeleteApiTasksIdResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteApiTasksIdResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiTasksIdResponseBody' from JSON`,
  );
}
