/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteApiEvalRunsIdRequest = {
  /**
   * The ID of the Eval Run
   */
  id: string;
};

/**
 * Successfully deleted
 */
export type DeleteApiEvalRunsIdResponseBody = {
  message?: string | undefined;
};

/** @internal */
export const DeleteApiEvalRunsIdRequest$inboundSchema: z.ZodType<
  DeleteApiEvalRunsIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type DeleteApiEvalRunsIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const DeleteApiEvalRunsIdRequest$outboundSchema: z.ZodType<
  DeleteApiEvalRunsIdRequest$Outbound,
  z.ZodTypeDef,
  DeleteApiEvalRunsIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiEvalRunsIdRequest$ {
  /** @deprecated use `DeleteApiEvalRunsIdRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteApiEvalRunsIdRequest$inboundSchema;
  /** @deprecated use `DeleteApiEvalRunsIdRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteApiEvalRunsIdRequest$outboundSchema;
  /** @deprecated use `DeleteApiEvalRunsIdRequest$Outbound` instead. */
  export type Outbound = DeleteApiEvalRunsIdRequest$Outbound;
}

export function deleteApiEvalRunsIdRequestToJSON(
  deleteApiEvalRunsIdRequest: DeleteApiEvalRunsIdRequest,
): string {
  return JSON.stringify(
    DeleteApiEvalRunsIdRequest$outboundSchema.parse(deleteApiEvalRunsIdRequest),
  );
}

export function deleteApiEvalRunsIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteApiEvalRunsIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteApiEvalRunsIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiEvalRunsIdRequest' from JSON`,
  );
}

/** @internal */
export const DeleteApiEvalRunsIdResponseBody$inboundSchema: z.ZodType<
  DeleteApiEvalRunsIdResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string().optional(),
});

/** @internal */
export type DeleteApiEvalRunsIdResponseBody$Outbound = {
  message?: string | undefined;
};

/** @internal */
export const DeleteApiEvalRunsIdResponseBody$outboundSchema: z.ZodType<
  DeleteApiEvalRunsIdResponseBody$Outbound,
  z.ZodTypeDef,
  DeleteApiEvalRunsIdResponseBody
> = z.object({
  message: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiEvalRunsIdResponseBody$ {
  /** @deprecated use `DeleteApiEvalRunsIdResponseBody$inboundSchema` instead. */
  export const inboundSchema = DeleteApiEvalRunsIdResponseBody$inboundSchema;
  /** @deprecated use `DeleteApiEvalRunsIdResponseBody$outboundSchema` instead. */
  export const outboundSchema = DeleteApiEvalRunsIdResponseBody$outboundSchema;
  /** @deprecated use `DeleteApiEvalRunsIdResponseBody$Outbound` instead. */
  export type Outbound = DeleteApiEvalRunsIdResponseBody$Outbound;
}

export function deleteApiEvalRunsIdResponseBodyToJSON(
  deleteApiEvalRunsIdResponseBody: DeleteApiEvalRunsIdResponseBody,
): string {
  return JSON.stringify(
    DeleteApiEvalRunsIdResponseBody$outboundSchema.parse(
      deleteApiEvalRunsIdResponseBody,
    ),
  );
}

export function deleteApiEvalRunsIdResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<DeleteApiEvalRunsIdResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteApiEvalRunsIdResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiEvalRunsIdResponseBody' from JSON`,
  );
}
