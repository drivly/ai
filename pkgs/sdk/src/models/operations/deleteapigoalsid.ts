/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteApiGoalsIdRequest = {
  /**
   * The ID of the Goal
   */
  id: string;
};

/**
 * Successfully deleted
 */
export type DeleteApiGoalsIdResponseBody = {
  message?: string | undefined;
};

/** @internal */
export const DeleteApiGoalsIdRequest$inboundSchema: z.ZodType<
  DeleteApiGoalsIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type DeleteApiGoalsIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const DeleteApiGoalsIdRequest$outboundSchema: z.ZodType<
  DeleteApiGoalsIdRequest$Outbound,
  z.ZodTypeDef,
  DeleteApiGoalsIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiGoalsIdRequest$ {
  /** @deprecated use `DeleteApiGoalsIdRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteApiGoalsIdRequest$inboundSchema;
  /** @deprecated use `DeleteApiGoalsIdRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteApiGoalsIdRequest$outboundSchema;
  /** @deprecated use `DeleteApiGoalsIdRequest$Outbound` instead. */
  export type Outbound = DeleteApiGoalsIdRequest$Outbound;
}

export function deleteApiGoalsIdRequestToJSON(
  deleteApiGoalsIdRequest: DeleteApiGoalsIdRequest,
): string {
  return JSON.stringify(
    DeleteApiGoalsIdRequest$outboundSchema.parse(deleteApiGoalsIdRequest),
  );
}

export function deleteApiGoalsIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteApiGoalsIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteApiGoalsIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiGoalsIdRequest' from JSON`,
  );
}

/** @internal */
export const DeleteApiGoalsIdResponseBody$inboundSchema: z.ZodType<
  DeleteApiGoalsIdResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string().optional(),
});

/** @internal */
export type DeleteApiGoalsIdResponseBody$Outbound = {
  message?: string | undefined;
};

/** @internal */
export const DeleteApiGoalsIdResponseBody$outboundSchema: z.ZodType<
  DeleteApiGoalsIdResponseBody$Outbound,
  z.ZodTypeDef,
  DeleteApiGoalsIdResponseBody
> = z.object({
  message: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiGoalsIdResponseBody$ {
  /** @deprecated use `DeleteApiGoalsIdResponseBody$inboundSchema` instead. */
  export const inboundSchema = DeleteApiGoalsIdResponseBody$inboundSchema;
  /** @deprecated use `DeleteApiGoalsIdResponseBody$outboundSchema` instead. */
  export const outboundSchema = DeleteApiGoalsIdResponseBody$outboundSchema;
  /** @deprecated use `DeleteApiGoalsIdResponseBody$Outbound` instead. */
  export type Outbound = DeleteApiGoalsIdResponseBody$Outbound;
}

export function deleteApiGoalsIdResponseBodyToJSON(
  deleteApiGoalsIdResponseBody: DeleteApiGoalsIdResponseBody,
): string {
  return JSON.stringify(
    DeleteApiGoalsIdResponseBody$outboundSchema.parse(
      deleteApiGoalsIdResponseBody,
    ),
  );
}

export function deleteApiGoalsIdResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<DeleteApiGoalsIdResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteApiGoalsIdResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiGoalsIdResponseBody' from JSON`,
  );
}
