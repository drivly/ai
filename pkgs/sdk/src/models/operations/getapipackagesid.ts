/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetApiPackagesIdRequest = {
  /**
   * The ID of the Package
   */
  id: string;
};

/** @internal */
export const GetApiPackagesIdRequest$inboundSchema: z.ZodType<
  GetApiPackagesIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type GetApiPackagesIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const GetApiPackagesIdRequest$outboundSchema: z.ZodType<
  GetApiPackagesIdRequest$Outbound,
  z.ZodTypeDef,
  GetApiPackagesIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiPackagesIdRequest$ {
  /** @deprecated use `GetApiPackagesIdRequest$inboundSchema` instead. */
  export const inboundSchema = GetApiPackagesIdRequest$inboundSchema;
  /** @deprecated use `GetApiPackagesIdRequest$outboundSchema` instead. */
  export const outboundSchema = GetApiPackagesIdRequest$outboundSchema;
  /** @deprecated use `GetApiPackagesIdRequest$Outbound` instead. */
  export type Outbound = GetApiPackagesIdRequest$Outbound;
}

export function getApiPackagesIdRequestToJSON(
  getApiPackagesIdRequest: GetApiPackagesIdRequest,
): string {
  return JSON.stringify(
    GetApiPackagesIdRequest$outboundSchema.parse(getApiPackagesIdRequest),
  );
}

export function getApiPackagesIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetApiPackagesIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetApiPackagesIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetApiPackagesIdRequest' from JSON`,
  );
}
