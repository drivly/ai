/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetApiKpisIdRequest = {
  /**
   * The ID of the KPI
   */
  id: string;
};

/** @internal */
export const GetApiKpisIdRequest$inboundSchema: z.ZodType<
  GetApiKpisIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type GetApiKpisIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const GetApiKpisIdRequest$outboundSchema: z.ZodType<
  GetApiKpisIdRequest$Outbound,
  z.ZodTypeDef,
  GetApiKpisIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiKpisIdRequest$ {
  /** @deprecated use `GetApiKpisIdRequest$inboundSchema` instead. */
  export const inboundSchema = GetApiKpisIdRequest$inboundSchema;
  /** @deprecated use `GetApiKpisIdRequest$outboundSchema` instead. */
  export const outboundSchema = GetApiKpisIdRequest$outboundSchema;
  /** @deprecated use `GetApiKpisIdRequest$Outbound` instead. */
  export type Outbound = GetApiKpisIdRequest$Outbound;
}

export function getApiKpisIdRequestToJSON(
  getApiKpisIdRequest: GetApiKpisIdRequest,
): string {
  return JSON.stringify(
    GetApiKpisIdRequest$outboundSchema.parse(getApiKpisIdRequest),
  );
}

export function getApiKpisIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetApiKpisIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetApiKpisIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetApiKpisIdRequest' from JSON`,
  );
}
