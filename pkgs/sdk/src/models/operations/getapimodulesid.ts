/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetApiModulesIdRequest = {
  /**
   * The ID of the Module
   */
  id: string;
};

/** @internal */
export const GetApiModulesIdRequest$inboundSchema: z.ZodType<
  GetApiModulesIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type GetApiModulesIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const GetApiModulesIdRequest$outboundSchema: z.ZodType<
  GetApiModulesIdRequest$Outbound,
  z.ZodTypeDef,
  GetApiModulesIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiModulesIdRequest$ {
  /** @deprecated use `GetApiModulesIdRequest$inboundSchema` instead. */
  export const inboundSchema = GetApiModulesIdRequest$inboundSchema;
  /** @deprecated use `GetApiModulesIdRequest$outboundSchema` instead. */
  export const outboundSchema = GetApiModulesIdRequest$outboundSchema;
  /** @deprecated use `GetApiModulesIdRequest$Outbound` instead. */
  export type Outbound = GetApiModulesIdRequest$Outbound;
}

export function getApiModulesIdRequestToJSON(
  getApiModulesIdRequest: GetApiModulesIdRequest,
): string {
  return JSON.stringify(
    GetApiModulesIdRequest$outboundSchema.parse(getApiModulesIdRequest),
  );
}

export function getApiModulesIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetApiModulesIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetApiModulesIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetApiModulesIdRequest' from JSON`,
  );
}
