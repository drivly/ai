/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteApiDatasetsIdRequest = {
  /**
   * The ID of the Dataset
   */
  id: string;
};

/**
 * Successfully deleted
 */
export type DeleteApiDatasetsIdResponseBody = {
  message?: string | undefined;
};

/** @internal */
export const DeleteApiDatasetsIdRequest$inboundSchema: z.ZodType<
  DeleteApiDatasetsIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type DeleteApiDatasetsIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const DeleteApiDatasetsIdRequest$outboundSchema: z.ZodType<
  DeleteApiDatasetsIdRequest$Outbound,
  z.ZodTypeDef,
  DeleteApiDatasetsIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiDatasetsIdRequest$ {
  /** @deprecated use `DeleteApiDatasetsIdRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteApiDatasetsIdRequest$inboundSchema;
  /** @deprecated use `DeleteApiDatasetsIdRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteApiDatasetsIdRequest$outboundSchema;
  /** @deprecated use `DeleteApiDatasetsIdRequest$Outbound` instead. */
  export type Outbound = DeleteApiDatasetsIdRequest$Outbound;
}

export function deleteApiDatasetsIdRequestToJSON(
  deleteApiDatasetsIdRequest: DeleteApiDatasetsIdRequest,
): string {
  return JSON.stringify(
    DeleteApiDatasetsIdRequest$outboundSchema.parse(deleteApiDatasetsIdRequest),
  );
}

export function deleteApiDatasetsIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteApiDatasetsIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteApiDatasetsIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiDatasetsIdRequest' from JSON`,
  );
}

/** @internal */
export const DeleteApiDatasetsIdResponseBody$inboundSchema: z.ZodType<
  DeleteApiDatasetsIdResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string().optional(),
});

/** @internal */
export type DeleteApiDatasetsIdResponseBody$Outbound = {
  message?: string | undefined;
};

/** @internal */
export const DeleteApiDatasetsIdResponseBody$outboundSchema: z.ZodType<
  DeleteApiDatasetsIdResponseBody$Outbound,
  z.ZodTypeDef,
  DeleteApiDatasetsIdResponseBody
> = z.object({
  message: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiDatasetsIdResponseBody$ {
  /** @deprecated use `DeleteApiDatasetsIdResponseBody$inboundSchema` instead. */
  export const inboundSchema = DeleteApiDatasetsIdResponseBody$inboundSchema;
  /** @deprecated use `DeleteApiDatasetsIdResponseBody$outboundSchema` instead. */
  export const outboundSchema = DeleteApiDatasetsIdResponseBody$outboundSchema;
  /** @deprecated use `DeleteApiDatasetsIdResponseBody$Outbound` instead. */
  export type Outbound = DeleteApiDatasetsIdResponseBody$Outbound;
}

export function deleteApiDatasetsIdResponseBodyToJSON(
  deleteApiDatasetsIdResponseBody: DeleteApiDatasetsIdResponseBody,
): string {
  return JSON.stringify(
    DeleteApiDatasetsIdResponseBody$outboundSchema.parse(
      deleteApiDatasetsIdResponseBody,
    ),
  );
}

export function deleteApiDatasetsIdResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<DeleteApiDatasetsIdResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteApiDatasetsIdResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiDatasetsIdResponseBody' from JSON`,
  );
}
