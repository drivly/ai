/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteApiAgentsIdRequest = {
  /**
   * The ID of the Agent
   */
  id: string;
};

/**
 * Successfully deleted
 */
export type DeleteApiAgentsIdResponseBody = {
  message?: string | undefined;
};

/** @internal */
export const DeleteApiAgentsIdRequest$inboundSchema: z.ZodType<
  DeleteApiAgentsIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type DeleteApiAgentsIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const DeleteApiAgentsIdRequest$outboundSchema: z.ZodType<
  DeleteApiAgentsIdRequest$Outbound,
  z.ZodTypeDef,
  DeleteApiAgentsIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiAgentsIdRequest$ {
  /** @deprecated use `DeleteApiAgentsIdRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteApiAgentsIdRequest$inboundSchema;
  /** @deprecated use `DeleteApiAgentsIdRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteApiAgentsIdRequest$outboundSchema;
  /** @deprecated use `DeleteApiAgentsIdRequest$Outbound` instead. */
  export type Outbound = DeleteApiAgentsIdRequest$Outbound;
}

export function deleteApiAgentsIdRequestToJSON(
  deleteApiAgentsIdRequest: DeleteApiAgentsIdRequest,
): string {
  return JSON.stringify(
    DeleteApiAgentsIdRequest$outboundSchema.parse(deleteApiAgentsIdRequest),
  );
}

export function deleteApiAgentsIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteApiAgentsIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteApiAgentsIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiAgentsIdRequest' from JSON`,
  );
}

/** @internal */
export const DeleteApiAgentsIdResponseBody$inboundSchema: z.ZodType<
  DeleteApiAgentsIdResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string().optional(),
});

/** @internal */
export type DeleteApiAgentsIdResponseBody$Outbound = {
  message?: string | undefined;
};

/** @internal */
export const DeleteApiAgentsIdResponseBody$outboundSchema: z.ZodType<
  DeleteApiAgentsIdResponseBody$Outbound,
  z.ZodTypeDef,
  DeleteApiAgentsIdResponseBody
> = z.object({
  message: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiAgentsIdResponseBody$ {
  /** @deprecated use `DeleteApiAgentsIdResponseBody$inboundSchema` instead. */
  export const inboundSchema = DeleteApiAgentsIdResponseBody$inboundSchema;
  /** @deprecated use `DeleteApiAgentsIdResponseBody$outboundSchema` instead. */
  export const outboundSchema = DeleteApiAgentsIdResponseBody$outboundSchema;
  /** @deprecated use `DeleteApiAgentsIdResponseBody$Outbound` instead. */
  export type Outbound = DeleteApiAgentsIdResponseBody$Outbound;
}

export function deleteApiAgentsIdResponseBodyToJSON(
  deleteApiAgentsIdResponseBody: DeleteApiAgentsIdResponseBody,
): string {
  return JSON.stringify(
    DeleteApiAgentsIdResponseBody$outboundSchema.parse(
      deleteApiAgentsIdResponseBody,
    ),
  );
}

export function deleteApiAgentsIdResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<DeleteApiAgentsIdResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteApiAgentsIdResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiAgentsIdResponseBody' from JSON`,
  );
}
