/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetApiGenerationsLinks = {
  home?: string | undefined;
  next?: string | undefined;
  prev?: string | undefined;
};

export type Generations = {
  href?: string | undefined;
};

/**
 * Successful response
 */
export type GetApiGenerationsResponseBody = {
  links?: GetApiGenerationsLinks | undefined;
  generations?: { [k: string]: Generations } | undefined;
};

/** @internal */
export const GetApiGenerationsLinks$inboundSchema: z.ZodType<
  GetApiGenerationsLinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  home: z.string().optional(),
  next: z.string().optional(),
  prev: z.string().optional(),
});

/** @internal */
export type GetApiGenerationsLinks$Outbound = {
  home?: string | undefined;
  next?: string | undefined;
  prev?: string | undefined;
};

/** @internal */
export const GetApiGenerationsLinks$outboundSchema: z.ZodType<
  GetApiGenerationsLinks$Outbound,
  z.ZodTypeDef,
  GetApiGenerationsLinks
> = z.object({
  home: z.string().optional(),
  next: z.string().optional(),
  prev: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiGenerationsLinks$ {
  /** @deprecated use `GetApiGenerationsLinks$inboundSchema` instead. */
  export const inboundSchema = GetApiGenerationsLinks$inboundSchema;
  /** @deprecated use `GetApiGenerationsLinks$outboundSchema` instead. */
  export const outboundSchema = GetApiGenerationsLinks$outboundSchema;
  /** @deprecated use `GetApiGenerationsLinks$Outbound` instead. */
  export type Outbound = GetApiGenerationsLinks$Outbound;
}

export function getApiGenerationsLinksToJSON(
  getApiGenerationsLinks: GetApiGenerationsLinks,
): string {
  return JSON.stringify(
    GetApiGenerationsLinks$outboundSchema.parse(getApiGenerationsLinks),
  );
}

export function getApiGenerationsLinksFromJSON(
  jsonString: string,
): SafeParseResult<GetApiGenerationsLinks, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetApiGenerationsLinks$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetApiGenerationsLinks' from JSON`,
  );
}

/** @internal */
export const Generations$inboundSchema: z.ZodType<
  Generations,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string().optional(),
});

/** @internal */
export type Generations$Outbound = {
  href?: string | undefined;
};

/** @internal */
export const Generations$outboundSchema: z.ZodType<
  Generations$Outbound,
  z.ZodTypeDef,
  Generations
> = z.object({
  href: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Generations$ {
  /** @deprecated use `Generations$inboundSchema` instead. */
  export const inboundSchema = Generations$inboundSchema;
  /** @deprecated use `Generations$outboundSchema` instead. */
  export const outboundSchema = Generations$outboundSchema;
  /** @deprecated use `Generations$Outbound` instead. */
  export type Outbound = Generations$Outbound;
}

export function generationsToJSON(generations: Generations): string {
  return JSON.stringify(Generations$outboundSchema.parse(generations));
}

export function generationsFromJSON(
  jsonString: string,
): SafeParseResult<Generations, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Generations$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Generations' from JSON`,
  );
}

/** @internal */
export const GetApiGenerationsResponseBody$inboundSchema: z.ZodType<
  GetApiGenerationsResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  links: z.lazy(() => GetApiGenerationsLinks$inboundSchema).optional(),
  generations: z.record(z.lazy(() => Generations$inboundSchema)).optional(),
});

/** @internal */
export type GetApiGenerationsResponseBody$Outbound = {
  links?: GetApiGenerationsLinks$Outbound | undefined;
  generations?: { [k: string]: Generations$Outbound } | undefined;
};

/** @internal */
export const GetApiGenerationsResponseBody$outboundSchema: z.ZodType<
  GetApiGenerationsResponseBody$Outbound,
  z.ZodTypeDef,
  GetApiGenerationsResponseBody
> = z.object({
  links: z.lazy(() => GetApiGenerationsLinks$outboundSchema).optional(),
  generations: z.record(z.lazy(() => Generations$outboundSchema)).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiGenerationsResponseBody$ {
  /** @deprecated use `GetApiGenerationsResponseBody$inboundSchema` instead. */
  export const inboundSchema = GetApiGenerationsResponseBody$inboundSchema;
  /** @deprecated use `GetApiGenerationsResponseBody$outboundSchema` instead. */
  export const outboundSchema = GetApiGenerationsResponseBody$outboundSchema;
  /** @deprecated use `GetApiGenerationsResponseBody$Outbound` instead. */
  export type Outbound = GetApiGenerationsResponseBody$Outbound;
}

export function getApiGenerationsResponseBodyToJSON(
  getApiGenerationsResponseBody: GetApiGenerationsResponseBody,
): string {
  return JSON.stringify(
    GetApiGenerationsResponseBody$outboundSchema.parse(
      getApiGenerationsResponseBody,
    ),
  );
}

export function getApiGenerationsResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<GetApiGenerationsResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetApiGenerationsResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetApiGenerationsResponseBody' from JSON`,
  );
}
