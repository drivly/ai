/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteApiIntegrationTriggersIdRequest = {
  /**
   * The ID of the Trigger
   */
  id: string;
};

/**
 * Successfully deleted
 */
export type DeleteApiIntegrationTriggersIdResponseBody = {
  message?: string | undefined;
};

/** @internal */
export const DeleteApiIntegrationTriggersIdRequest$inboundSchema: z.ZodType<
  DeleteApiIntegrationTriggersIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type DeleteApiIntegrationTriggersIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const DeleteApiIntegrationTriggersIdRequest$outboundSchema: z.ZodType<
  DeleteApiIntegrationTriggersIdRequest$Outbound,
  z.ZodTypeDef,
  DeleteApiIntegrationTriggersIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiIntegrationTriggersIdRequest$ {
  /** @deprecated use `DeleteApiIntegrationTriggersIdRequest$inboundSchema` instead. */
  export const inboundSchema =
    DeleteApiIntegrationTriggersIdRequest$inboundSchema;
  /** @deprecated use `DeleteApiIntegrationTriggersIdRequest$outboundSchema` instead. */
  export const outboundSchema =
    DeleteApiIntegrationTriggersIdRequest$outboundSchema;
  /** @deprecated use `DeleteApiIntegrationTriggersIdRequest$Outbound` instead. */
  export type Outbound = DeleteApiIntegrationTriggersIdRequest$Outbound;
}

export function deleteApiIntegrationTriggersIdRequestToJSON(
  deleteApiIntegrationTriggersIdRequest: DeleteApiIntegrationTriggersIdRequest,
): string {
  return JSON.stringify(
    DeleteApiIntegrationTriggersIdRequest$outboundSchema.parse(
      deleteApiIntegrationTriggersIdRequest,
    ),
  );
}

export function deleteApiIntegrationTriggersIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteApiIntegrationTriggersIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      DeleteApiIntegrationTriggersIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiIntegrationTriggersIdRequest' from JSON`,
  );
}

/** @internal */
export const DeleteApiIntegrationTriggersIdResponseBody$inboundSchema:
  z.ZodType<DeleteApiIntegrationTriggersIdResponseBody, z.ZodTypeDef, unknown> =
    z.object({
      message: z.string().optional(),
    });

/** @internal */
export type DeleteApiIntegrationTriggersIdResponseBody$Outbound = {
  message?: string | undefined;
};

/** @internal */
export const DeleteApiIntegrationTriggersIdResponseBody$outboundSchema:
  z.ZodType<
    DeleteApiIntegrationTriggersIdResponseBody$Outbound,
    z.ZodTypeDef,
    DeleteApiIntegrationTriggersIdResponseBody
  > = z.object({
    message: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiIntegrationTriggersIdResponseBody$ {
  /** @deprecated use `DeleteApiIntegrationTriggersIdResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    DeleteApiIntegrationTriggersIdResponseBody$inboundSchema;
  /** @deprecated use `DeleteApiIntegrationTriggersIdResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    DeleteApiIntegrationTriggersIdResponseBody$outboundSchema;
  /** @deprecated use `DeleteApiIntegrationTriggersIdResponseBody$Outbound` instead. */
  export type Outbound = DeleteApiIntegrationTriggersIdResponseBody$Outbound;
}

export function deleteApiIntegrationTriggersIdResponseBodyToJSON(
  deleteApiIntegrationTriggersIdResponseBody:
    DeleteApiIntegrationTriggersIdResponseBody,
): string {
  return JSON.stringify(
    DeleteApiIntegrationTriggersIdResponseBody$outboundSchema.parse(
      deleteApiIntegrationTriggersIdResponseBody,
    ),
  );
}

export function deleteApiIntegrationTriggersIdResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  DeleteApiIntegrationTriggersIdResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DeleteApiIntegrationTriggersIdResponseBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DeleteApiIntegrationTriggersIdResponseBody' from JSON`,
  );
}
