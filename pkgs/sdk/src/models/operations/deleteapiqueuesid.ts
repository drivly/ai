/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteApiQueuesIdRequest = {
  /**
   * The ID of the Queue
   */
  id: string;
};

/**
 * Successfully deleted
 */
export type DeleteApiQueuesIdResponseBody = {
  message?: string | undefined;
};

/** @internal */
export const DeleteApiQueuesIdRequest$inboundSchema: z.ZodType<
  DeleteApiQueuesIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type DeleteApiQueuesIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const DeleteApiQueuesIdRequest$outboundSchema: z.ZodType<
  DeleteApiQueuesIdRequest$Outbound,
  z.ZodTypeDef,
  DeleteApiQueuesIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiQueuesIdRequest$ {
  /** @deprecated use `DeleteApiQueuesIdRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteApiQueuesIdRequest$inboundSchema;
  /** @deprecated use `DeleteApiQueuesIdRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteApiQueuesIdRequest$outboundSchema;
  /** @deprecated use `DeleteApiQueuesIdRequest$Outbound` instead. */
  export type Outbound = DeleteApiQueuesIdRequest$Outbound;
}

export function deleteApiQueuesIdRequestToJSON(
  deleteApiQueuesIdRequest: DeleteApiQueuesIdRequest,
): string {
  return JSON.stringify(
    DeleteApiQueuesIdRequest$outboundSchema.parse(deleteApiQueuesIdRequest),
  );
}

export function deleteApiQueuesIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteApiQueuesIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteApiQueuesIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiQueuesIdRequest' from JSON`,
  );
}

/** @internal */
export const DeleteApiQueuesIdResponseBody$inboundSchema: z.ZodType<
  DeleteApiQueuesIdResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string().optional(),
});

/** @internal */
export type DeleteApiQueuesIdResponseBody$Outbound = {
  message?: string | undefined;
};

/** @internal */
export const DeleteApiQueuesIdResponseBody$outboundSchema: z.ZodType<
  DeleteApiQueuesIdResponseBody$Outbound,
  z.ZodTypeDef,
  DeleteApiQueuesIdResponseBody
> = z.object({
  message: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiQueuesIdResponseBody$ {
  /** @deprecated use `DeleteApiQueuesIdResponseBody$inboundSchema` instead. */
  export const inboundSchema = DeleteApiQueuesIdResponseBody$inboundSchema;
  /** @deprecated use `DeleteApiQueuesIdResponseBody$outboundSchema` instead. */
  export const outboundSchema = DeleteApiQueuesIdResponseBody$outboundSchema;
  /** @deprecated use `DeleteApiQueuesIdResponseBody$Outbound` instead. */
  export type Outbound = DeleteApiQueuesIdResponseBody$Outbound;
}

export function deleteApiQueuesIdResponseBodyToJSON(
  deleteApiQueuesIdResponseBody: DeleteApiQueuesIdResponseBody,
): string {
  return JSON.stringify(
    DeleteApiQueuesIdResponseBody$outboundSchema.parse(
      deleteApiQueuesIdResponseBody,
    ),
  );
}

export function deleteApiQueuesIdResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<DeleteApiQueuesIdResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteApiQueuesIdResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiQueuesIdResponseBody' from JSON`,
  );
}
