/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteApiThingsIdRequest = {
  /**
   * The ID of the Thing
   */
  id: string;
};

/**
 * Successfully deleted
 */
export type DeleteApiThingsIdResponseBody = {
  message?: string | undefined;
};

/** @internal */
export const DeleteApiThingsIdRequest$inboundSchema: z.ZodType<
  DeleteApiThingsIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type DeleteApiThingsIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const DeleteApiThingsIdRequest$outboundSchema: z.ZodType<
  DeleteApiThingsIdRequest$Outbound,
  z.ZodTypeDef,
  DeleteApiThingsIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiThingsIdRequest$ {
  /** @deprecated use `DeleteApiThingsIdRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteApiThingsIdRequest$inboundSchema;
  /** @deprecated use `DeleteApiThingsIdRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteApiThingsIdRequest$outboundSchema;
  /** @deprecated use `DeleteApiThingsIdRequest$Outbound` instead. */
  export type Outbound = DeleteApiThingsIdRequest$Outbound;
}

export function deleteApiThingsIdRequestToJSON(
  deleteApiThingsIdRequest: DeleteApiThingsIdRequest,
): string {
  return JSON.stringify(
    DeleteApiThingsIdRequest$outboundSchema.parse(deleteApiThingsIdRequest),
  );
}

export function deleteApiThingsIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteApiThingsIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteApiThingsIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiThingsIdRequest' from JSON`,
  );
}

/** @internal */
export const DeleteApiThingsIdResponseBody$inboundSchema: z.ZodType<
  DeleteApiThingsIdResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string().optional(),
});

/** @internal */
export type DeleteApiThingsIdResponseBody$Outbound = {
  message?: string | undefined;
};

/** @internal */
export const DeleteApiThingsIdResponseBody$outboundSchema: z.ZodType<
  DeleteApiThingsIdResponseBody$Outbound,
  z.ZodTypeDef,
  DeleteApiThingsIdResponseBody
> = z.object({
  message: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiThingsIdResponseBody$ {
  /** @deprecated use `DeleteApiThingsIdResponseBody$inboundSchema` instead. */
  export const inboundSchema = DeleteApiThingsIdResponseBody$inboundSchema;
  /** @deprecated use `DeleteApiThingsIdResponseBody$outboundSchema` instead. */
  export const outboundSchema = DeleteApiThingsIdResponseBody$outboundSchema;
  /** @deprecated use `DeleteApiThingsIdResponseBody$Outbound` instead. */
  export type Outbound = DeleteApiThingsIdResponseBody$Outbound;
}

export function deleteApiThingsIdResponseBodyToJSON(
  deleteApiThingsIdResponseBody: DeleteApiThingsIdResponseBody,
): string {
  return JSON.stringify(
    DeleteApiThingsIdResponseBody$outboundSchema.parse(
      deleteApiThingsIdResponseBody,
    ),
  );
}

export function deleteApiThingsIdResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<DeleteApiThingsIdResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteApiThingsIdResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiThingsIdResponseBody' from JSON`,
  );
}
