/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetApiEvalRunsIdRequest = {
  /**
   * The ID of the Eval Run
   */
  id: string;
};

/** @internal */
export const GetApiEvalRunsIdRequest$inboundSchema: z.ZodType<
  GetApiEvalRunsIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type GetApiEvalRunsIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const GetApiEvalRunsIdRequest$outboundSchema: z.ZodType<
  GetApiEvalRunsIdRequest$Outbound,
  z.ZodTypeDef,
  GetApiEvalRunsIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiEvalRunsIdRequest$ {
  /** @deprecated use `GetApiEvalRunsIdRequest$inboundSchema` instead. */
  export const inboundSchema = GetApiEvalRunsIdRequest$inboundSchema;
  /** @deprecated use `GetApiEvalRunsIdRequest$outboundSchema` instead. */
  export const outboundSchema = GetApiEvalRunsIdRequest$outboundSchema;
  /** @deprecated use `GetApiEvalRunsIdRequest$Outbound` instead. */
  export type Outbound = GetApiEvalRunsIdRequest$Outbound;
}

export function getApiEvalRunsIdRequestToJSON(
  getApiEvalRunsIdRequest: GetApiEvalRunsIdRequest,
): string {
  return JSON.stringify(
    GetApiEvalRunsIdRequest$outboundSchema.parse(getApiEvalRunsIdRequest),
  );
}

export function getApiEvalRunsIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetApiEvalRunsIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetApiEvalRunsIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetApiEvalRunsIdRequest' from JSON`,
  );
}
