/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetApiOauthClientsLinks = {
  home?: string | undefined;
  next?: string | undefined;
  prev?: string | undefined;
};

export type OauthClients = {
  href?: string | undefined;
};

/**
 * Successful response
 */
export type GetApiOauthClientsResponseBody = {
  links?: GetApiOauthClientsLinks | undefined;
  oauthClients?: { [k: string]: OauthClients } | undefined;
};

/** @internal */
export const GetApiOauthClientsLinks$inboundSchema: z.ZodType<
  GetApiOauthClientsLinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  home: z.string().optional(),
  next: z.string().optional(),
  prev: z.string().optional(),
});

/** @internal */
export type GetApiOauthClientsLinks$Outbound = {
  home?: string | undefined;
  next?: string | undefined;
  prev?: string | undefined;
};

/** @internal */
export const GetApiOauthClientsLinks$outboundSchema: z.ZodType<
  GetApiOauthClientsLinks$Outbound,
  z.ZodTypeDef,
  GetApiOauthClientsLinks
> = z.object({
  home: z.string().optional(),
  next: z.string().optional(),
  prev: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiOauthClientsLinks$ {
  /** @deprecated use `GetApiOauthClientsLinks$inboundSchema` instead. */
  export const inboundSchema = GetApiOauthClientsLinks$inboundSchema;
  /** @deprecated use `GetApiOauthClientsLinks$outboundSchema` instead. */
  export const outboundSchema = GetApiOauthClientsLinks$outboundSchema;
  /** @deprecated use `GetApiOauthClientsLinks$Outbound` instead. */
  export type Outbound = GetApiOauthClientsLinks$Outbound;
}

export function getApiOauthClientsLinksToJSON(
  getApiOauthClientsLinks: GetApiOauthClientsLinks,
): string {
  return JSON.stringify(
    GetApiOauthClientsLinks$outboundSchema.parse(getApiOauthClientsLinks),
  );
}

export function getApiOauthClientsLinksFromJSON(
  jsonString: string,
): SafeParseResult<GetApiOauthClientsLinks, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetApiOauthClientsLinks$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetApiOauthClientsLinks' from JSON`,
  );
}

/** @internal */
export const OauthClients$inboundSchema: z.ZodType<
  OauthClients,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string().optional(),
});

/** @internal */
export type OauthClients$Outbound = {
  href?: string | undefined;
};

/** @internal */
export const OauthClients$outboundSchema: z.ZodType<
  OauthClients$Outbound,
  z.ZodTypeDef,
  OauthClients
> = z.object({
  href: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OauthClients$ {
  /** @deprecated use `OauthClients$inboundSchema` instead. */
  export const inboundSchema = OauthClients$inboundSchema;
  /** @deprecated use `OauthClients$outboundSchema` instead. */
  export const outboundSchema = OauthClients$outboundSchema;
  /** @deprecated use `OauthClients$Outbound` instead. */
  export type Outbound = OauthClients$Outbound;
}

export function oauthClientsToJSON(oauthClients: OauthClients): string {
  return JSON.stringify(OauthClients$outboundSchema.parse(oauthClients));
}

export function oauthClientsFromJSON(
  jsonString: string,
): SafeParseResult<OauthClients, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => OauthClients$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'OauthClients' from JSON`,
  );
}

/** @internal */
export const GetApiOauthClientsResponseBody$inboundSchema: z.ZodType<
  GetApiOauthClientsResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  links: z.lazy(() => GetApiOauthClientsLinks$inboundSchema).optional(),
  "oauth-clients": z.record(z.lazy(() => OauthClients$inboundSchema))
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "oauth-clients": "oauthClients",
  });
});

/** @internal */
export type GetApiOauthClientsResponseBody$Outbound = {
  links?: GetApiOauthClientsLinks$Outbound | undefined;
  "oauth-clients"?: { [k: string]: OauthClients$Outbound } | undefined;
};

/** @internal */
export const GetApiOauthClientsResponseBody$outboundSchema: z.ZodType<
  GetApiOauthClientsResponseBody$Outbound,
  z.ZodTypeDef,
  GetApiOauthClientsResponseBody
> = z.object({
  links: z.lazy(() => GetApiOauthClientsLinks$outboundSchema).optional(),
  oauthClients: z.record(z.lazy(() => OauthClients$outboundSchema)).optional(),
}).transform((v) => {
  return remap$(v, {
    oauthClients: "oauth-clients",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiOauthClientsResponseBody$ {
  /** @deprecated use `GetApiOauthClientsResponseBody$inboundSchema` instead. */
  export const inboundSchema = GetApiOauthClientsResponseBody$inboundSchema;
  /** @deprecated use `GetApiOauthClientsResponseBody$outboundSchema` instead. */
  export const outboundSchema = GetApiOauthClientsResponseBody$outboundSchema;
  /** @deprecated use `GetApiOauthClientsResponseBody$Outbound` instead. */
  export type Outbound = GetApiOauthClientsResponseBody$Outbound;
}

export function getApiOauthClientsResponseBodyToJSON(
  getApiOauthClientsResponseBody: GetApiOauthClientsResponseBody,
): string {
  return JSON.stringify(
    GetApiOauthClientsResponseBody$outboundSchema.parse(
      getApiOauthClientsResponseBody,
    ),
  );
}

export function getApiOauthClientsResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<GetApiOauthClientsResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetApiOauthClientsResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetApiOauthClientsResponseBody' from JSON`,
  );
}
