/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteApiActionsIdRequest = {
  /**
   * The ID of the Action
   */
  id: string;
};

/**
 * Successfully deleted
 */
export type DeleteApiActionsIdResponseBody = {
  message?: string | undefined;
};

/** @internal */
export const DeleteApiActionsIdRequest$inboundSchema: z.ZodType<
  DeleteApiActionsIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type DeleteApiActionsIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const DeleteApiActionsIdRequest$outboundSchema: z.ZodType<
  DeleteApiActionsIdRequest$Outbound,
  z.ZodTypeDef,
  DeleteApiActionsIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiActionsIdRequest$ {
  /** @deprecated use `DeleteApiActionsIdRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteApiActionsIdRequest$inboundSchema;
  /** @deprecated use `DeleteApiActionsIdRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteApiActionsIdRequest$outboundSchema;
  /** @deprecated use `DeleteApiActionsIdRequest$Outbound` instead. */
  export type Outbound = DeleteApiActionsIdRequest$Outbound;
}

export function deleteApiActionsIdRequestToJSON(
  deleteApiActionsIdRequest: DeleteApiActionsIdRequest,
): string {
  return JSON.stringify(
    DeleteApiActionsIdRequest$outboundSchema.parse(deleteApiActionsIdRequest),
  );
}

export function deleteApiActionsIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteApiActionsIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteApiActionsIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiActionsIdRequest' from JSON`,
  );
}

/** @internal */
export const DeleteApiActionsIdResponseBody$inboundSchema: z.ZodType<
  DeleteApiActionsIdResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string().optional(),
});

/** @internal */
export type DeleteApiActionsIdResponseBody$Outbound = {
  message?: string | undefined;
};

/** @internal */
export const DeleteApiActionsIdResponseBody$outboundSchema: z.ZodType<
  DeleteApiActionsIdResponseBody$Outbound,
  z.ZodTypeDef,
  DeleteApiActionsIdResponseBody
> = z.object({
  message: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiActionsIdResponseBody$ {
  /** @deprecated use `DeleteApiActionsIdResponseBody$inboundSchema` instead. */
  export const inboundSchema = DeleteApiActionsIdResponseBody$inboundSchema;
  /** @deprecated use `DeleteApiActionsIdResponseBody$outboundSchema` instead. */
  export const outboundSchema = DeleteApiActionsIdResponseBody$outboundSchema;
  /** @deprecated use `DeleteApiActionsIdResponseBody$Outbound` instead. */
  export type Outbound = DeleteApiActionsIdResponseBody$Outbound;
}

export function deleteApiActionsIdResponseBodyToJSON(
  deleteApiActionsIdResponseBody: DeleteApiActionsIdResponseBody,
): string {
  return JSON.stringify(
    DeleteApiActionsIdResponseBody$outboundSchema.parse(
      deleteApiActionsIdResponseBody,
    ),
  );
}

export function deleteApiActionsIdResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<DeleteApiActionsIdResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteApiActionsIdResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiActionsIdResponseBody' from JSON`,
  );
}
