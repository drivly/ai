/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetApiVerbsIdRequest = {
  /**
   * The ID of the Verb
   */
  id: string;
};

/** @internal */
export const GetApiVerbsIdRequest$inboundSchema: z.ZodType<
  GetApiVerbsIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type GetApiVerbsIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const GetApiVerbsIdRequest$outboundSchema: z.ZodType<
  GetApiVerbsIdRequest$Outbound,
  z.ZodTypeDef,
  GetApiVerbsIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiVerbsIdRequest$ {
  /** @deprecated use `GetApiVerbsIdRequest$inboundSchema` instead. */
  export const inboundSchema = GetApiVerbsIdRequest$inboundSchema;
  /** @deprecated use `GetApiVerbsIdRequest$outboundSchema` instead. */
  export const outboundSchema = GetApiVerbsIdRequest$outboundSchema;
  /** @deprecated use `GetApiVerbsIdRequest$Outbound` instead. */
  export type Outbound = GetApiVerbsIdRequest$Outbound;
}

export function getApiVerbsIdRequestToJSON(
  getApiVerbsIdRequest: GetApiVerbsIdRequest,
): string {
  return JSON.stringify(
    GetApiVerbsIdRequest$outboundSchema.parse(getApiVerbsIdRequest),
  );
}

export function getApiVerbsIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetApiVerbsIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetApiVerbsIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetApiVerbsIdRequest' from JSON`,
  );
}
