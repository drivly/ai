/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteApiProjectsIdRequest = {
  /**
   * The ID of the Project
   */
  id: string;
};

/**
 * Successfully deleted
 */
export type DeleteApiProjectsIdResponseBody = {
  message?: string | undefined;
};

/** @internal */
export const DeleteApiProjectsIdRequest$inboundSchema: z.ZodType<
  DeleteApiProjectsIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type DeleteApiProjectsIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const DeleteApiProjectsIdRequest$outboundSchema: z.ZodType<
  DeleteApiProjectsIdRequest$Outbound,
  z.ZodTypeDef,
  DeleteApiProjectsIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiProjectsIdRequest$ {
  /** @deprecated use `DeleteApiProjectsIdRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteApiProjectsIdRequest$inboundSchema;
  /** @deprecated use `DeleteApiProjectsIdRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteApiProjectsIdRequest$outboundSchema;
  /** @deprecated use `DeleteApiProjectsIdRequest$Outbound` instead. */
  export type Outbound = DeleteApiProjectsIdRequest$Outbound;
}

export function deleteApiProjectsIdRequestToJSON(
  deleteApiProjectsIdRequest: DeleteApiProjectsIdRequest,
): string {
  return JSON.stringify(
    DeleteApiProjectsIdRequest$outboundSchema.parse(deleteApiProjectsIdRequest),
  );
}

export function deleteApiProjectsIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteApiProjectsIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteApiProjectsIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiProjectsIdRequest' from JSON`,
  );
}

/** @internal */
export const DeleteApiProjectsIdResponseBody$inboundSchema: z.ZodType<
  DeleteApiProjectsIdResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string().optional(),
});

/** @internal */
export type DeleteApiProjectsIdResponseBody$Outbound = {
  message?: string | undefined;
};

/** @internal */
export const DeleteApiProjectsIdResponseBody$outboundSchema: z.ZodType<
  DeleteApiProjectsIdResponseBody$Outbound,
  z.ZodTypeDef,
  DeleteApiProjectsIdResponseBody
> = z.object({
  message: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiProjectsIdResponseBody$ {
  /** @deprecated use `DeleteApiProjectsIdResponseBody$inboundSchema` instead. */
  export const inboundSchema = DeleteApiProjectsIdResponseBody$inboundSchema;
  /** @deprecated use `DeleteApiProjectsIdResponseBody$outboundSchema` instead. */
  export const outboundSchema = DeleteApiProjectsIdResponseBody$outboundSchema;
  /** @deprecated use `DeleteApiProjectsIdResponseBody$Outbound` instead. */
  export type Outbound = DeleteApiProjectsIdResponseBody$Outbound;
}

export function deleteApiProjectsIdResponseBodyToJSON(
  deleteApiProjectsIdResponseBody: DeleteApiProjectsIdResponseBody,
): string {
  return JSON.stringify(
    DeleteApiProjectsIdResponseBody$outboundSchema.parse(
      deleteApiProjectsIdResponseBody,
    ),
  );
}

export function deleteApiProjectsIdResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<DeleteApiProjectsIdResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteApiProjectsIdResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiProjectsIdResponseBody' from JSON`,
  );
}
