/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetApiNounsIdRequest = {
  /**
   * The ID of the Noun
   */
  id: string;
};

/** @internal */
export const GetApiNounsIdRequest$inboundSchema: z.ZodType<
  GetApiNounsIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type GetApiNounsIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const GetApiNounsIdRequest$outboundSchema: z.ZodType<
  GetApiNounsIdRequest$Outbound,
  z.ZodTypeDef,
  GetApiNounsIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiNounsIdRequest$ {
  /** @deprecated use `GetApiNounsIdRequest$inboundSchema` instead. */
  export const inboundSchema = GetApiNounsIdRequest$inboundSchema;
  /** @deprecated use `GetApiNounsIdRequest$outboundSchema` instead. */
  export const outboundSchema = GetApiNounsIdRequest$outboundSchema;
  /** @deprecated use `GetApiNounsIdRequest$Outbound` instead. */
  export type Outbound = GetApiNounsIdRequest$Outbound;
}

export function getApiNounsIdRequestToJSON(
  getApiNounsIdRequest: GetApiNounsIdRequest,
): string {
  return JSON.stringify(
    GetApiNounsIdRequest$outboundSchema.parse(getApiNounsIdRequest),
  );
}

export function getApiNounsIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetApiNounsIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetApiNounsIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetApiNounsIdRequest' from JSON`,
  );
}
