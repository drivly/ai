/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteApiUsersIdRequest = {
  /**
   * The ID of the User
   */
  id: string;
};

/**
 * Successfully deleted
 */
export type DeleteApiUsersIdResponseBody = {
  message?: string | undefined;
};

/** @internal */
export const DeleteApiUsersIdRequest$inboundSchema: z.ZodType<
  DeleteApiUsersIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type DeleteApiUsersIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const DeleteApiUsersIdRequest$outboundSchema: z.ZodType<
  DeleteApiUsersIdRequest$Outbound,
  z.ZodTypeDef,
  DeleteApiUsersIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiUsersIdRequest$ {
  /** @deprecated use `DeleteApiUsersIdRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteApiUsersIdRequest$inboundSchema;
  /** @deprecated use `DeleteApiUsersIdRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteApiUsersIdRequest$outboundSchema;
  /** @deprecated use `DeleteApiUsersIdRequest$Outbound` instead. */
  export type Outbound = DeleteApiUsersIdRequest$Outbound;
}

export function deleteApiUsersIdRequestToJSON(
  deleteApiUsersIdRequest: DeleteApiUsersIdRequest,
): string {
  return JSON.stringify(
    DeleteApiUsersIdRequest$outboundSchema.parse(deleteApiUsersIdRequest),
  );
}

export function deleteApiUsersIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteApiUsersIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteApiUsersIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiUsersIdRequest' from JSON`,
  );
}

/** @internal */
export const DeleteApiUsersIdResponseBody$inboundSchema: z.ZodType<
  DeleteApiUsersIdResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string().optional(),
});

/** @internal */
export type DeleteApiUsersIdResponseBody$Outbound = {
  message?: string | undefined;
};

/** @internal */
export const DeleteApiUsersIdResponseBody$outboundSchema: z.ZodType<
  DeleteApiUsersIdResponseBody$Outbound,
  z.ZodTypeDef,
  DeleteApiUsersIdResponseBody
> = z.object({
  message: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiUsersIdResponseBody$ {
  /** @deprecated use `DeleteApiUsersIdResponseBody$inboundSchema` instead. */
  export const inboundSchema = DeleteApiUsersIdResponseBody$inboundSchema;
  /** @deprecated use `DeleteApiUsersIdResponseBody$outboundSchema` instead. */
  export const outboundSchema = DeleteApiUsersIdResponseBody$outboundSchema;
  /** @deprecated use `DeleteApiUsersIdResponseBody$Outbound` instead. */
  export type Outbound = DeleteApiUsersIdResponseBody$Outbound;
}

export function deleteApiUsersIdResponseBodyToJSON(
  deleteApiUsersIdResponseBody: DeleteApiUsersIdResponseBody,
): string {
  return JSON.stringify(
    DeleteApiUsersIdResponseBody$outboundSchema.parse(
      deleteApiUsersIdResponseBody,
    ),
  );
}

export function deleteApiUsersIdResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<DeleteApiUsersIdResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteApiUsersIdResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiUsersIdResponseBody' from JSON`,
  );
}
