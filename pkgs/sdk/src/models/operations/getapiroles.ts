/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetApiRolesLinks = {
  home?: string | undefined;
  next?: string | undefined;
  prev?: string | undefined;
};

export type Roles = {
  href?: string | undefined;
};

/**
 * Successful response
 */
export type GetApiRolesResponseBody = {
  links?: GetApiRolesLinks | undefined;
  roles?: { [k: string]: Roles } | undefined;
};

/** @internal */
export const GetApiRolesLinks$inboundSchema: z.ZodType<
  GetApiRolesLinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  home: z.string().optional(),
  next: z.string().optional(),
  prev: z.string().optional(),
});

/** @internal */
export type GetApiRolesLinks$Outbound = {
  home?: string | undefined;
  next?: string | undefined;
  prev?: string | undefined;
};

/** @internal */
export const GetApiRolesLinks$outboundSchema: z.ZodType<
  GetApiRolesLinks$Outbound,
  z.ZodTypeDef,
  GetApiRolesLinks
> = z.object({
  home: z.string().optional(),
  next: z.string().optional(),
  prev: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiRolesLinks$ {
  /** @deprecated use `GetApiRolesLinks$inboundSchema` instead. */
  export const inboundSchema = GetApiRolesLinks$inboundSchema;
  /** @deprecated use `GetApiRolesLinks$outboundSchema` instead. */
  export const outboundSchema = GetApiRolesLinks$outboundSchema;
  /** @deprecated use `GetApiRolesLinks$Outbound` instead. */
  export type Outbound = GetApiRolesLinks$Outbound;
}

export function getApiRolesLinksToJSON(
  getApiRolesLinks: GetApiRolesLinks,
): string {
  return JSON.stringify(
    GetApiRolesLinks$outboundSchema.parse(getApiRolesLinks),
  );
}

export function getApiRolesLinksFromJSON(
  jsonString: string,
): SafeParseResult<GetApiRolesLinks, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetApiRolesLinks$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetApiRolesLinks' from JSON`,
  );
}

/** @internal */
export const Roles$inboundSchema: z.ZodType<Roles, z.ZodTypeDef, unknown> = z
  .object({
    href: z.string().optional(),
  });

/** @internal */
export type Roles$Outbound = {
  href?: string | undefined;
};

/** @internal */
export const Roles$outboundSchema: z.ZodType<
  Roles$Outbound,
  z.ZodTypeDef,
  Roles
> = z.object({
  href: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Roles$ {
  /** @deprecated use `Roles$inboundSchema` instead. */
  export const inboundSchema = Roles$inboundSchema;
  /** @deprecated use `Roles$outboundSchema` instead. */
  export const outboundSchema = Roles$outboundSchema;
  /** @deprecated use `Roles$Outbound` instead. */
  export type Outbound = Roles$Outbound;
}

export function rolesToJSON(roles: Roles): string {
  return JSON.stringify(Roles$outboundSchema.parse(roles));
}

export function rolesFromJSON(
  jsonString: string,
): SafeParseResult<Roles, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Roles$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Roles' from JSON`,
  );
}

/** @internal */
export const GetApiRolesResponseBody$inboundSchema: z.ZodType<
  GetApiRolesResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  links: z.lazy(() => GetApiRolesLinks$inboundSchema).optional(),
  roles: z.record(z.lazy(() => Roles$inboundSchema)).optional(),
});

/** @internal */
export type GetApiRolesResponseBody$Outbound = {
  links?: GetApiRolesLinks$Outbound | undefined;
  roles?: { [k: string]: Roles$Outbound } | undefined;
};

/** @internal */
export const GetApiRolesResponseBody$outboundSchema: z.ZodType<
  GetApiRolesResponseBody$Outbound,
  z.ZodTypeDef,
  GetApiRolesResponseBody
> = z.object({
  links: z.lazy(() => GetApiRolesLinks$outboundSchema).optional(),
  roles: z.record(z.lazy(() => Roles$outboundSchema)).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiRolesResponseBody$ {
  /** @deprecated use `GetApiRolesResponseBody$inboundSchema` instead. */
  export const inboundSchema = GetApiRolesResponseBody$inboundSchema;
  /** @deprecated use `GetApiRolesResponseBody$outboundSchema` instead. */
  export const outboundSchema = GetApiRolesResponseBody$outboundSchema;
  /** @deprecated use `GetApiRolesResponseBody$Outbound` instead. */
  export type Outbound = GetApiRolesResponseBody$Outbound;
}

export function getApiRolesResponseBodyToJSON(
  getApiRolesResponseBody: GetApiRolesResponseBody,
): string {
  return JSON.stringify(
    GetApiRolesResponseBody$outboundSchema.parse(getApiRolesResponseBody),
  );
}

export function getApiRolesResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<GetApiRolesResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetApiRolesResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetApiRolesResponseBody' from JSON`,
  );
}
