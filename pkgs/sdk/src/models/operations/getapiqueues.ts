/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetApiQueuesLinks = {
  home?: string | undefined;
  next?: string | undefined;
  prev?: string | undefined;
};

export type Queues = {
  href?: string | undefined;
};

/**
 * Successful response
 */
export type GetApiQueuesResponseBody = {
  links?: GetApiQueuesLinks | undefined;
  queues?: { [k: string]: Queues } | undefined;
};

/** @internal */
export const GetApiQueuesLinks$inboundSchema: z.ZodType<
  GetApiQueuesLinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  home: z.string().optional(),
  next: z.string().optional(),
  prev: z.string().optional(),
});

/** @internal */
export type GetApiQueuesLinks$Outbound = {
  home?: string | undefined;
  next?: string | undefined;
  prev?: string | undefined;
};

/** @internal */
export const GetApiQueuesLinks$outboundSchema: z.ZodType<
  GetApiQueuesLinks$Outbound,
  z.ZodTypeDef,
  GetApiQueuesLinks
> = z.object({
  home: z.string().optional(),
  next: z.string().optional(),
  prev: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiQueuesLinks$ {
  /** @deprecated use `GetApiQueuesLinks$inboundSchema` instead. */
  export const inboundSchema = GetApiQueuesLinks$inboundSchema;
  /** @deprecated use `GetApiQueuesLinks$outboundSchema` instead. */
  export const outboundSchema = GetApiQueuesLinks$outboundSchema;
  /** @deprecated use `GetApiQueuesLinks$Outbound` instead. */
  export type Outbound = GetApiQueuesLinks$Outbound;
}

export function getApiQueuesLinksToJSON(
  getApiQueuesLinks: GetApiQueuesLinks,
): string {
  return JSON.stringify(
    GetApiQueuesLinks$outboundSchema.parse(getApiQueuesLinks),
  );
}

export function getApiQueuesLinksFromJSON(
  jsonString: string,
): SafeParseResult<GetApiQueuesLinks, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetApiQueuesLinks$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetApiQueuesLinks' from JSON`,
  );
}

/** @internal */
export const Queues$inboundSchema: z.ZodType<Queues, z.ZodTypeDef, unknown> = z
  .object({
    href: z.string().optional(),
  });

/** @internal */
export type Queues$Outbound = {
  href?: string | undefined;
};

/** @internal */
export const Queues$outboundSchema: z.ZodType<
  Queues$Outbound,
  z.ZodTypeDef,
  Queues
> = z.object({
  href: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Queues$ {
  /** @deprecated use `Queues$inboundSchema` instead. */
  export const inboundSchema = Queues$inboundSchema;
  /** @deprecated use `Queues$outboundSchema` instead. */
  export const outboundSchema = Queues$outboundSchema;
  /** @deprecated use `Queues$Outbound` instead. */
  export type Outbound = Queues$Outbound;
}

export function queuesToJSON(queues: Queues): string {
  return JSON.stringify(Queues$outboundSchema.parse(queues));
}

export function queuesFromJSON(
  jsonString: string,
): SafeParseResult<Queues, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Queues$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Queues' from JSON`,
  );
}

/** @internal */
export const GetApiQueuesResponseBody$inboundSchema: z.ZodType<
  GetApiQueuesResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  links: z.lazy(() => GetApiQueuesLinks$inboundSchema).optional(),
  queues: z.record(z.lazy(() => Queues$inboundSchema)).optional(),
});

/** @internal */
export type GetApiQueuesResponseBody$Outbound = {
  links?: GetApiQueuesLinks$Outbound | undefined;
  queues?: { [k: string]: Queues$Outbound } | undefined;
};

/** @internal */
export const GetApiQueuesResponseBody$outboundSchema: z.ZodType<
  GetApiQueuesResponseBody$Outbound,
  z.ZodTypeDef,
  GetApiQueuesResponseBody
> = z.object({
  links: z.lazy(() => GetApiQueuesLinks$outboundSchema).optional(),
  queues: z.record(z.lazy(() => Queues$outboundSchema)).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiQueuesResponseBody$ {
  /** @deprecated use `GetApiQueuesResponseBody$inboundSchema` instead. */
  export const inboundSchema = GetApiQueuesResponseBody$inboundSchema;
  /** @deprecated use `GetApiQueuesResponseBody$outboundSchema` instead. */
  export const outboundSchema = GetApiQueuesResponseBody$outboundSchema;
  /** @deprecated use `GetApiQueuesResponseBody$Outbound` instead. */
  export type Outbound = GetApiQueuesResponseBody$Outbound;
}

export function getApiQueuesResponseBodyToJSON(
  getApiQueuesResponseBody: GetApiQueuesResponseBody,
): string {
  return JSON.stringify(
    GetApiQueuesResponseBody$outboundSchema.parse(getApiQueuesResponseBody),
  );
}

export function getApiQueuesResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<GetApiQueuesResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetApiQueuesResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetApiQueuesResponseBody' from JSON`,
  );
}
