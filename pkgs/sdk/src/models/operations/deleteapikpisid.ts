/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteApiKpisIdRequest = {
  /**
   * The ID of the KPI
   */
  id: string;
};

/**
 * Successfully deleted
 */
export type DeleteApiKpisIdResponseBody = {
  message?: string | undefined;
};

/** @internal */
export const DeleteApiKpisIdRequest$inboundSchema: z.ZodType<
  DeleteApiKpisIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type DeleteApiKpisIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const DeleteApiKpisIdRequest$outboundSchema: z.ZodType<
  DeleteApiKpisIdRequest$Outbound,
  z.ZodTypeDef,
  DeleteApiKpisIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiKpisIdRequest$ {
  /** @deprecated use `DeleteApiKpisIdRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteApiKpisIdRequest$inboundSchema;
  /** @deprecated use `DeleteApiKpisIdRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteApiKpisIdRequest$outboundSchema;
  /** @deprecated use `DeleteApiKpisIdRequest$Outbound` instead. */
  export type Outbound = DeleteApiKpisIdRequest$Outbound;
}

export function deleteApiKpisIdRequestToJSON(
  deleteApiKpisIdRequest: DeleteApiKpisIdRequest,
): string {
  return JSON.stringify(
    DeleteApiKpisIdRequest$outboundSchema.parse(deleteApiKpisIdRequest),
  );
}

export function deleteApiKpisIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteApiKpisIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteApiKpisIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiKpisIdRequest' from JSON`,
  );
}

/** @internal */
export const DeleteApiKpisIdResponseBody$inboundSchema: z.ZodType<
  DeleteApiKpisIdResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string().optional(),
});

/** @internal */
export type DeleteApiKpisIdResponseBody$Outbound = {
  message?: string | undefined;
};

/** @internal */
export const DeleteApiKpisIdResponseBody$outboundSchema: z.ZodType<
  DeleteApiKpisIdResponseBody$Outbound,
  z.ZodTypeDef,
  DeleteApiKpisIdResponseBody
> = z.object({
  message: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiKpisIdResponseBody$ {
  /** @deprecated use `DeleteApiKpisIdResponseBody$inboundSchema` instead. */
  export const inboundSchema = DeleteApiKpisIdResponseBody$inboundSchema;
  /** @deprecated use `DeleteApiKpisIdResponseBody$outboundSchema` instead. */
  export const outboundSchema = DeleteApiKpisIdResponseBody$outboundSchema;
  /** @deprecated use `DeleteApiKpisIdResponseBody$Outbound` instead. */
  export type Outbound = DeleteApiKpisIdResponseBody$Outbound;
}

export function deleteApiKpisIdResponseBodyToJSON(
  deleteApiKpisIdResponseBody: DeleteApiKpisIdResponseBody,
): string {
  return JSON.stringify(
    DeleteApiKpisIdResponseBody$outboundSchema.parse(
      deleteApiKpisIdResponseBody,
    ),
  );
}

export function deleteApiKpisIdResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<DeleteApiKpisIdResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteApiKpisIdResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiKpisIdResponseBody' from JSON`,
  );
}
