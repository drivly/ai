/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetApiRolesIdRequest = {
  /**
   * The ID of the Role
   */
  id: string;
};

/** @internal */
export const GetApiRolesIdRequest$inboundSchema: z.ZodType<
  GetApiRolesIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type GetApiRolesIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const GetApiRolesIdRequest$outboundSchema: z.ZodType<
  GetApiRolesIdRequest$Outbound,
  z.ZodTypeDef,
  GetApiRolesIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiRolesIdRequest$ {
  /** @deprecated use `GetApiRolesIdRequest$inboundSchema` instead. */
  export const inboundSchema = GetApiRolesIdRequest$inboundSchema;
  /** @deprecated use `GetApiRolesIdRequest$outboundSchema` instead. */
  export const outboundSchema = GetApiRolesIdRequest$outboundSchema;
  /** @deprecated use `GetApiRolesIdRequest$Outbound` instead. */
  export type Outbound = GetApiRolesIdRequest$Outbound;
}

export function getApiRolesIdRequestToJSON(
  getApiRolesIdRequest: GetApiRolesIdRequest,
): string {
  return JSON.stringify(
    GetApiRolesIdRequest$outboundSchema.parse(getApiRolesIdRequest),
  );
}

export function getApiRolesIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetApiRolesIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetApiRolesIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetApiRolesIdRequest' from JSON`,
  );
}
