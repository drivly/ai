/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetApiKpisLinks = {
  home?: string | undefined;
  next?: string | undefined;
  prev?: string | undefined;
};

export type Kpis = {
  href?: string | undefined;
};

/**
 * Successful response
 */
export type GetApiKpisResponseBody = {
  links?: GetApiKpisLinks | undefined;
  kpis?: { [k: string]: Kpis } | undefined;
};

/** @internal */
export const GetApiKpisLinks$inboundSchema: z.ZodType<
  GetApiKpisLinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  home: z.string().optional(),
  next: z.string().optional(),
  prev: z.string().optional(),
});

/** @internal */
export type GetApiKpisLinks$Outbound = {
  home?: string | undefined;
  next?: string | undefined;
  prev?: string | undefined;
};

/** @internal */
export const GetApiKpisLinks$outboundSchema: z.ZodType<
  GetApiKpisLinks$Outbound,
  z.ZodTypeDef,
  GetApiKpisLinks
> = z.object({
  home: z.string().optional(),
  next: z.string().optional(),
  prev: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiKpisLinks$ {
  /** @deprecated use `GetApiKpisLinks$inboundSchema` instead. */
  export const inboundSchema = GetApiKpisLinks$inboundSchema;
  /** @deprecated use `GetApiKpisLinks$outboundSchema` instead. */
  export const outboundSchema = GetApiKpisLinks$outboundSchema;
  /** @deprecated use `GetApiKpisLinks$Outbound` instead. */
  export type Outbound = GetApiKpisLinks$Outbound;
}

export function getApiKpisLinksToJSON(
  getApiKpisLinks: GetApiKpisLinks,
): string {
  return JSON.stringify(GetApiKpisLinks$outboundSchema.parse(getApiKpisLinks));
}

export function getApiKpisLinksFromJSON(
  jsonString: string,
): SafeParseResult<GetApiKpisLinks, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetApiKpisLinks$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetApiKpisLinks' from JSON`,
  );
}

/** @internal */
export const Kpis$inboundSchema: z.ZodType<Kpis, z.ZodTypeDef, unknown> = z
  .object({
    href: z.string().optional(),
  });

/** @internal */
export type Kpis$Outbound = {
  href?: string | undefined;
};

/** @internal */
export const Kpis$outboundSchema: z.ZodType<Kpis$Outbound, z.ZodTypeDef, Kpis> =
  z.object({
    href: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Kpis$ {
  /** @deprecated use `Kpis$inboundSchema` instead. */
  export const inboundSchema = Kpis$inboundSchema;
  /** @deprecated use `Kpis$outboundSchema` instead. */
  export const outboundSchema = Kpis$outboundSchema;
  /** @deprecated use `Kpis$Outbound` instead. */
  export type Outbound = Kpis$Outbound;
}

export function kpisToJSON(kpis: Kpis): string {
  return JSON.stringify(Kpis$outboundSchema.parse(kpis));
}

export function kpisFromJSON(
  jsonString: string,
): SafeParseResult<Kpis, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Kpis$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Kpis' from JSON`,
  );
}

/** @internal */
export const GetApiKpisResponseBody$inboundSchema: z.ZodType<
  GetApiKpisResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  links: z.lazy(() => GetApiKpisLinks$inboundSchema).optional(),
  kpis: z.record(z.lazy(() => Kpis$inboundSchema)).optional(),
});

/** @internal */
export type GetApiKpisResponseBody$Outbound = {
  links?: GetApiKpisLinks$Outbound | undefined;
  kpis?: { [k: string]: Kpis$Outbound } | undefined;
};

/** @internal */
export const GetApiKpisResponseBody$outboundSchema: z.ZodType<
  GetApiKpisResponseBody$Outbound,
  z.ZodTypeDef,
  GetApiKpisResponseBody
> = z.object({
  links: z.lazy(() => GetApiKpisLinks$outboundSchema).optional(),
  kpis: z.record(z.lazy(() => Kpis$outboundSchema)).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiKpisResponseBody$ {
  /** @deprecated use `GetApiKpisResponseBody$inboundSchema` instead. */
  export const inboundSchema = GetApiKpisResponseBody$inboundSchema;
  /** @deprecated use `GetApiKpisResponseBody$outboundSchema` instead. */
  export const outboundSchema = GetApiKpisResponseBody$outboundSchema;
  /** @deprecated use `GetApiKpisResponseBody$Outbound` instead. */
  export type Outbound = GetApiKpisResponseBody$Outbound;
}

export function getApiKpisResponseBodyToJSON(
  getApiKpisResponseBody: GetApiKpisResponseBody,
): string {
  return JSON.stringify(
    GetApiKpisResponseBody$outboundSchema.parse(getApiKpisResponseBody),
  );
}

export function getApiKpisResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<GetApiKpisResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetApiKpisResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetApiKpisResponseBody' from JSON`,
  );
}
