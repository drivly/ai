/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetApiTriggersLinks = {
  home?: string | undefined;
  next?: string | undefined;
  prev?: string | undefined;
};

export type Triggers = {
  href?: string | undefined;
};

/**
 * Successful response
 */
export type GetApiTriggersResponseBody = {
  links?: GetApiTriggersLinks | undefined;
  triggers?: { [k: string]: Triggers } | undefined;
};

/** @internal */
export const GetApiTriggersLinks$inboundSchema: z.ZodType<
  GetApiTriggersLinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  home: z.string().optional(),
  next: z.string().optional(),
  prev: z.string().optional(),
});

/** @internal */
export type GetApiTriggersLinks$Outbound = {
  home?: string | undefined;
  next?: string | undefined;
  prev?: string | undefined;
};

/** @internal */
export const GetApiTriggersLinks$outboundSchema: z.ZodType<
  GetApiTriggersLinks$Outbound,
  z.ZodTypeDef,
  GetApiTriggersLinks
> = z.object({
  home: z.string().optional(),
  next: z.string().optional(),
  prev: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiTriggersLinks$ {
  /** @deprecated use `GetApiTriggersLinks$inboundSchema` instead. */
  export const inboundSchema = GetApiTriggersLinks$inboundSchema;
  /** @deprecated use `GetApiTriggersLinks$outboundSchema` instead. */
  export const outboundSchema = GetApiTriggersLinks$outboundSchema;
  /** @deprecated use `GetApiTriggersLinks$Outbound` instead. */
  export type Outbound = GetApiTriggersLinks$Outbound;
}

export function getApiTriggersLinksToJSON(
  getApiTriggersLinks: GetApiTriggersLinks,
): string {
  return JSON.stringify(
    GetApiTriggersLinks$outboundSchema.parse(getApiTriggersLinks),
  );
}

export function getApiTriggersLinksFromJSON(
  jsonString: string,
): SafeParseResult<GetApiTriggersLinks, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetApiTriggersLinks$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetApiTriggersLinks' from JSON`,
  );
}

/** @internal */
export const Triggers$inboundSchema: z.ZodType<
  Triggers,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string().optional(),
});

/** @internal */
export type Triggers$Outbound = {
  href?: string | undefined;
};

/** @internal */
export const Triggers$outboundSchema: z.ZodType<
  Triggers$Outbound,
  z.ZodTypeDef,
  Triggers
> = z.object({
  href: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Triggers$ {
  /** @deprecated use `Triggers$inboundSchema` instead. */
  export const inboundSchema = Triggers$inboundSchema;
  /** @deprecated use `Triggers$outboundSchema` instead. */
  export const outboundSchema = Triggers$outboundSchema;
  /** @deprecated use `Triggers$Outbound` instead. */
  export type Outbound = Triggers$Outbound;
}

export function triggersToJSON(triggers: Triggers): string {
  return JSON.stringify(Triggers$outboundSchema.parse(triggers));
}

export function triggersFromJSON(
  jsonString: string,
): SafeParseResult<Triggers, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Triggers$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Triggers' from JSON`,
  );
}

/** @internal */
export const GetApiTriggersResponseBody$inboundSchema: z.ZodType<
  GetApiTriggersResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  links: z.lazy(() => GetApiTriggersLinks$inboundSchema).optional(),
  triggers: z.record(z.lazy(() => Triggers$inboundSchema)).optional(),
});

/** @internal */
export type GetApiTriggersResponseBody$Outbound = {
  links?: GetApiTriggersLinks$Outbound | undefined;
  triggers?: { [k: string]: Triggers$Outbound } | undefined;
};

/** @internal */
export const GetApiTriggersResponseBody$outboundSchema: z.ZodType<
  GetApiTriggersResponseBody$Outbound,
  z.ZodTypeDef,
  GetApiTriggersResponseBody
> = z.object({
  links: z.lazy(() => GetApiTriggersLinks$outboundSchema).optional(),
  triggers: z.record(z.lazy(() => Triggers$outboundSchema)).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiTriggersResponseBody$ {
  /** @deprecated use `GetApiTriggersResponseBody$inboundSchema` instead. */
  export const inboundSchema = GetApiTriggersResponseBody$inboundSchema;
  /** @deprecated use `GetApiTriggersResponseBody$outboundSchema` instead. */
  export const outboundSchema = GetApiTriggersResponseBody$outboundSchema;
  /** @deprecated use `GetApiTriggersResponseBody$Outbound` instead. */
  export type Outbound = GetApiTriggersResponseBody$Outbound;
}

export function getApiTriggersResponseBodyToJSON(
  getApiTriggersResponseBody: GetApiTriggersResponseBody,
): string {
  return JSON.stringify(
    GetApiTriggersResponseBody$outboundSchema.parse(getApiTriggersResponseBody),
  );
}

export function getApiTriggersResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<GetApiTriggersResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetApiTriggersResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetApiTriggersResponseBody' from JSON`,
  );
}
