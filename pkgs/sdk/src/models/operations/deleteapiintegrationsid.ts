/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteApiIntegrationsIdRequest = {
  /**
   * The ID of the Integration
   */
  id: string;
};

/**
 * Successfully deleted
 */
export type DeleteApiIntegrationsIdResponseBody = {
  message?: string | undefined;
};

/** @internal */
export const DeleteApiIntegrationsIdRequest$inboundSchema: z.ZodType<
  DeleteApiIntegrationsIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type DeleteApiIntegrationsIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const DeleteApiIntegrationsIdRequest$outboundSchema: z.ZodType<
  DeleteApiIntegrationsIdRequest$Outbound,
  z.ZodTypeDef,
  DeleteApiIntegrationsIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiIntegrationsIdRequest$ {
  /** @deprecated use `DeleteApiIntegrationsIdRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteApiIntegrationsIdRequest$inboundSchema;
  /** @deprecated use `DeleteApiIntegrationsIdRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteApiIntegrationsIdRequest$outboundSchema;
  /** @deprecated use `DeleteApiIntegrationsIdRequest$Outbound` instead. */
  export type Outbound = DeleteApiIntegrationsIdRequest$Outbound;
}

export function deleteApiIntegrationsIdRequestToJSON(
  deleteApiIntegrationsIdRequest: DeleteApiIntegrationsIdRequest,
): string {
  return JSON.stringify(
    DeleteApiIntegrationsIdRequest$outboundSchema.parse(
      deleteApiIntegrationsIdRequest,
    ),
  );
}

export function deleteApiIntegrationsIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteApiIntegrationsIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteApiIntegrationsIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiIntegrationsIdRequest' from JSON`,
  );
}

/** @internal */
export const DeleteApiIntegrationsIdResponseBody$inboundSchema: z.ZodType<
  DeleteApiIntegrationsIdResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string().optional(),
});

/** @internal */
export type DeleteApiIntegrationsIdResponseBody$Outbound = {
  message?: string | undefined;
};

/** @internal */
export const DeleteApiIntegrationsIdResponseBody$outboundSchema: z.ZodType<
  DeleteApiIntegrationsIdResponseBody$Outbound,
  z.ZodTypeDef,
  DeleteApiIntegrationsIdResponseBody
> = z.object({
  message: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiIntegrationsIdResponseBody$ {
  /** @deprecated use `DeleteApiIntegrationsIdResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    DeleteApiIntegrationsIdResponseBody$inboundSchema;
  /** @deprecated use `DeleteApiIntegrationsIdResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    DeleteApiIntegrationsIdResponseBody$outboundSchema;
  /** @deprecated use `DeleteApiIntegrationsIdResponseBody$Outbound` instead. */
  export type Outbound = DeleteApiIntegrationsIdResponseBody$Outbound;
}

export function deleteApiIntegrationsIdResponseBodyToJSON(
  deleteApiIntegrationsIdResponseBody: DeleteApiIntegrationsIdResponseBody,
): string {
  return JSON.stringify(
    DeleteApiIntegrationsIdResponseBody$outboundSchema.parse(
      deleteApiIntegrationsIdResponseBody,
    ),
  );
}

export function deleteApiIntegrationsIdResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<DeleteApiIntegrationsIdResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      DeleteApiIntegrationsIdResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiIntegrationsIdResponseBody' from JSON`,
  );
}
