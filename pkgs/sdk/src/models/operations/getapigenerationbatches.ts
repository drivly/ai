/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetApiGenerationBatchesLinks = {
  home?: string | undefined;
  next?: string | undefined;
  prev?: string | undefined;
};

export type GenerationBatches = {
  href?: string | undefined;
};

/**
 * Successful response
 */
export type GetApiGenerationBatchesResponseBody = {
  links?: GetApiGenerationBatchesLinks | undefined;
  generationBatches?: { [k: string]: GenerationBatches } | undefined;
};

/** @internal */
export const GetApiGenerationBatchesLinks$inboundSchema: z.ZodType<
  GetApiGenerationBatchesLinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  home: z.string().optional(),
  next: z.string().optional(),
  prev: z.string().optional(),
});

/** @internal */
export type GetApiGenerationBatchesLinks$Outbound = {
  home?: string | undefined;
  next?: string | undefined;
  prev?: string | undefined;
};

/** @internal */
export const GetApiGenerationBatchesLinks$outboundSchema: z.ZodType<
  GetApiGenerationBatchesLinks$Outbound,
  z.ZodTypeDef,
  GetApiGenerationBatchesLinks
> = z.object({
  home: z.string().optional(),
  next: z.string().optional(),
  prev: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiGenerationBatchesLinks$ {
  /** @deprecated use `GetApiGenerationBatchesLinks$inboundSchema` instead. */
  export const inboundSchema = GetApiGenerationBatchesLinks$inboundSchema;
  /** @deprecated use `GetApiGenerationBatchesLinks$outboundSchema` instead. */
  export const outboundSchema = GetApiGenerationBatchesLinks$outboundSchema;
  /** @deprecated use `GetApiGenerationBatchesLinks$Outbound` instead. */
  export type Outbound = GetApiGenerationBatchesLinks$Outbound;
}

export function getApiGenerationBatchesLinksToJSON(
  getApiGenerationBatchesLinks: GetApiGenerationBatchesLinks,
): string {
  return JSON.stringify(
    GetApiGenerationBatchesLinks$outboundSchema.parse(
      getApiGenerationBatchesLinks,
    ),
  );
}

export function getApiGenerationBatchesLinksFromJSON(
  jsonString: string,
): SafeParseResult<GetApiGenerationBatchesLinks, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetApiGenerationBatchesLinks$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetApiGenerationBatchesLinks' from JSON`,
  );
}

/** @internal */
export const GenerationBatches$inboundSchema: z.ZodType<
  GenerationBatches,
  z.ZodTypeDef,
  unknown
> = z.object({
  href: z.string().optional(),
});

/** @internal */
export type GenerationBatches$Outbound = {
  href?: string | undefined;
};

/** @internal */
export const GenerationBatches$outboundSchema: z.ZodType<
  GenerationBatches$Outbound,
  z.ZodTypeDef,
  GenerationBatches
> = z.object({
  href: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GenerationBatches$ {
  /** @deprecated use `GenerationBatches$inboundSchema` instead. */
  export const inboundSchema = GenerationBatches$inboundSchema;
  /** @deprecated use `GenerationBatches$outboundSchema` instead. */
  export const outboundSchema = GenerationBatches$outboundSchema;
  /** @deprecated use `GenerationBatches$Outbound` instead. */
  export type Outbound = GenerationBatches$Outbound;
}

export function generationBatchesToJSON(
  generationBatches: GenerationBatches,
): string {
  return JSON.stringify(
    GenerationBatches$outboundSchema.parse(generationBatches),
  );
}

export function generationBatchesFromJSON(
  jsonString: string,
): SafeParseResult<GenerationBatches, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GenerationBatches$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GenerationBatches' from JSON`,
  );
}

/** @internal */
export const GetApiGenerationBatchesResponseBody$inboundSchema: z.ZodType<
  GetApiGenerationBatchesResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  links: z.lazy(() => GetApiGenerationBatchesLinks$inboundSchema).optional(),
  "generation-batches": z.record(z.lazy(() => GenerationBatches$inboundSchema))
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "generation-batches": "generationBatches",
  });
});

/** @internal */
export type GetApiGenerationBatchesResponseBody$Outbound = {
  links?: GetApiGenerationBatchesLinks$Outbound | undefined;
  "generation-batches"?:
    | { [k: string]: GenerationBatches$Outbound }
    | undefined;
};

/** @internal */
export const GetApiGenerationBatchesResponseBody$outboundSchema: z.ZodType<
  GetApiGenerationBatchesResponseBody$Outbound,
  z.ZodTypeDef,
  GetApiGenerationBatchesResponseBody
> = z.object({
  links: z.lazy(() => GetApiGenerationBatchesLinks$outboundSchema).optional(),
  generationBatches: z.record(z.lazy(() => GenerationBatches$outboundSchema))
    .optional(),
}).transform((v) => {
  return remap$(v, {
    generationBatches: "generation-batches",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiGenerationBatchesResponseBody$ {
  /** @deprecated use `GetApiGenerationBatchesResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    GetApiGenerationBatchesResponseBody$inboundSchema;
  /** @deprecated use `GetApiGenerationBatchesResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    GetApiGenerationBatchesResponseBody$outboundSchema;
  /** @deprecated use `GetApiGenerationBatchesResponseBody$Outbound` instead. */
  export type Outbound = GetApiGenerationBatchesResponseBody$Outbound;
}

export function getApiGenerationBatchesResponseBodyToJSON(
  getApiGenerationBatchesResponseBody: GetApiGenerationBatchesResponseBody,
): string {
  return JSON.stringify(
    GetApiGenerationBatchesResponseBody$outboundSchema.parse(
      getApiGenerationBatchesResponseBody,
    ),
  );
}

export function getApiGenerationBatchesResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<GetApiGenerationBatchesResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiGenerationBatchesResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetApiGenerationBatchesResponseBody' from JSON`,
  );
}
