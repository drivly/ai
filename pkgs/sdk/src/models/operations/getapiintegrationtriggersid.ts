/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetApiIntegrationTriggersIdRequest = {
  /**
   * The ID of the Trigger
   */
  id: string;
};

/** @internal */
export const GetApiIntegrationTriggersIdRequest$inboundSchema: z.ZodType<
  GetApiIntegrationTriggersIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type GetApiIntegrationTriggersIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const GetApiIntegrationTriggersIdRequest$outboundSchema: z.ZodType<
  GetApiIntegrationTriggersIdRequest$Outbound,
  z.ZodTypeDef,
  GetApiIntegrationTriggersIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiIntegrationTriggersIdRequest$ {
  /** @deprecated use `GetApiIntegrationTriggersIdRequest$inboundSchema` instead. */
  export const inboundSchema = GetApiIntegrationTriggersIdRequest$inboundSchema;
  /** @deprecated use `GetApiIntegrationTriggersIdRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetApiIntegrationTriggersIdRequest$outboundSchema;
  /** @deprecated use `GetApiIntegrationTriggersIdRequest$Outbound` instead. */
  export type Outbound = GetApiIntegrationTriggersIdRequest$Outbound;
}

export function getApiIntegrationTriggersIdRequestToJSON(
  getApiIntegrationTriggersIdRequest: GetApiIntegrationTriggersIdRequest,
): string {
  return JSON.stringify(
    GetApiIntegrationTriggersIdRequest$outboundSchema.parse(
      getApiIntegrationTriggersIdRequest,
    ),
  );
}

export function getApiIntegrationTriggersIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetApiIntegrationTriggersIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetApiIntegrationTriggersIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetApiIntegrationTriggersIdRequest' from JSON`,
  );
}
