/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteApiWorkflowsIdRequest = {
  /**
   * The ID of the Workflow
   */
  id: string;
};

/**
 * Successfully deleted
 */
export type DeleteApiWorkflowsIdResponseBody = {
  message?: string | undefined;
};

/** @internal */
export const DeleteApiWorkflowsIdRequest$inboundSchema: z.ZodType<
  DeleteApiWorkflowsIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type DeleteApiWorkflowsIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const DeleteApiWorkflowsIdRequest$outboundSchema: z.ZodType<
  DeleteApiWorkflowsIdRequest$Outbound,
  z.ZodTypeDef,
  DeleteApiWorkflowsIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiWorkflowsIdRequest$ {
  /** @deprecated use `DeleteApiWorkflowsIdRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteApiWorkflowsIdRequest$inboundSchema;
  /** @deprecated use `DeleteApiWorkflowsIdRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteApiWorkflowsIdRequest$outboundSchema;
  /** @deprecated use `DeleteApiWorkflowsIdRequest$Outbound` instead. */
  export type Outbound = DeleteApiWorkflowsIdRequest$Outbound;
}

export function deleteApiWorkflowsIdRequestToJSON(
  deleteApiWorkflowsIdRequest: DeleteApiWorkflowsIdRequest,
): string {
  return JSON.stringify(
    DeleteApiWorkflowsIdRequest$outboundSchema.parse(
      deleteApiWorkflowsIdRequest,
    ),
  );
}

export function deleteApiWorkflowsIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteApiWorkflowsIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteApiWorkflowsIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiWorkflowsIdRequest' from JSON`,
  );
}

/** @internal */
export const DeleteApiWorkflowsIdResponseBody$inboundSchema: z.ZodType<
  DeleteApiWorkflowsIdResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string().optional(),
});

/** @internal */
export type DeleteApiWorkflowsIdResponseBody$Outbound = {
  message?: string | undefined;
};

/** @internal */
export const DeleteApiWorkflowsIdResponseBody$outboundSchema: z.ZodType<
  DeleteApiWorkflowsIdResponseBody$Outbound,
  z.ZodTypeDef,
  DeleteApiWorkflowsIdResponseBody
> = z.object({
  message: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiWorkflowsIdResponseBody$ {
  /** @deprecated use `DeleteApiWorkflowsIdResponseBody$inboundSchema` instead. */
  export const inboundSchema = DeleteApiWorkflowsIdResponseBody$inboundSchema;
  /** @deprecated use `DeleteApiWorkflowsIdResponseBody$outboundSchema` instead. */
  export const outboundSchema = DeleteApiWorkflowsIdResponseBody$outboundSchema;
  /** @deprecated use `DeleteApiWorkflowsIdResponseBody$Outbound` instead. */
  export type Outbound = DeleteApiWorkflowsIdResponseBody$Outbound;
}

export function deleteApiWorkflowsIdResponseBodyToJSON(
  deleteApiWorkflowsIdResponseBody: DeleteApiWorkflowsIdResponseBody,
): string {
  return JSON.stringify(
    DeleteApiWorkflowsIdResponseBody$outboundSchema.parse(
      deleteApiWorkflowsIdResponseBody,
    ),
  );
}

export function deleteApiWorkflowsIdResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<DeleteApiWorkflowsIdResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteApiWorkflowsIdResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiWorkflowsIdResponseBody' from JSON`,
  );
}
