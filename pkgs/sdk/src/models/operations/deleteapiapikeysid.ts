/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteApiApikeysIdRequest = {
  /**
   * The ID of the API Key
   */
  id: string;
};

/**
 * Successfully deleted
 */
export type DeleteApiApikeysIdResponseBody = {
  message?: string | undefined;
};

/** @internal */
export const DeleteApiApikeysIdRequest$inboundSchema: z.ZodType<
  DeleteApiApikeysIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type DeleteApiApikeysIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const DeleteApiApikeysIdRequest$outboundSchema: z.ZodType<
  DeleteApiApikeysIdRequest$Outbound,
  z.ZodTypeDef,
  DeleteApiApikeysIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiApikeysIdRequest$ {
  /** @deprecated use `DeleteApiApikeysIdRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteApiApikeysIdRequest$inboundSchema;
  /** @deprecated use `DeleteApiApikeysIdRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteApiApikeysIdRequest$outboundSchema;
  /** @deprecated use `DeleteApiApikeysIdRequest$Outbound` instead. */
  export type Outbound = DeleteApiApikeysIdRequest$Outbound;
}

export function deleteApiApikeysIdRequestToJSON(
  deleteApiApikeysIdRequest: DeleteApiApikeysIdRequest,
): string {
  return JSON.stringify(
    DeleteApiApikeysIdRequest$outboundSchema.parse(deleteApiApikeysIdRequest),
  );
}

export function deleteApiApikeysIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteApiApikeysIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteApiApikeysIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiApikeysIdRequest' from JSON`,
  );
}

/** @internal */
export const DeleteApiApikeysIdResponseBody$inboundSchema: z.ZodType<
  DeleteApiApikeysIdResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string().optional(),
});

/** @internal */
export type DeleteApiApikeysIdResponseBody$Outbound = {
  message?: string | undefined;
};

/** @internal */
export const DeleteApiApikeysIdResponseBody$outboundSchema: z.ZodType<
  DeleteApiApikeysIdResponseBody$Outbound,
  z.ZodTypeDef,
  DeleteApiApikeysIdResponseBody
> = z.object({
  message: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiApikeysIdResponseBody$ {
  /** @deprecated use `DeleteApiApikeysIdResponseBody$inboundSchema` instead. */
  export const inboundSchema = DeleteApiApikeysIdResponseBody$inboundSchema;
  /** @deprecated use `DeleteApiApikeysIdResponseBody$outboundSchema` instead. */
  export const outboundSchema = DeleteApiApikeysIdResponseBody$outboundSchema;
  /** @deprecated use `DeleteApiApikeysIdResponseBody$Outbound` instead. */
  export type Outbound = DeleteApiApikeysIdResponseBody$Outbound;
}

export function deleteApiApikeysIdResponseBodyToJSON(
  deleteApiApikeysIdResponseBody: DeleteApiApikeysIdResponseBody,
): string {
  return JSON.stringify(
    DeleteApiApikeysIdResponseBody$outboundSchema.parse(
      deleteApiApikeysIdResponseBody,
    ),
  );
}

export function deleteApiApikeysIdResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<DeleteApiApikeysIdResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteApiApikeysIdResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiApikeysIdResponseBody' from JSON`,
  );
}
