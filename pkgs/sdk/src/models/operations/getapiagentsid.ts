/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetApiAgentsIdRequest = {
  /**
   * The ID of the Agent
   */
  id: string;
};

/** @internal */
export const GetApiAgentsIdRequest$inboundSchema: z.ZodType<
  GetApiAgentsIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type GetApiAgentsIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const GetApiAgentsIdRequest$outboundSchema: z.ZodType<
  GetApiAgentsIdRequest$Outbound,
  z.ZodTypeDef,
  GetApiAgentsIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiAgentsIdRequest$ {
  /** @deprecated use `GetApiAgentsIdRequest$inboundSchema` instead. */
  export const inboundSchema = GetApiAgentsIdRequest$inboundSchema;
  /** @deprecated use `GetApiAgentsIdRequest$outboundSchema` instead. */
  export const outboundSchema = GetApiAgentsIdRequest$outboundSchema;
  /** @deprecated use `GetApiAgentsIdRequest$Outbound` instead. */
  export type Outbound = GetApiAgentsIdRequest$Outbound;
}

export function getApiAgentsIdRequestToJSON(
  getApiAgentsIdRequest: GetApiAgentsIdRequest,
): string {
  return JSON.stringify(
    GetApiAgentsIdRequest$outboundSchema.parse(getApiAgentsIdRequest),
  );
}

export function getApiAgentsIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetApiAgentsIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetApiAgentsIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetApiAgentsIdRequest' from JSON`,
  );
}
