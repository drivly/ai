/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteApiProvidersIdRequest = {
  /**
   * The ID of the Provider
   */
  id: string;
};

/**
 * Successfully deleted
 */
export type DeleteApiProvidersIdResponseBody = {
  message?: string | undefined;
};

/** @internal */
export const DeleteApiProvidersIdRequest$inboundSchema: z.ZodType<
  DeleteApiProvidersIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type DeleteApiProvidersIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const DeleteApiProvidersIdRequest$outboundSchema: z.ZodType<
  DeleteApiProvidersIdRequest$Outbound,
  z.ZodTypeDef,
  DeleteApiProvidersIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiProvidersIdRequest$ {
  /** @deprecated use `DeleteApiProvidersIdRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteApiProvidersIdRequest$inboundSchema;
  /** @deprecated use `DeleteApiProvidersIdRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteApiProvidersIdRequest$outboundSchema;
  /** @deprecated use `DeleteApiProvidersIdRequest$Outbound` instead. */
  export type Outbound = DeleteApiProvidersIdRequest$Outbound;
}

export function deleteApiProvidersIdRequestToJSON(
  deleteApiProvidersIdRequest: DeleteApiProvidersIdRequest,
): string {
  return JSON.stringify(
    DeleteApiProvidersIdRequest$outboundSchema.parse(
      deleteApiProvidersIdRequest,
    ),
  );
}

export function deleteApiProvidersIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteApiProvidersIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteApiProvidersIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiProvidersIdRequest' from JSON`,
  );
}

/** @internal */
export const DeleteApiProvidersIdResponseBody$inboundSchema: z.ZodType<
  DeleteApiProvidersIdResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string().optional(),
});

/** @internal */
export type DeleteApiProvidersIdResponseBody$Outbound = {
  message?: string | undefined;
};

/** @internal */
export const DeleteApiProvidersIdResponseBody$outboundSchema: z.ZodType<
  DeleteApiProvidersIdResponseBody$Outbound,
  z.ZodTypeDef,
  DeleteApiProvidersIdResponseBody
> = z.object({
  message: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiProvidersIdResponseBody$ {
  /** @deprecated use `DeleteApiProvidersIdResponseBody$inboundSchema` instead. */
  export const inboundSchema = DeleteApiProvidersIdResponseBody$inboundSchema;
  /** @deprecated use `DeleteApiProvidersIdResponseBody$outboundSchema` instead. */
  export const outboundSchema = DeleteApiProvidersIdResponseBody$outboundSchema;
  /** @deprecated use `DeleteApiProvidersIdResponseBody$Outbound` instead. */
  export type Outbound = DeleteApiProvidersIdResponseBody$Outbound;
}

export function deleteApiProvidersIdResponseBodyToJSON(
  deleteApiProvidersIdResponseBody: DeleteApiProvidersIdResponseBody,
): string {
  return JSON.stringify(
    DeleteApiProvidersIdResponseBody$outboundSchema.parse(
      deleteApiProvidersIdResponseBody,
    ),
  );
}

export function deleteApiProvidersIdResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<DeleteApiProvidersIdResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteApiProvidersIdResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiProvidersIdResponseBody' from JSON`,
  );
}
