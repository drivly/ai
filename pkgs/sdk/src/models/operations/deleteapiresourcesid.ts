/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteApiResourcesIdRequest = {
  /**
   * The ID of the Resource
   */
  id: string;
};

/**
 * Successfully deleted
 */
export type DeleteApiResourcesIdResponseBody = {
  message?: string | undefined;
};

/** @internal */
export const DeleteApiResourcesIdRequest$inboundSchema: z.ZodType<
  DeleteApiResourcesIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type DeleteApiResourcesIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const DeleteApiResourcesIdRequest$outboundSchema: z.ZodType<
  DeleteApiResourcesIdRequest$Outbound,
  z.ZodTypeDef,
  DeleteApiResourcesIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiResourcesIdRequest$ {
  /** @deprecated use `DeleteApiResourcesIdRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteApiResourcesIdRequest$inboundSchema;
  /** @deprecated use `DeleteApiResourcesIdRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteApiResourcesIdRequest$outboundSchema;
  /** @deprecated use `DeleteApiResourcesIdRequest$Outbound` instead. */
  export type Outbound = DeleteApiResourcesIdRequest$Outbound;
}

export function deleteApiResourcesIdRequestToJSON(
  deleteApiResourcesIdRequest: DeleteApiResourcesIdRequest,
): string {
  return JSON.stringify(
    DeleteApiResourcesIdRequest$outboundSchema.parse(
      deleteApiResourcesIdRequest,
    ),
  );
}

export function deleteApiResourcesIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteApiResourcesIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteApiResourcesIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiResourcesIdRequest' from JSON`,
  );
}

/** @internal */
export const DeleteApiResourcesIdResponseBody$inboundSchema: z.ZodType<
  DeleteApiResourcesIdResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string().optional(),
});

/** @internal */
export type DeleteApiResourcesIdResponseBody$Outbound = {
  message?: string | undefined;
};

/** @internal */
export const DeleteApiResourcesIdResponseBody$outboundSchema: z.ZodType<
  DeleteApiResourcesIdResponseBody$Outbound,
  z.ZodTypeDef,
  DeleteApiResourcesIdResponseBody
> = z.object({
  message: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiResourcesIdResponseBody$ {
  /** @deprecated use `DeleteApiResourcesIdResponseBody$inboundSchema` instead. */
  export const inboundSchema = DeleteApiResourcesIdResponseBody$inboundSchema;
  /** @deprecated use `DeleteApiResourcesIdResponseBody$outboundSchema` instead. */
  export const outboundSchema = DeleteApiResourcesIdResponseBody$outboundSchema;
  /** @deprecated use `DeleteApiResourcesIdResponseBody$Outbound` instead. */
  export type Outbound = DeleteApiResourcesIdResponseBody$Outbound;
}

export function deleteApiResourcesIdResponseBodyToJSON(
  deleteApiResourcesIdResponseBody: DeleteApiResourcesIdResponseBody,
): string {
  return JSON.stringify(
    DeleteApiResourcesIdResponseBody$outboundSchema.parse(
      deleteApiResourcesIdResponseBody,
    ),
  );
}

export function deleteApiResourcesIdResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<DeleteApiResourcesIdResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteApiResourcesIdResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiResourcesIdResponseBody' from JSON`,
  );
}
