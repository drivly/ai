/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetApiWorkflowsIdRequest = {
  /**
   * The ID of the Workflow
   */
  id: string;
};

/** @internal */
export const GetApiWorkflowsIdRequest$inboundSchema: z.ZodType<
  GetApiWorkflowsIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type GetApiWorkflowsIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const GetApiWorkflowsIdRequest$outboundSchema: z.ZodType<
  GetApiWorkflowsIdRequest$Outbound,
  z.ZodTypeDef,
  GetApiWorkflowsIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiWorkflowsIdRequest$ {
  /** @deprecated use `GetApiWorkflowsIdRequest$inboundSchema` instead. */
  export const inboundSchema = GetApiWorkflowsIdRequest$inboundSchema;
  /** @deprecated use `GetApiWorkflowsIdRequest$outboundSchema` instead. */
  export const outboundSchema = GetApiWorkflowsIdRequest$outboundSchema;
  /** @deprecated use `GetApiWorkflowsIdRequest$Outbound` instead. */
  export type Outbound = GetApiWorkflowsIdRequest$Outbound;
}

export function getApiWorkflowsIdRequestToJSON(
  getApiWorkflowsIdRequest: GetApiWorkflowsIdRequest,
): string {
  return JSON.stringify(
    GetApiWorkflowsIdRequest$outboundSchema.parse(getApiWorkflowsIdRequest),
  );
}

export function getApiWorkflowsIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetApiWorkflowsIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetApiWorkflowsIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetApiWorkflowsIdRequest' from JSON`,
  );
}
