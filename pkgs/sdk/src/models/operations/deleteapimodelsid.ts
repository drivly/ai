/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteApiModelsIdRequest = {
  /**
   * The ID of the Model
   */
  id: string;
};

/**
 * Successfully deleted
 */
export type DeleteApiModelsIdResponseBody = {
  message?: string | undefined;
};

/** @internal */
export const DeleteApiModelsIdRequest$inboundSchema: z.ZodType<
  DeleteApiModelsIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type DeleteApiModelsIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const DeleteApiModelsIdRequest$outboundSchema: z.ZodType<
  DeleteApiModelsIdRequest$Outbound,
  z.ZodTypeDef,
  DeleteApiModelsIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiModelsIdRequest$ {
  /** @deprecated use `DeleteApiModelsIdRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteApiModelsIdRequest$inboundSchema;
  /** @deprecated use `DeleteApiModelsIdRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteApiModelsIdRequest$outboundSchema;
  /** @deprecated use `DeleteApiModelsIdRequest$Outbound` instead. */
  export type Outbound = DeleteApiModelsIdRequest$Outbound;
}

export function deleteApiModelsIdRequestToJSON(
  deleteApiModelsIdRequest: DeleteApiModelsIdRequest,
): string {
  return JSON.stringify(
    DeleteApiModelsIdRequest$outboundSchema.parse(deleteApiModelsIdRequest),
  );
}

export function deleteApiModelsIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteApiModelsIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteApiModelsIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiModelsIdRequest' from JSON`,
  );
}

/** @internal */
export const DeleteApiModelsIdResponseBody$inboundSchema: z.ZodType<
  DeleteApiModelsIdResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string().optional(),
});

/** @internal */
export type DeleteApiModelsIdResponseBody$Outbound = {
  message?: string | undefined;
};

/** @internal */
export const DeleteApiModelsIdResponseBody$outboundSchema: z.ZodType<
  DeleteApiModelsIdResponseBody$Outbound,
  z.ZodTypeDef,
  DeleteApiModelsIdResponseBody
> = z.object({
  message: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiModelsIdResponseBody$ {
  /** @deprecated use `DeleteApiModelsIdResponseBody$inboundSchema` instead. */
  export const inboundSchema = DeleteApiModelsIdResponseBody$inboundSchema;
  /** @deprecated use `DeleteApiModelsIdResponseBody$outboundSchema` instead. */
  export const outboundSchema = DeleteApiModelsIdResponseBody$outboundSchema;
  /** @deprecated use `DeleteApiModelsIdResponseBody$Outbound` instead. */
  export type Outbound = DeleteApiModelsIdResponseBody$Outbound;
}

export function deleteApiModelsIdResponseBodyToJSON(
  deleteApiModelsIdResponseBody: DeleteApiModelsIdResponseBody,
): string {
  return JSON.stringify(
    DeleteApiModelsIdResponseBody$outboundSchema.parse(
      deleteApiModelsIdResponseBody,
    ),
  );
}

export function deleteApiModelsIdResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<DeleteApiModelsIdResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteApiModelsIdResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiModelsIdResponseBody' from JSON`,
  );
}
