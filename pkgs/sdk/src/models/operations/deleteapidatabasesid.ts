/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteApiDatabasesIdRequest = {
  /**
   * The ID of the Database
   */
  id: string;
};

/**
 * Successfully deleted
 */
export type DeleteApiDatabasesIdResponseBody = {
  message?: string | undefined;
};

/** @internal */
export const DeleteApiDatabasesIdRequest$inboundSchema: z.ZodType<
  DeleteApiDatabasesIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type DeleteApiDatabasesIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const DeleteApiDatabasesIdRequest$outboundSchema: z.ZodType<
  DeleteApiDatabasesIdRequest$Outbound,
  z.ZodTypeDef,
  DeleteApiDatabasesIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiDatabasesIdRequest$ {
  /** @deprecated use `DeleteApiDatabasesIdRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteApiDatabasesIdRequest$inboundSchema;
  /** @deprecated use `DeleteApiDatabasesIdRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteApiDatabasesIdRequest$outboundSchema;
  /** @deprecated use `DeleteApiDatabasesIdRequest$Outbound` instead. */
  export type Outbound = DeleteApiDatabasesIdRequest$Outbound;
}

export function deleteApiDatabasesIdRequestToJSON(
  deleteApiDatabasesIdRequest: DeleteApiDatabasesIdRequest,
): string {
  return JSON.stringify(
    DeleteApiDatabasesIdRequest$outboundSchema.parse(
      deleteApiDatabasesIdRequest,
    ),
  );
}

export function deleteApiDatabasesIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteApiDatabasesIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteApiDatabasesIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiDatabasesIdRequest' from JSON`,
  );
}

/** @internal */
export const DeleteApiDatabasesIdResponseBody$inboundSchema: z.ZodType<
  DeleteApiDatabasesIdResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string().optional(),
});

/** @internal */
export type DeleteApiDatabasesIdResponseBody$Outbound = {
  message?: string | undefined;
};

/** @internal */
export const DeleteApiDatabasesIdResponseBody$outboundSchema: z.ZodType<
  DeleteApiDatabasesIdResponseBody$Outbound,
  z.ZodTypeDef,
  DeleteApiDatabasesIdResponseBody
> = z.object({
  message: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiDatabasesIdResponseBody$ {
  /** @deprecated use `DeleteApiDatabasesIdResponseBody$inboundSchema` instead. */
  export const inboundSchema = DeleteApiDatabasesIdResponseBody$inboundSchema;
  /** @deprecated use `DeleteApiDatabasesIdResponseBody$outboundSchema` instead. */
  export const outboundSchema = DeleteApiDatabasesIdResponseBody$outboundSchema;
  /** @deprecated use `DeleteApiDatabasesIdResponseBody$Outbound` instead. */
  export type Outbound = DeleteApiDatabasesIdResponseBody$Outbound;
}

export function deleteApiDatabasesIdResponseBodyToJSON(
  deleteApiDatabasesIdResponseBody: DeleteApiDatabasesIdResponseBody,
): string {
  return JSON.stringify(
    DeleteApiDatabasesIdResponseBody$outboundSchema.parse(
      deleteApiDatabasesIdResponseBody,
    ),
  );
}

export function deleteApiDatabasesIdResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<DeleteApiDatabasesIdResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteApiDatabasesIdResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiDatabasesIdResponseBody' from JSON`,
  );
}
