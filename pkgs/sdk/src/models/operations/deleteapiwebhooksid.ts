/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteApiWebhooksIdRequest = {
  /**
   * The ID of the Webhook
   */
  id: string;
};

/**
 * Successfully deleted
 */
export type DeleteApiWebhooksIdResponseBody = {
  message?: string | undefined;
};

/** @internal */
export const DeleteApiWebhooksIdRequest$inboundSchema: z.ZodType<
  DeleteApiWebhooksIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type DeleteApiWebhooksIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const DeleteApiWebhooksIdRequest$outboundSchema: z.ZodType<
  DeleteApiWebhooksIdRequest$Outbound,
  z.ZodTypeDef,
  DeleteApiWebhooksIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiWebhooksIdRequest$ {
  /** @deprecated use `DeleteApiWebhooksIdRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteApiWebhooksIdRequest$inboundSchema;
  /** @deprecated use `DeleteApiWebhooksIdRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteApiWebhooksIdRequest$outboundSchema;
  /** @deprecated use `DeleteApiWebhooksIdRequest$Outbound` instead. */
  export type Outbound = DeleteApiWebhooksIdRequest$Outbound;
}

export function deleteApiWebhooksIdRequestToJSON(
  deleteApiWebhooksIdRequest: DeleteApiWebhooksIdRequest,
): string {
  return JSON.stringify(
    DeleteApiWebhooksIdRequest$outboundSchema.parse(deleteApiWebhooksIdRequest),
  );
}

export function deleteApiWebhooksIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteApiWebhooksIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteApiWebhooksIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiWebhooksIdRequest' from JSON`,
  );
}

/** @internal */
export const DeleteApiWebhooksIdResponseBody$inboundSchema: z.ZodType<
  DeleteApiWebhooksIdResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string().optional(),
});

/** @internal */
export type DeleteApiWebhooksIdResponseBody$Outbound = {
  message?: string | undefined;
};

/** @internal */
export const DeleteApiWebhooksIdResponseBody$outboundSchema: z.ZodType<
  DeleteApiWebhooksIdResponseBody$Outbound,
  z.ZodTypeDef,
  DeleteApiWebhooksIdResponseBody
> = z.object({
  message: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiWebhooksIdResponseBody$ {
  /** @deprecated use `DeleteApiWebhooksIdResponseBody$inboundSchema` instead. */
  export const inboundSchema = DeleteApiWebhooksIdResponseBody$inboundSchema;
  /** @deprecated use `DeleteApiWebhooksIdResponseBody$outboundSchema` instead. */
  export const outboundSchema = DeleteApiWebhooksIdResponseBody$outboundSchema;
  /** @deprecated use `DeleteApiWebhooksIdResponseBody$Outbound` instead. */
  export type Outbound = DeleteApiWebhooksIdResponseBody$Outbound;
}

export function deleteApiWebhooksIdResponseBodyToJSON(
  deleteApiWebhooksIdResponseBody: DeleteApiWebhooksIdResponseBody,
): string {
  return JSON.stringify(
    DeleteApiWebhooksIdResponseBody$outboundSchema.parse(
      deleteApiWebhooksIdResponseBody,
    ),
  );
}

export function deleteApiWebhooksIdResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<DeleteApiWebhooksIdResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteApiWebhooksIdResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiWebhooksIdResponseBody' from JSON`,
  );
}
