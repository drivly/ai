/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteApiSearchesIdRequest = {
  /**
   * The ID of the Search
   */
  id: string;
};

/**
 * Successfully deleted
 */
export type DeleteApiSearchesIdResponseBody = {
  message?: string | undefined;
};

/** @internal */
export const DeleteApiSearchesIdRequest$inboundSchema: z.ZodType<
  DeleteApiSearchesIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type DeleteApiSearchesIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const DeleteApiSearchesIdRequest$outboundSchema: z.ZodType<
  DeleteApiSearchesIdRequest$Outbound,
  z.ZodTypeDef,
  DeleteApiSearchesIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiSearchesIdRequest$ {
  /** @deprecated use `DeleteApiSearchesIdRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteApiSearchesIdRequest$inboundSchema;
  /** @deprecated use `DeleteApiSearchesIdRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteApiSearchesIdRequest$outboundSchema;
  /** @deprecated use `DeleteApiSearchesIdRequest$Outbound` instead. */
  export type Outbound = DeleteApiSearchesIdRequest$Outbound;
}

export function deleteApiSearchesIdRequestToJSON(
  deleteApiSearchesIdRequest: DeleteApiSearchesIdRequest,
): string {
  return JSON.stringify(
    DeleteApiSearchesIdRequest$outboundSchema.parse(deleteApiSearchesIdRequest),
  );
}

export function deleteApiSearchesIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteApiSearchesIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteApiSearchesIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiSearchesIdRequest' from JSON`,
  );
}

/** @internal */
export const DeleteApiSearchesIdResponseBody$inboundSchema: z.ZodType<
  DeleteApiSearchesIdResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string().optional(),
});

/** @internal */
export type DeleteApiSearchesIdResponseBody$Outbound = {
  message?: string | undefined;
};

/** @internal */
export const DeleteApiSearchesIdResponseBody$outboundSchema: z.ZodType<
  DeleteApiSearchesIdResponseBody$Outbound,
  z.ZodTypeDef,
  DeleteApiSearchesIdResponseBody
> = z.object({
  message: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiSearchesIdResponseBody$ {
  /** @deprecated use `DeleteApiSearchesIdResponseBody$inboundSchema` instead. */
  export const inboundSchema = DeleteApiSearchesIdResponseBody$inboundSchema;
  /** @deprecated use `DeleteApiSearchesIdResponseBody$outboundSchema` instead. */
  export const outboundSchema = DeleteApiSearchesIdResponseBody$outboundSchema;
  /** @deprecated use `DeleteApiSearchesIdResponseBody$Outbound` instead. */
  export type Outbound = DeleteApiSearchesIdResponseBody$Outbound;
}

export function deleteApiSearchesIdResponseBodyToJSON(
  deleteApiSearchesIdResponseBody: DeleteApiSearchesIdResponseBody,
): string {
  return JSON.stringify(
    DeleteApiSearchesIdResponseBody$outboundSchema.parse(
      deleteApiSearchesIdResponseBody,
    ),
  );
}

export function deleteApiSearchesIdResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<DeleteApiSearchesIdResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteApiSearchesIdResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiSearchesIdResponseBody' from JSON`,
  );
}
