/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetApiSettingsIdRequest = {
  /**
   * The ID of the Setting
   */
  id: string;
};

/** @internal */
export const GetApiSettingsIdRequest$inboundSchema: z.ZodType<
  GetApiSettingsIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type GetApiSettingsIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const GetApiSettingsIdRequest$outboundSchema: z.ZodType<
  GetApiSettingsIdRequest$Outbound,
  z.ZodTypeDef,
  GetApiSettingsIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiSettingsIdRequest$ {
  /** @deprecated use `GetApiSettingsIdRequest$inboundSchema` instead. */
  export const inboundSchema = GetApiSettingsIdRequest$inboundSchema;
  /** @deprecated use `GetApiSettingsIdRequest$outboundSchema` instead. */
  export const outboundSchema = GetApiSettingsIdRequest$outboundSchema;
  /** @deprecated use `GetApiSettingsIdRequest$Outbound` instead. */
  export type Outbound = GetApiSettingsIdRequest$Outbound;
}

export function getApiSettingsIdRequestToJSON(
  getApiSettingsIdRequest: GetApiSettingsIdRequest,
): string {
  return JSON.stringify(
    GetApiSettingsIdRequest$outboundSchema.parse(getApiSettingsIdRequest),
  );
}

export function getApiSettingsIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetApiSettingsIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetApiSettingsIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetApiSettingsIdRequest' from JSON`,
  );
}
