/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetApiProjectsIdRequest = {
  /**
   * The ID of the Project
   */
  id: string;
};

/** @internal */
export const GetApiProjectsIdRequest$inboundSchema: z.ZodType<
  GetApiProjectsIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type GetApiProjectsIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const GetApiProjectsIdRequest$outboundSchema: z.ZodType<
  GetApiProjectsIdRequest$Outbound,
  z.ZodTypeDef,
  GetApiProjectsIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiProjectsIdRequest$ {
  /** @deprecated use `GetApiProjectsIdRequest$inboundSchema` instead. */
  export const inboundSchema = GetApiProjectsIdRequest$inboundSchema;
  /** @deprecated use `GetApiProjectsIdRequest$outboundSchema` instead. */
  export const outboundSchema = GetApiProjectsIdRequest$outboundSchema;
  /** @deprecated use `GetApiProjectsIdRequest$Outbound` instead. */
  export type Outbound = GetApiProjectsIdRequest$Outbound;
}

export function getApiProjectsIdRequestToJSON(
  getApiProjectsIdRequest: GetApiProjectsIdRequest,
): string {
  return JSON.stringify(
    GetApiProjectsIdRequest$outboundSchema.parse(getApiProjectsIdRequest),
  );
}

export function getApiProjectsIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetApiProjectsIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetApiProjectsIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetApiProjectsIdRequest' from JSON`,
  );
}
