/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteApiDomainsIdRequest = {
  /**
   * The ID of the Domain
   */
  id: string;
};

/**
 * Successfully deleted
 */
export type DeleteApiDomainsIdResponseBody = {
  message?: string | undefined;
};

/** @internal */
export const DeleteApiDomainsIdRequest$inboundSchema: z.ZodType<
  DeleteApiDomainsIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type DeleteApiDomainsIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const DeleteApiDomainsIdRequest$outboundSchema: z.ZodType<
  DeleteApiDomainsIdRequest$Outbound,
  z.ZodTypeDef,
  DeleteApiDomainsIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiDomainsIdRequest$ {
  /** @deprecated use `DeleteApiDomainsIdRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteApiDomainsIdRequest$inboundSchema;
  /** @deprecated use `DeleteApiDomainsIdRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteApiDomainsIdRequest$outboundSchema;
  /** @deprecated use `DeleteApiDomainsIdRequest$Outbound` instead. */
  export type Outbound = DeleteApiDomainsIdRequest$Outbound;
}

export function deleteApiDomainsIdRequestToJSON(
  deleteApiDomainsIdRequest: DeleteApiDomainsIdRequest,
): string {
  return JSON.stringify(
    DeleteApiDomainsIdRequest$outboundSchema.parse(deleteApiDomainsIdRequest),
  );
}

export function deleteApiDomainsIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteApiDomainsIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteApiDomainsIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiDomainsIdRequest' from JSON`,
  );
}

/** @internal */
export const DeleteApiDomainsIdResponseBody$inboundSchema: z.ZodType<
  DeleteApiDomainsIdResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string().optional(),
});

/** @internal */
export type DeleteApiDomainsIdResponseBody$Outbound = {
  message?: string | undefined;
};

/** @internal */
export const DeleteApiDomainsIdResponseBody$outboundSchema: z.ZodType<
  DeleteApiDomainsIdResponseBody$Outbound,
  z.ZodTypeDef,
  DeleteApiDomainsIdResponseBody
> = z.object({
  message: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiDomainsIdResponseBody$ {
  /** @deprecated use `DeleteApiDomainsIdResponseBody$inboundSchema` instead. */
  export const inboundSchema = DeleteApiDomainsIdResponseBody$inboundSchema;
  /** @deprecated use `DeleteApiDomainsIdResponseBody$outboundSchema` instead. */
  export const outboundSchema = DeleteApiDomainsIdResponseBody$outboundSchema;
  /** @deprecated use `DeleteApiDomainsIdResponseBody$Outbound` instead. */
  export type Outbound = DeleteApiDomainsIdResponseBody$Outbound;
}

export function deleteApiDomainsIdResponseBodyToJSON(
  deleteApiDomainsIdResponseBody: DeleteApiDomainsIdResponseBody,
): string {
  return JSON.stringify(
    DeleteApiDomainsIdResponseBody$outboundSchema.parse(
      deleteApiDomainsIdResponseBody,
    ),
  );
}

export function deleteApiDomainsIdResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<DeleteApiDomainsIdResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteApiDomainsIdResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiDomainsIdResponseBody' from JSON`,
  );
}
