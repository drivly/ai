/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteApiGenerationBatchesIdRequest = {
  /**
   * The ID of the Generation Batch
   */
  id: string;
};

/**
 * Successfully deleted
 */
export type DeleteApiGenerationBatchesIdResponseBody = {
  message?: string | undefined;
};

/** @internal */
export const DeleteApiGenerationBatchesIdRequest$inboundSchema: z.ZodType<
  DeleteApiGenerationBatchesIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type DeleteApiGenerationBatchesIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const DeleteApiGenerationBatchesIdRequest$outboundSchema: z.ZodType<
  DeleteApiGenerationBatchesIdRequest$Outbound,
  z.ZodTypeDef,
  DeleteApiGenerationBatchesIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiGenerationBatchesIdRequest$ {
  /** @deprecated use `DeleteApiGenerationBatchesIdRequest$inboundSchema` instead. */
  export const inboundSchema =
    DeleteApiGenerationBatchesIdRequest$inboundSchema;
  /** @deprecated use `DeleteApiGenerationBatchesIdRequest$outboundSchema` instead. */
  export const outboundSchema =
    DeleteApiGenerationBatchesIdRequest$outboundSchema;
  /** @deprecated use `DeleteApiGenerationBatchesIdRequest$Outbound` instead. */
  export type Outbound = DeleteApiGenerationBatchesIdRequest$Outbound;
}

export function deleteApiGenerationBatchesIdRequestToJSON(
  deleteApiGenerationBatchesIdRequest: DeleteApiGenerationBatchesIdRequest,
): string {
  return JSON.stringify(
    DeleteApiGenerationBatchesIdRequest$outboundSchema.parse(
      deleteApiGenerationBatchesIdRequest,
    ),
  );
}

export function deleteApiGenerationBatchesIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteApiGenerationBatchesIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      DeleteApiGenerationBatchesIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiGenerationBatchesIdRequest' from JSON`,
  );
}

/** @internal */
export const DeleteApiGenerationBatchesIdResponseBody$inboundSchema: z.ZodType<
  DeleteApiGenerationBatchesIdResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string().optional(),
});

/** @internal */
export type DeleteApiGenerationBatchesIdResponseBody$Outbound = {
  message?: string | undefined;
};

/** @internal */
export const DeleteApiGenerationBatchesIdResponseBody$outboundSchema: z.ZodType<
  DeleteApiGenerationBatchesIdResponseBody$Outbound,
  z.ZodTypeDef,
  DeleteApiGenerationBatchesIdResponseBody
> = z.object({
  message: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiGenerationBatchesIdResponseBody$ {
  /** @deprecated use `DeleteApiGenerationBatchesIdResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    DeleteApiGenerationBatchesIdResponseBody$inboundSchema;
  /** @deprecated use `DeleteApiGenerationBatchesIdResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    DeleteApiGenerationBatchesIdResponseBody$outboundSchema;
  /** @deprecated use `DeleteApiGenerationBatchesIdResponseBody$Outbound` instead. */
  export type Outbound = DeleteApiGenerationBatchesIdResponseBody$Outbound;
}

export function deleteApiGenerationBatchesIdResponseBodyToJSON(
  deleteApiGenerationBatchesIdResponseBody:
    DeleteApiGenerationBatchesIdResponseBody,
): string {
  return JSON.stringify(
    DeleteApiGenerationBatchesIdResponseBody$outboundSchema.parse(
      deleteApiGenerationBatchesIdResponseBody,
    ),
  );
}

export function deleteApiGenerationBatchesIdResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  DeleteApiGenerationBatchesIdResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DeleteApiGenerationBatchesIdResponseBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DeleteApiGenerationBatchesIdResponseBody' from JSON`,
  );
}
