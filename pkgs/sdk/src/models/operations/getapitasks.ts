/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetApiTasksLinks = {
  home?: string | undefined;
  next?: string | undefined;
  prev?: string | undefined;
};

export type Tasks = {
  href?: string | undefined;
};

/**
 * Successful response
 */
export type GetApiTasksResponseBody = {
  links?: GetApiTasksLinks | undefined;
  tasks?: { [k: string]: Tasks } | undefined;
};

/** @internal */
export const GetApiTasksLinks$inboundSchema: z.ZodType<
  GetApiTasksLinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  home: z.string().optional(),
  next: z.string().optional(),
  prev: z.string().optional(),
});

/** @internal */
export type GetApiTasksLinks$Outbound = {
  home?: string | undefined;
  next?: string | undefined;
  prev?: string | undefined;
};

/** @internal */
export const GetApiTasksLinks$outboundSchema: z.ZodType<
  GetApiTasksLinks$Outbound,
  z.ZodTypeDef,
  GetApiTasksLinks
> = z.object({
  home: z.string().optional(),
  next: z.string().optional(),
  prev: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiTasksLinks$ {
  /** @deprecated use `GetApiTasksLinks$inboundSchema` instead. */
  export const inboundSchema = GetApiTasksLinks$inboundSchema;
  /** @deprecated use `GetApiTasksLinks$outboundSchema` instead. */
  export const outboundSchema = GetApiTasksLinks$outboundSchema;
  /** @deprecated use `GetApiTasksLinks$Outbound` instead. */
  export type Outbound = GetApiTasksLinks$Outbound;
}

export function getApiTasksLinksToJSON(
  getApiTasksLinks: GetApiTasksLinks,
): string {
  return JSON.stringify(
    GetApiTasksLinks$outboundSchema.parse(getApiTasksLinks),
  );
}

export function getApiTasksLinksFromJSON(
  jsonString: string,
): SafeParseResult<GetApiTasksLinks, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetApiTasksLinks$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetApiTasksLinks' from JSON`,
  );
}

/** @internal */
export const Tasks$inboundSchema: z.ZodType<Tasks, z.ZodTypeDef, unknown> = z
  .object({
    href: z.string().optional(),
  });

/** @internal */
export type Tasks$Outbound = {
  href?: string | undefined;
};

/** @internal */
export const Tasks$outboundSchema: z.ZodType<
  Tasks$Outbound,
  z.ZodTypeDef,
  Tasks
> = z.object({
  href: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Tasks$ {
  /** @deprecated use `Tasks$inboundSchema` instead. */
  export const inboundSchema = Tasks$inboundSchema;
  /** @deprecated use `Tasks$outboundSchema` instead. */
  export const outboundSchema = Tasks$outboundSchema;
  /** @deprecated use `Tasks$Outbound` instead. */
  export type Outbound = Tasks$Outbound;
}

export function tasksToJSON(tasks: Tasks): string {
  return JSON.stringify(Tasks$outboundSchema.parse(tasks));
}

export function tasksFromJSON(
  jsonString: string,
): SafeParseResult<Tasks, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Tasks$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Tasks' from JSON`,
  );
}

/** @internal */
export const GetApiTasksResponseBody$inboundSchema: z.ZodType<
  GetApiTasksResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  links: z.lazy(() => GetApiTasksLinks$inboundSchema).optional(),
  tasks: z.record(z.lazy(() => Tasks$inboundSchema)).optional(),
});

/** @internal */
export type GetApiTasksResponseBody$Outbound = {
  links?: GetApiTasksLinks$Outbound | undefined;
  tasks?: { [k: string]: Tasks$Outbound } | undefined;
};

/** @internal */
export const GetApiTasksResponseBody$outboundSchema: z.ZodType<
  GetApiTasksResponseBody$Outbound,
  z.ZodTypeDef,
  GetApiTasksResponseBody
> = z.object({
  links: z.lazy(() => GetApiTasksLinks$outboundSchema).optional(),
  tasks: z.record(z.lazy(() => Tasks$outboundSchema)).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiTasksResponseBody$ {
  /** @deprecated use `GetApiTasksResponseBody$inboundSchema` instead. */
  export const inboundSchema = GetApiTasksResponseBody$inboundSchema;
  /** @deprecated use `GetApiTasksResponseBody$outboundSchema` instead. */
  export const outboundSchema = GetApiTasksResponseBody$outboundSchema;
  /** @deprecated use `GetApiTasksResponseBody$Outbound` instead. */
  export type Outbound = GetApiTasksResponseBody$Outbound;
}

export function getApiTasksResponseBodyToJSON(
  getApiTasksResponseBody: GetApiTasksResponseBody,
): string {
  return JSON.stringify(
    GetApiTasksResponseBody$outboundSchema.parse(getApiTasksResponseBody),
  );
}

export function getApiTasksResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<GetApiTasksResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetApiTasksResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetApiTasksResponseBody' from JSON`,
  );
}
