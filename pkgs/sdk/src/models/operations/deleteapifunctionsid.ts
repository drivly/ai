/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteApiFunctionsIdRequest = {
  /**
   * The ID of the Function
   */
  id: string;
};

/**
 * Successfully deleted
 */
export type DeleteApiFunctionsIdResponseBody = {
  message?: string | undefined;
};

/** @internal */
export const DeleteApiFunctionsIdRequest$inboundSchema: z.ZodType<
  DeleteApiFunctionsIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type DeleteApiFunctionsIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const DeleteApiFunctionsIdRequest$outboundSchema: z.ZodType<
  DeleteApiFunctionsIdRequest$Outbound,
  z.ZodTypeDef,
  DeleteApiFunctionsIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiFunctionsIdRequest$ {
  /** @deprecated use `DeleteApiFunctionsIdRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteApiFunctionsIdRequest$inboundSchema;
  /** @deprecated use `DeleteApiFunctionsIdRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteApiFunctionsIdRequest$outboundSchema;
  /** @deprecated use `DeleteApiFunctionsIdRequest$Outbound` instead. */
  export type Outbound = DeleteApiFunctionsIdRequest$Outbound;
}

export function deleteApiFunctionsIdRequestToJSON(
  deleteApiFunctionsIdRequest: DeleteApiFunctionsIdRequest,
): string {
  return JSON.stringify(
    DeleteApiFunctionsIdRequest$outboundSchema.parse(
      deleteApiFunctionsIdRequest,
    ),
  );
}

export function deleteApiFunctionsIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteApiFunctionsIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteApiFunctionsIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiFunctionsIdRequest' from JSON`,
  );
}

/** @internal */
export const DeleteApiFunctionsIdResponseBody$inboundSchema: z.ZodType<
  DeleteApiFunctionsIdResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string().optional(),
});

/** @internal */
export type DeleteApiFunctionsIdResponseBody$Outbound = {
  message?: string | undefined;
};

/** @internal */
export const DeleteApiFunctionsIdResponseBody$outboundSchema: z.ZodType<
  DeleteApiFunctionsIdResponseBody$Outbound,
  z.ZodTypeDef,
  DeleteApiFunctionsIdResponseBody
> = z.object({
  message: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiFunctionsIdResponseBody$ {
  /** @deprecated use `DeleteApiFunctionsIdResponseBody$inboundSchema` instead. */
  export const inboundSchema = DeleteApiFunctionsIdResponseBody$inboundSchema;
  /** @deprecated use `DeleteApiFunctionsIdResponseBody$outboundSchema` instead. */
  export const outboundSchema = DeleteApiFunctionsIdResponseBody$outboundSchema;
  /** @deprecated use `DeleteApiFunctionsIdResponseBody$Outbound` instead. */
  export type Outbound = DeleteApiFunctionsIdResponseBody$Outbound;
}

export function deleteApiFunctionsIdResponseBodyToJSON(
  deleteApiFunctionsIdResponseBody: DeleteApiFunctionsIdResponseBody,
): string {
  return JSON.stringify(
    DeleteApiFunctionsIdResponseBody$outboundSchema.parse(
      deleteApiFunctionsIdResponseBody,
    ),
  );
}

export function deleteApiFunctionsIdResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<DeleteApiFunctionsIdResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteApiFunctionsIdResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiFunctionsIdResponseBody' from JSON`,
  );
}
