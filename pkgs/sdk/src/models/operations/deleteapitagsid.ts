/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteApiTagsIdRequest = {
  /**
   * The ID of the Tag
   */
  id: string;
};

/**
 * Successfully deleted
 */
export type DeleteApiTagsIdResponseBody = {
  message?: string | undefined;
};

/** @internal */
export const DeleteApiTagsIdRequest$inboundSchema: z.ZodType<
  DeleteApiTagsIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type DeleteApiTagsIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const DeleteApiTagsIdRequest$outboundSchema: z.ZodType<
  DeleteApiTagsIdRequest$Outbound,
  z.ZodTypeDef,
  DeleteApiTagsIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiTagsIdRequest$ {
  /** @deprecated use `DeleteApiTagsIdRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteApiTagsIdRequest$inboundSchema;
  /** @deprecated use `DeleteApiTagsIdRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteApiTagsIdRequest$outboundSchema;
  /** @deprecated use `DeleteApiTagsIdRequest$Outbound` instead. */
  export type Outbound = DeleteApiTagsIdRequest$Outbound;
}

export function deleteApiTagsIdRequestToJSON(
  deleteApiTagsIdRequest: DeleteApiTagsIdRequest,
): string {
  return JSON.stringify(
    DeleteApiTagsIdRequest$outboundSchema.parse(deleteApiTagsIdRequest),
  );
}

export function deleteApiTagsIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteApiTagsIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteApiTagsIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiTagsIdRequest' from JSON`,
  );
}

/** @internal */
export const DeleteApiTagsIdResponseBody$inboundSchema: z.ZodType<
  DeleteApiTagsIdResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string().optional(),
});

/** @internal */
export type DeleteApiTagsIdResponseBody$Outbound = {
  message?: string | undefined;
};

/** @internal */
export const DeleteApiTagsIdResponseBody$outboundSchema: z.ZodType<
  DeleteApiTagsIdResponseBody$Outbound,
  z.ZodTypeDef,
  DeleteApiTagsIdResponseBody
> = z.object({
  message: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiTagsIdResponseBody$ {
  /** @deprecated use `DeleteApiTagsIdResponseBody$inboundSchema` instead. */
  export const inboundSchema = DeleteApiTagsIdResponseBody$inboundSchema;
  /** @deprecated use `DeleteApiTagsIdResponseBody$outboundSchema` instead. */
  export const outboundSchema = DeleteApiTagsIdResponseBody$outboundSchema;
  /** @deprecated use `DeleteApiTagsIdResponseBody$Outbound` instead. */
  export type Outbound = DeleteApiTagsIdResponseBody$Outbound;
}

export function deleteApiTagsIdResponseBodyToJSON(
  deleteApiTagsIdResponseBody: DeleteApiTagsIdResponseBody,
): string {
  return JSON.stringify(
    DeleteApiTagsIdResponseBody$outboundSchema.parse(
      deleteApiTagsIdResponseBody,
    ),
  );
}

export function deleteApiTagsIdResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<DeleteApiTagsIdResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteApiTagsIdResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteApiTagsIdResponseBody' from JSON`,
  );
}
