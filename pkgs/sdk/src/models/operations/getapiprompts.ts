/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetApiPromptsLinks = {
  home?: string | undefined;
  next?: string | undefined;
  prev?: string | undefined;
};

export type Prompts = {
  href?: string | undefined;
};

/**
 * Successful response
 */
export type GetApiPromptsResponseBody = {
  links?: GetApiPromptsLinks | undefined;
  prompts?: { [k: string]: Prompts } | undefined;
};

/** @internal */
export const GetApiPromptsLinks$inboundSchema: z.ZodType<
  GetApiPromptsLinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  home: z.string().optional(),
  next: z.string().optional(),
  prev: z.string().optional(),
});

/** @internal */
export type GetApiPromptsLinks$Outbound = {
  home?: string | undefined;
  next?: string | undefined;
  prev?: string | undefined;
};

/** @internal */
export const GetApiPromptsLinks$outboundSchema: z.ZodType<
  GetApiPromptsLinks$Outbound,
  z.ZodTypeDef,
  GetApiPromptsLinks
> = z.object({
  home: z.string().optional(),
  next: z.string().optional(),
  prev: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiPromptsLinks$ {
  /** @deprecated use `GetApiPromptsLinks$inboundSchema` instead. */
  export const inboundSchema = GetApiPromptsLinks$inboundSchema;
  /** @deprecated use `GetApiPromptsLinks$outboundSchema` instead. */
  export const outboundSchema = GetApiPromptsLinks$outboundSchema;
  /** @deprecated use `GetApiPromptsLinks$Outbound` instead. */
  export type Outbound = GetApiPromptsLinks$Outbound;
}

export function getApiPromptsLinksToJSON(
  getApiPromptsLinks: GetApiPromptsLinks,
): string {
  return JSON.stringify(
    GetApiPromptsLinks$outboundSchema.parse(getApiPromptsLinks),
  );
}

export function getApiPromptsLinksFromJSON(
  jsonString: string,
): SafeParseResult<GetApiPromptsLinks, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetApiPromptsLinks$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetApiPromptsLinks' from JSON`,
  );
}

/** @internal */
export const Prompts$inboundSchema: z.ZodType<Prompts, z.ZodTypeDef, unknown> =
  z.object({
    href: z.string().optional(),
  });

/** @internal */
export type Prompts$Outbound = {
  href?: string | undefined;
};

/** @internal */
export const Prompts$outboundSchema: z.ZodType<
  Prompts$Outbound,
  z.ZodTypeDef,
  Prompts
> = z.object({
  href: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Prompts$ {
  /** @deprecated use `Prompts$inboundSchema` instead. */
  export const inboundSchema = Prompts$inboundSchema;
  /** @deprecated use `Prompts$outboundSchema` instead. */
  export const outboundSchema = Prompts$outboundSchema;
  /** @deprecated use `Prompts$Outbound` instead. */
  export type Outbound = Prompts$Outbound;
}

export function promptsToJSON(prompts: Prompts): string {
  return JSON.stringify(Prompts$outboundSchema.parse(prompts));
}

export function promptsFromJSON(
  jsonString: string,
): SafeParseResult<Prompts, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Prompts$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Prompts' from JSON`,
  );
}

/** @internal */
export const GetApiPromptsResponseBody$inboundSchema: z.ZodType<
  GetApiPromptsResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  links: z.lazy(() => GetApiPromptsLinks$inboundSchema).optional(),
  prompts: z.record(z.lazy(() => Prompts$inboundSchema)).optional(),
});

/** @internal */
export type GetApiPromptsResponseBody$Outbound = {
  links?: GetApiPromptsLinks$Outbound | undefined;
  prompts?: { [k: string]: Prompts$Outbound } | undefined;
};

/** @internal */
export const GetApiPromptsResponseBody$outboundSchema: z.ZodType<
  GetApiPromptsResponseBody$Outbound,
  z.ZodTypeDef,
  GetApiPromptsResponseBody
> = z.object({
  links: z.lazy(() => GetApiPromptsLinks$outboundSchema).optional(),
  prompts: z.record(z.lazy(() => Prompts$outboundSchema)).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiPromptsResponseBody$ {
  /** @deprecated use `GetApiPromptsResponseBody$inboundSchema` instead. */
  export const inboundSchema = GetApiPromptsResponseBody$inboundSchema;
  /** @deprecated use `GetApiPromptsResponseBody$outboundSchema` instead. */
  export const outboundSchema = GetApiPromptsResponseBody$outboundSchema;
  /** @deprecated use `GetApiPromptsResponseBody$Outbound` instead. */
  export type Outbound = GetApiPromptsResponseBody$Outbound;
}

export function getApiPromptsResponseBodyToJSON(
  getApiPromptsResponseBody: GetApiPromptsResponseBody,
): string {
  return JSON.stringify(
    GetApiPromptsResponseBody$outboundSchema.parse(getApiPromptsResponseBody),
  );
}

export function getApiPromptsResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<GetApiPromptsResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetApiPromptsResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetApiPromptsResponseBody' from JSON`,
  );
}
