/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteApiIntegrationCategoriesIdRequest = {
  /**
   * The ID of the Category
   */
  id: string;
};

/**
 * Successfully deleted
 */
export type DeleteApiIntegrationCategoriesIdResponseBody = {
  message?: string | undefined;
};

/** @internal */
export const DeleteApiIntegrationCategoriesIdRequest$inboundSchema: z.ZodType<
  DeleteApiIntegrationCategoriesIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type DeleteApiIntegrationCategoriesIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const DeleteApiIntegrationCategoriesIdRequest$outboundSchema: z.ZodType<
  DeleteApiIntegrationCategoriesIdRequest$Outbound,
  z.ZodTypeDef,
  DeleteApiIntegrationCategoriesIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiIntegrationCategoriesIdRequest$ {
  /** @deprecated use `DeleteApiIntegrationCategoriesIdRequest$inboundSchema` instead. */
  export const inboundSchema =
    DeleteApiIntegrationCategoriesIdRequest$inboundSchema;
  /** @deprecated use `DeleteApiIntegrationCategoriesIdRequest$outboundSchema` instead. */
  export const outboundSchema =
    DeleteApiIntegrationCategoriesIdRequest$outboundSchema;
  /** @deprecated use `DeleteApiIntegrationCategoriesIdRequest$Outbound` instead. */
  export type Outbound = DeleteApiIntegrationCategoriesIdRequest$Outbound;
}

export function deleteApiIntegrationCategoriesIdRequestToJSON(
  deleteApiIntegrationCategoriesIdRequest:
    DeleteApiIntegrationCategoriesIdRequest,
): string {
  return JSON.stringify(
    DeleteApiIntegrationCategoriesIdRequest$outboundSchema.parse(
      deleteApiIntegrationCategoriesIdRequest,
    ),
  );
}

export function deleteApiIntegrationCategoriesIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  DeleteApiIntegrationCategoriesIdRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DeleteApiIntegrationCategoriesIdRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DeleteApiIntegrationCategoriesIdRequest' from JSON`,
  );
}

/** @internal */
export const DeleteApiIntegrationCategoriesIdResponseBody$inboundSchema:
  z.ZodType<
    DeleteApiIntegrationCategoriesIdResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    message: z.string().optional(),
  });

/** @internal */
export type DeleteApiIntegrationCategoriesIdResponseBody$Outbound = {
  message?: string | undefined;
};

/** @internal */
export const DeleteApiIntegrationCategoriesIdResponseBody$outboundSchema:
  z.ZodType<
    DeleteApiIntegrationCategoriesIdResponseBody$Outbound,
    z.ZodTypeDef,
    DeleteApiIntegrationCategoriesIdResponseBody
  > = z.object({
    message: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApiIntegrationCategoriesIdResponseBody$ {
  /** @deprecated use `DeleteApiIntegrationCategoriesIdResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    DeleteApiIntegrationCategoriesIdResponseBody$inboundSchema;
  /** @deprecated use `DeleteApiIntegrationCategoriesIdResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    DeleteApiIntegrationCategoriesIdResponseBody$outboundSchema;
  /** @deprecated use `DeleteApiIntegrationCategoriesIdResponseBody$Outbound` instead. */
  export type Outbound = DeleteApiIntegrationCategoriesIdResponseBody$Outbound;
}

export function deleteApiIntegrationCategoriesIdResponseBodyToJSON(
  deleteApiIntegrationCategoriesIdResponseBody:
    DeleteApiIntegrationCategoriesIdResponseBody,
): string {
  return JSON.stringify(
    DeleteApiIntegrationCategoriesIdResponseBody$outboundSchema.parse(
      deleteApiIntegrationCategoriesIdResponseBody,
    ),
  );
}

export function deleteApiIntegrationCategoriesIdResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  DeleteApiIntegrationCategoriesIdResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DeleteApiIntegrationCategoriesIdResponseBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DeleteApiIntegrationCategoriesIdResponseBody' from JSON`,
  );
}
