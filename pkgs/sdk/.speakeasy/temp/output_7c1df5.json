{
  "openapi": "3.0.0",
  "info": {
    "title": "Drivly AI API",
    "description": "API for the Drivly AI Primitives Platform",
    "contact": {
      "name": "Drivly",
      "url": "https://drivly.com"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://apis.do",
      "description": "Production API Server"
    }
  ],
  "paths": {
    "/api/functions": {
      "get": {
        "tags": [
          "Functions"
        ],
        "summary": "List all Functions",
        "description": "Returns a list of all Functions",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "links": {
                      "type": "object",
                      "properties": {
                        "home": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        }
                      }
                    },
                    "functions": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/functions/{id}": {
      "get": {
        "tags": [
          "Functions"
        ],
        "summary": "Get a specific Function",
        "description": "Returns a specific Function by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Function",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Function"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Functions"
        ],
        "summary": "Delete a Function",
        "description": "Deletes a specific Function by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Function",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/workflows": {
      "get": {
        "tags": [
          "Workflows"
        ],
        "summary": "List all Workflows",
        "description": "Returns a list of all Workflows",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "links": {
                      "type": "object",
                      "properties": {
                        "home": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        }
                      }
                    },
                    "workflows": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/workflows/{id}": {
      "get": {
        "tags": [
          "Workflows"
        ],
        "summary": "Get a specific Workflow",
        "description": "Returns a specific Workflow by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Workflow",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workflow"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Workflows"
        ],
        "summary": "Delete a Workflow",
        "description": "Deletes a specific Workflow by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Workflow",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/agents": {
      "get": {
        "tags": [
          "Agents"
        ],
        "summary": "List all Agents",
        "description": "Returns a list of all Agents",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "links": {
                      "type": "object",
                      "properties": {
                        "home": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        }
                      }
                    },
                    "agents": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/agents/{id}": {
      "get": {
        "tags": [
          "Agents"
        ],
        "summary": "Get a specific Agent",
        "description": "Returns a specific Agent by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Agent",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Agent"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Agents"
        ],
        "summary": "Delete a Agent",
        "description": "Deletes a specific Agent by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Agent",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/queues": {
      "get": {
        "tags": [
          "Queues"
        ],
        "summary": "List all Queues",
        "description": "Returns a list of all Queues",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "links": {
                      "type": "object",
                      "properties": {
                        "home": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        }
                      }
                    },
                    "queues": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/queues/{id}": {
      "get": {
        "tags": [
          "Queues"
        ],
        "summary": "Get a specific Queue",
        "description": "Returns a specific Queue by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Queue",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Queue"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Queues"
        ],
        "summary": "Delete a Queue",
        "description": "Deletes a specific Queue by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Queue",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/tasks": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "List all Tasks",
        "description": "Returns a list of all Tasks",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "links": {
                      "type": "object",
                      "properties": {
                        "home": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        }
                      }
                    },
                    "tasks": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/tasks/{id}": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Get a specific Task",
        "description": "Returns a specific Task by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Task",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Tasks"
        ],
        "summary": "Delete a Task",
        "description": "Deletes a specific Task by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Task",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/goals": {
      "get": {
        "tags": [
          "Goals"
        ],
        "summary": "List all Goals",
        "description": "Returns a list of all Goals",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "links": {
                      "type": "object",
                      "properties": {
                        "home": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        }
                      }
                    },
                    "goals": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/goals/{id}": {
      "get": {
        "tags": [
          "Goals"
        ],
        "summary": "Get a specific Goal",
        "description": "Returns a specific Goal by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Goal",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Goal"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Goals"
        ],
        "summary": "Delete a Goal",
        "description": "Deletes a specific Goal by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Goal",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/nouns": {
      "get": {
        "tags": [
          "Nouns"
        ],
        "summary": "List all Nouns",
        "description": "Returns a list of all Nouns",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "links": {
                      "type": "object",
                      "properties": {
                        "home": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        }
                      }
                    },
                    "nouns": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/nouns/{id}": {
      "get": {
        "tags": [
          "Nouns"
        ],
        "summary": "Get a specific Noun",
        "description": "Returns a specific Noun by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Noun",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Noun"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Nouns"
        ],
        "summary": "Delete a Noun",
        "description": "Deletes a specific Noun by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Noun",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/things": {
      "get": {
        "tags": [
          "Things"
        ],
        "summary": "List all Things",
        "description": "Returns a list of all Things",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "links": {
                      "type": "object",
                      "properties": {
                        "home": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        }
                      }
                    },
                    "things": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/things/{id}": {
      "get": {
        "tags": [
          "Things"
        ],
        "summary": "Get a specific Thing",
        "description": "Returns a specific Thing by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Thing",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Thing"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Things"
        ],
        "summary": "Delete a Thing",
        "description": "Deletes a specific Thing by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Thing",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/verbs": {
      "get": {
        "tags": [
          "Verbs"
        ],
        "summary": "List all Verbs",
        "description": "Returns a list of all Verbs",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "links": {
                      "type": "object",
                      "properties": {
                        "home": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        }
                      }
                    },
                    "verbs": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/verbs/{id}": {
      "get": {
        "tags": [
          "Verbs"
        ],
        "summary": "Get a specific Verb",
        "description": "Returns a specific Verb by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Verb",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Verb"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Verbs"
        ],
        "summary": "Delete a Verb",
        "description": "Deletes a specific Verb by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Verb",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/databases": {
      "get": {
        "tags": [
          "Databases"
        ],
        "summary": "List all Databases",
        "description": "Returns a list of all Databases",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "links": {
                      "type": "object",
                      "properties": {
                        "home": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        }
                      }
                    },
                    "databases": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/databases/{id}": {
      "get": {
        "tags": [
          "Databases"
        ],
        "summary": "Get a specific Database",
        "description": "Returns a specific Database by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Database",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Database"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Databases"
        ],
        "summary": "Delete a Database",
        "description": "Deletes a specific Database by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Database",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/resources": {
      "get": {
        "tags": [
          "Resources"
        ],
        "summary": "List all Resources",
        "description": "Returns a list of all Resources",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "links": {
                      "type": "object",
                      "properties": {
                        "home": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        }
                      }
                    },
                    "resources": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/resources/{id}": {
      "get": {
        "tags": [
          "Resources"
        ],
        "summary": "Get a specific Resource",
        "description": "Returns a specific Resource by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Resource",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Resource"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Resources"
        ],
        "summary": "Delete a Resource",
        "description": "Deletes a specific Resource by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Resource",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/actions": {
      "get": {
        "tags": [
          "Actions"
        ],
        "summary": "List all Actions",
        "description": "Returns a list of all Actions",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "links": {
                      "type": "object",
                      "properties": {
                        "home": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        }
                      }
                    },
                    "actions": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/actions/{id}": {
      "get": {
        "tags": [
          "Actions"
        ],
        "summary": "Get a specific Action",
        "description": "Returns a specific Action by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Action",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Action"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Actions"
        ],
        "summary": "Delete a Action",
        "description": "Deletes a specific Action by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Action",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/integrationCategories": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "List all Categories",
        "description": "Returns a list of all Categories",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "links": {
                      "type": "object",
                      "properties": {
                        "home": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        }
                      }
                    },
                    "integrationCategories": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/integrationCategories/{id}": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get a specific Category",
        "description": "Returns a specific Category by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Category",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Categories"
        ],
        "summary": "Delete a Category",
        "description": "Deletes a specific Category by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Category",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/integrations": {
      "get": {
        "tags": [
          "Integrations"
        ],
        "summary": "List all Integrations",
        "description": "Returns a list of all Integrations",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "links": {
                      "type": "object",
                      "properties": {
                        "home": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        }
                      }
                    },
                    "integrations": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/integrations/{id}": {
      "get": {
        "tags": [
          "Integrations"
        ],
        "summary": "Get a specific Integration",
        "description": "Returns a specific Integration by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Integration",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Integration"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Integrations"
        ],
        "summary": "Delete a Integration",
        "description": "Deletes a specific Integration by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Integration",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/connections": {
      "get": {
        "tags": [
          "Connections"
        ],
        "summary": "List all Connections",
        "description": "Returns a list of all Connections",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "links": {
                      "type": "object",
                      "properties": {
                        "home": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        }
                      }
                    },
                    "connections": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/connections/{id}": {
      "get": {
        "tags": [
          "Connections"
        ],
        "summary": "Get a specific Connection",
        "description": "Returns a specific Connection by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Connection",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connection"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Connections"
        ],
        "summary": "Delete a Connection",
        "description": "Deletes a specific Connection by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Connection",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/integrationTriggers": {
      "get": {
        "tags": [
          "Triggers"
        ],
        "summary": "List all Triggers",
        "description": "Returns a list of all Triggers",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "links": {
                      "type": "object",
                      "properties": {
                        "home": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        }
                      }
                    },
                    "integrationTriggers": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/integrationTriggers/{id}": {
      "get": {
        "tags": [
          "Triggers"
        ],
        "summary": "Get a specific Trigger",
        "description": "Returns a specific Trigger by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Trigger",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Trigger"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Triggers"
        ],
        "summary": "Delete a Trigger",
        "description": "Deletes a specific Trigger by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Trigger",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/integrationActions": {
      "get": {
        "tags": [
          "Actions"
        ],
        "summary": "List all Actions",
        "description": "Returns a list of all Actions",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "links": {
                      "type": "object",
                      "properties": {
                        "home": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        }
                      }
                    },
                    "integrationActions": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/integrationActions/{id}": {
      "get": {
        "tags": [
          "Actions"
        ],
        "summary": "Get a specific Action",
        "description": "Returns a specific Action by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Action",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Action"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Actions"
        ],
        "summary": "Delete a Action",
        "description": "Deletes a specific Action by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Action",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/triggers": {
      "get": {
        "tags": [
          "Triggers"
        ],
        "summary": "List all Triggers",
        "description": "Returns a list of all Triggers",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "links": {
                      "type": "object",
                      "properties": {
                        "home": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        }
                      }
                    },
                    "triggers": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/triggers/{id}": {
      "get": {
        "tags": [
          "Triggers"
        ],
        "summary": "Get a specific Trigger",
        "description": "Returns a specific Trigger by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Trigger",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Trigger"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Triggers"
        ],
        "summary": "Delete a Trigger",
        "description": "Deletes a specific Trigger by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Trigger",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/searches": {
      "get": {
        "tags": [
          "Searches"
        ],
        "summary": "List all Searches",
        "description": "Returns a list of all Searches",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "links": {
                      "type": "object",
                      "properties": {
                        "home": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        }
                      }
                    },
                    "searches": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/searches/{id}": {
      "get": {
        "tags": [
          "Searches"
        ],
        "summary": "Get a specific Search",
        "description": "Returns a specific Search by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Search",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Search"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Searches"
        ],
        "summary": "Delete a Search",
        "description": "Deletes a specific Search by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Search",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/experiments": {
      "get": {
        "tags": [
          "Experiments"
        ],
        "summary": "List all Experiments",
        "description": "Returns a list of all Experiments",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "links": {
                      "type": "object",
                      "properties": {
                        "home": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        }
                      }
                    },
                    "experiments": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/experiments/{id}": {
      "get": {
        "tags": [
          "Experiments"
        ],
        "summary": "Get a specific Experiment",
        "description": "Returns a specific Experiment by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Experiment",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Experiment"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Experiments"
        ],
        "summary": "Delete a Experiment",
        "description": "Deletes a specific Experiment by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Experiment",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/experiment-metrics": {
      "get": {
        "tags": [
          "Experiment Metrics"
        ],
        "summary": "List all Experiment Metrics",
        "description": "Returns a list of all Experiment Metrics",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "links": {
                      "type": "object",
                      "properties": {
                        "home": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        }
                      }
                    },
                    "experiment-metrics": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/experiment-metrics/{id}": {
      "get": {
        "tags": [
          "Experiment Metrics"
        ],
        "summary": "Get a specific Experiment Metric",
        "description": "Returns a specific Experiment Metric by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Experiment Metric",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Experiment Metric"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Experiment Metrics"
        ],
        "summary": "Delete a Experiment Metric",
        "description": "Deletes a specific Experiment Metric by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Experiment Metric",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/models": {
      "get": {
        "tags": [
          "Models"
        ],
        "summary": "List all Models",
        "description": "Returns a list of all Models",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "links": {
                      "type": "object",
                      "properties": {
                        "home": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        }
                      }
                    },
                    "models": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/models/{id}": {
      "get": {
        "tags": [
          "Models"
        ],
        "summary": "Get a specific Model",
        "description": "Returns a specific Model by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Model",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Model"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Models"
        ],
        "summary": "Delete a Model",
        "description": "Deletes a specific Model by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Model",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/providers": {
      "get": {
        "tags": [
          "Providers"
        ],
        "summary": "List all Providers",
        "description": "Returns a list of all Providers",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "links": {
                      "type": "object",
                      "properties": {
                        "home": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        }
                      }
                    },
                    "providers": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/providers/{id}": {
      "get": {
        "tags": [
          "Providers"
        ],
        "summary": "Get a specific Provider",
        "description": "Returns a specific Provider by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Provider",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Provider"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Providers"
        ],
        "summary": "Delete a Provider",
        "description": "Deletes a specific Provider by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Provider",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/labs": {
      "get": {
        "tags": [
          "Labs"
        ],
        "summary": "List all Labs",
        "description": "Returns a list of all Labs",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "links": {
                      "type": "object",
                      "properties": {
                        "home": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        }
                      }
                    },
                    "labs": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/labs/{id}": {
      "get": {
        "tags": [
          "Labs"
        ],
        "summary": "Get a specific Lab",
        "description": "Returns a specific Lab by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Lab",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lab"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Labs"
        ],
        "summary": "Delete a Lab",
        "description": "Deletes a specific Lab by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Lab",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/prompts": {
      "get": {
        "tags": [
          "Prompts"
        ],
        "summary": "List all Prompts",
        "description": "Returns a list of all Prompts",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "links": {
                      "type": "object",
                      "properties": {
                        "home": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        }
                      }
                    },
                    "prompts": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/prompts/{id}": {
      "get": {
        "tags": [
          "Prompts"
        ],
        "summary": "Get a specific Prompt",
        "description": "Returns a specific Prompt by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Prompt",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Prompt"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Prompts"
        ],
        "summary": "Delete a Prompt",
        "description": "Deletes a specific Prompt by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Prompt",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/settings": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "List all Settings",
        "description": "Returns a list of all Settings",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "links": {
                      "type": "object",
                      "properties": {
                        "home": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        }
                      }
                    },
                    "settings": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/settings/{id}": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Get a specific Setting",
        "description": "Returns a specific Setting by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Setting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Setting"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Settings"
        ],
        "summary": "Delete a Setting",
        "description": "Deletes a specific Setting by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Setting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/types": {
      "get": {
        "tags": [
          "Types"
        ],
        "summary": "List all Types",
        "description": "Returns a list of all Types",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "links": {
                      "type": "object",
                      "properties": {
                        "home": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        }
                      }
                    },
                    "types": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/types/{id}": {
      "get": {
        "tags": [
          "Types"
        ],
        "summary": "Get a specific Type",
        "description": "Returns a specific Type by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Type",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Type"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Types"
        ],
        "summary": "Delete a Type",
        "description": "Deletes a specific Type by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Type",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/modules": {
      "get": {
        "tags": [
          "Modules"
        ],
        "summary": "List all Modules",
        "description": "Returns a list of all Modules",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "links": {
                      "type": "object",
                      "properties": {
                        "home": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        }
                      }
                    },
                    "modules": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/modules/{id}": {
      "get": {
        "tags": [
          "Modules"
        ],
        "summary": "Get a specific Module",
        "description": "Returns a specific Module by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Module",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Module"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Modules"
        ],
        "summary": "Delete a Module",
        "description": "Deletes a specific Module by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Module",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/packages": {
      "get": {
        "tags": [
          "Packages"
        ],
        "summary": "List all Packages",
        "description": "Returns a list of all Packages",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "links": {
                      "type": "object",
                      "properties": {
                        "home": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        }
                      }
                    },
                    "packages": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/packages/{id}": {
      "get": {
        "tags": [
          "Packages"
        ],
        "summary": "Get a specific Package",
        "description": "Returns a specific Package by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Package",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Package"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Packages"
        ],
        "summary": "Delete a Package",
        "description": "Deletes a specific Package by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Package",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/deployments": {
      "get": {
        "tags": [
          "Deployments"
        ],
        "summary": "List all Deployments",
        "description": "Returns a list of all Deployments",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "links": {
                      "type": "object",
                      "properties": {
                        "home": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        }
                      }
                    },
                    "deployments": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/deployments/{id}": {
      "get": {
        "tags": [
          "Deployments"
        ],
        "summary": "Get a specific Deployment",
        "description": "Returns a specific Deployment by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Deployment",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Deployment"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Deployments"
        ],
        "summary": "Delete a Deployment",
        "description": "Deletes a specific Deployment by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Deployment",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/benchmarks": {
      "get": {
        "tags": [
          "Benchmarks"
        ],
        "summary": "List all Benchmarks",
        "description": "Returns a list of all Benchmarks",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "links": {
                      "type": "object",
                      "properties": {
                        "home": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        }
                      }
                    },
                    "benchmarks": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/benchmarks/{id}": {
      "get": {
        "tags": [
          "Benchmarks"
        ],
        "summary": "Get a specific Benchmark",
        "description": "Returns a specific Benchmark by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Benchmark",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Benchmark"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Benchmarks"
        ],
        "summary": "Delete a Benchmark",
        "description": "Deletes a specific Benchmark by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Benchmark",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/evals": {
      "get": {
        "tags": [
          "Evals"
        ],
        "summary": "List all Evals",
        "description": "Returns a list of all Evals",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "links": {
                      "type": "object",
                      "properties": {
                        "home": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        }
                      }
                    },
                    "evals": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/evals/{id}": {
      "get": {
        "tags": [
          "Evals"
        ],
        "summary": "Get a specific Eval",
        "description": "Returns a specific Eval by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Eval",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Eval"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Evals"
        ],
        "summary": "Delete a Eval",
        "description": "Deletes a specific Eval by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Eval",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/evalRuns": {
      "get": {
        "tags": [
          "Eval Runs"
        ],
        "summary": "List all Eval Runs",
        "description": "Returns a list of all Eval Runs",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "links": {
                      "type": "object",
                      "properties": {
                        "home": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        }
                      }
                    },
                    "evalRuns": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/evalRuns/{id}": {
      "get": {
        "tags": [
          "Eval Runs"
        ],
        "summary": "Get a specific Eval Run",
        "description": "Returns a specific Eval Run by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Eval Run",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Eval Run"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Eval Runs"
        ],
        "summary": "Delete a Eval Run",
        "description": "Deletes a specific Eval Run by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Eval Run",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/evalResults": {
      "get": {
        "tags": [
          "Eval Results"
        ],
        "summary": "List all Eval Results",
        "description": "Returns a list of all Eval Results",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "links": {
                      "type": "object",
                      "properties": {
                        "home": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        }
                      }
                    },
                    "evalResults": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/evalResults/{id}": {
      "get": {
        "tags": [
          "Eval Results"
        ],
        "summary": "Get a specific Eval Result",
        "description": "Returns a specific Eval Result by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Eval Result",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Eval Result"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Eval Results"
        ],
        "summary": "Delete a Eval Result",
        "description": "Deletes a specific Eval Result by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Eval Result",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/datasets": {
      "get": {
        "tags": [
          "Datasets"
        ],
        "summary": "List all Datasets",
        "description": "Returns a list of all Datasets",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "links": {
                      "type": "object",
                      "properties": {
                        "home": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        }
                      }
                    },
                    "datasets": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/datasets/{id}": {
      "get": {
        "tags": [
          "Datasets"
        ],
        "summary": "Get a specific Dataset",
        "description": "Returns a specific Dataset by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Dataset",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dataset"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Datasets"
        ],
        "summary": "Delete a Dataset",
        "description": "Deletes a specific Dataset by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Dataset",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/events": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "List all Events",
        "description": "Returns a list of all Events",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "links": {
                      "type": "object",
                      "properties": {
                        "home": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        }
                      }
                    },
                    "events": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/events/{id}": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get a specific Event",
        "description": "Returns a specific Event by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Event",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Events"
        ],
        "summary": "Delete a Event",
        "description": "Deletes a specific Event by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Event",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/errors": {
      "get": {
        "tags": [
          "Errors"
        ],
        "summary": "List all Errors",
        "description": "Returns a list of all Errors",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "links": {
                      "type": "object",
                      "properties": {
                        "home": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        }
                      }
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/errors/{id}": {
      "get": {
        "tags": [
          "Errors"
        ],
        "summary": "Get a specific Error",
        "description": "Returns a specific Error by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Error",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Errors"
        ],
        "summary": "Delete a Error",
        "description": "Deletes a specific Error by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Error",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/generations": {
      "get": {
        "tags": [
          "Generations"
        ],
        "summary": "List all Generations",
        "description": "Returns a list of all Generations",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "links": {
                      "type": "object",
                      "properties": {
                        "home": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        }
                      }
                    },
                    "generations": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/generations/{id}": {
      "get": {
        "tags": [
          "Generations"
        ],
        "summary": "Get a specific Generation",
        "description": "Returns a specific Generation by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Generation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Generation"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Generations"
        ],
        "summary": "Delete a Generation",
        "description": "Deletes a specific Generation by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Generation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/generation-batches": {
      "get": {
        "tags": [
          "Generation Batches"
        ],
        "summary": "List all Generation Batches",
        "description": "Returns a list of all Generation Batches",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "links": {
                      "type": "object",
                      "properties": {
                        "home": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        }
                      }
                    },
                    "generation-batches": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/generation-batches/{id}": {
      "get": {
        "tags": [
          "Generation Batches"
        ],
        "summary": "Get a specific Generation Batch",
        "description": "Returns a specific Generation Batch by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Generation Batch",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Generation Batch"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Generation Batches"
        ],
        "summary": "Delete a Generation Batch",
        "description": "Deletes a specific Generation Batch by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Generation Batch",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/traces": {
      "get": {
        "tags": [
          "Traces"
        ],
        "summary": "List all Traces",
        "description": "Returns a list of all Traces",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "links": {
                      "type": "object",
                      "properties": {
                        "home": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        }
                      }
                    },
                    "traces": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/traces/{id}": {
      "get": {
        "tags": [
          "Traces"
        ],
        "summary": "Get a specific Trace",
        "description": "Returns a specific Trace by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Trace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Trace"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Traces"
        ],
        "summary": "Delete a Trace",
        "description": "Deletes a specific Trace by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Trace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/kpis": {
      "get": {
        "tags": [
          "KPIs"
        ],
        "summary": "List all KPIs",
        "description": "Returns a list of all KPIs",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "links": {
                      "type": "object",
                      "properties": {
                        "home": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        }
                      }
                    },
                    "kpis": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/kpis/{id}": {
      "get": {
        "tags": [
          "KPIs"
        ],
        "summary": "Get a specific KPI",
        "description": "Returns a specific KPI by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the KPI",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KPI"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": [
          "KPIs"
        ],
        "summary": "Delete a KPI",
        "description": "Deletes a specific KPI by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the KPI",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/projects": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "List all Projects",
        "description": "Returns a list of all Projects",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "links": {
                      "type": "object",
                      "properties": {
                        "home": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        }
                      }
                    },
                    "projects": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/projects/{id}": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get a specific Project",
        "description": "Returns a specific Project by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Project",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Projects"
        ],
        "summary": "Delete a Project",
        "description": "Deletes a specific Project by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Project",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/domains": {
      "get": {
        "tags": [
          "Domains"
        ],
        "summary": "List all Domains",
        "description": "Returns a list of all Domains",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "links": {
                      "type": "object",
                      "properties": {
                        "home": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        }
                      }
                    },
                    "domains": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/domains/{id}": {
      "get": {
        "tags": [
          "Domains"
        ],
        "summary": "Get a specific Domain",
        "description": "Returns a specific Domain by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Domain",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Domains"
        ],
        "summary": "Delete a Domain",
        "description": "Deletes a specific Domain by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Domain",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "List all Users",
        "description": "Returns a list of all Users",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "links": {
                      "type": "object",
                      "properties": {
                        "home": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        }
                      }
                    },
                    "users": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get a specific User",
        "description": "Returns a specific User by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the User",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete a User",
        "description": "Deletes a specific User by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the User",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/roles": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "List all Roles",
        "description": "Returns a list of all Roles",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "links": {
                      "type": "object",
                      "properties": {
                        "home": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        }
                      }
                    },
                    "roles": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/roles/{id}": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Get a specific Role",
        "description": "Returns a specific Role by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Role",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Roles"
        ],
        "summary": "Delete a Role",
        "description": "Deletes a specific Role by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Role",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/tags": {
      "get": {
        "tags": [
          "Tags"
        ],
        "summary": "List all Tags",
        "description": "Returns a list of all Tags",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "links": {
                      "type": "object",
                      "properties": {
                        "home": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        }
                      }
                    },
                    "tags": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/tags/{id}": {
      "get": {
        "tags": [
          "Tags"
        ],
        "summary": "Get a specific Tag",
        "description": "Returns a specific Tag by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Tag",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Tags"
        ],
        "summary": "Delete a Tag",
        "description": "Deletes a specific Tag by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Tag",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/webhooks": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "List all Webhooks",
        "description": "Returns a list of all Webhooks",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "links": {
                      "type": "object",
                      "properties": {
                        "home": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        }
                      }
                    },
                    "webhooks": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/webhooks/{id}": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Get a specific Webhook",
        "description": "Returns a specific Webhook by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Webhook",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Delete a Webhook",
        "description": "Deletes a specific Webhook by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Webhook",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/apikeys": {
      "get": {
        "tags": [
          "API Keys"
        ],
        "summary": "List all API Keys",
        "description": "Returns a list of all API Keys",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "links": {
                      "type": "object",
                      "properties": {
                        "home": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        }
                      }
                    },
                    "apikeys": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/apikeys/{id}": {
      "get": {
        "tags": [
          "API Keys"
        ],
        "summary": "Get a specific API Key",
        "description": "Returns a specific API Key by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the API Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API Key"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": [
          "API Keys"
        ],
        "summary": "Delete a API Key",
        "description": "Deletes a specific API Key by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the API Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/oauth-clients": {
      "get": {
        "tags": [
          "Oauth Clients"
        ],
        "summary": "List all Oauth Clients",
        "description": "Returns a list of all Oauth Clients",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "links": {
                      "type": "object",
                      "properties": {
                        "home": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        }
                      }
                    },
                    "oauth-clients": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/oauth-clients/{id}": {
      "get": {
        "tags": [
          "Oauth Clients"
        ],
        "summary": "Get a specific Oauth Client",
        "description": "Returns a specific Oauth Client by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Oauth Client",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Oauth Client"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Oauth Clients"
        ],
        "summary": "Delete a Oauth Client",
        "description": "Deletes a specific Oauth Client by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Oauth Client",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/oauth-codes": {
      "get": {
        "tags": [
          "Oauth Codes"
        ],
        "summary": "List all Oauth Codes",
        "description": "Returns a list of all Oauth Codes",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "links": {
                      "type": "object",
                      "properties": {
                        "home": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        }
                      }
                    },
                    "oauth-codes": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/oauth-codes/{id}": {
      "get": {
        "tags": [
          "Oauth Codes"
        ],
        "summary": "Get a specific Oauth Code",
        "description": "Returns a specific Oauth Code by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Oauth Code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Oauth Code"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Oauth Codes"
        ],
        "summary": "Delete a Oauth Code",
        "description": "Deletes a specific Oauth Code by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Oauth Code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/oauth-tokens": {
      "get": {
        "tags": [
          "Oauth Tokens"
        ],
        "summary": "List all Oauth Tokens",
        "description": "Returns a list of all Oauth Tokens",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "links": {
                      "type": "object",
                      "properties": {
                        "home": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        },
                        "prev": {
                          "type": "string"
                        }
                      }
                    },
                    "oauth-tokens": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "href": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/oauth-tokens/{id}": {
      "get": {
        "tags": [
          "Oauth Tokens"
        ],
        "summary": "Get a specific Oauth Token",
        "description": "Returns a specific Oauth Token by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Oauth Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Oauth Token"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Oauth Tokens"
        ],
        "summary": "Delete a Oauth Token",
        "description": "Deletes a specific Oauth Token by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Oauth Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Function": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "tenant": {
            "type": "string",
            "description": "ID of related projects document"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "Generation",
              "Code",
              "Human",
              "Agent"
            ]
          },
          "public": {
            "type": "boolean"
          },
          "clonedFrom": {
            "type": "string",
            "description": "ID of related functions document"
          },
          "pricing": {
            "type": "object"
          },
          "format": {
            "type": "string",
            "enum": [
              "Object",
              "ObjectArray",
              "Text",
              "TextArray",
              "Markdown",
              "Code"
            ]
          },
          "schemaYaml": {
            "type": "string"
          },
          "shape": {
            "type": "object"
          },
          "code": {
            "type": "string"
          },
          "prompt": {
            "type": "string",
            "description": "ID of related prompts document"
          },
          "role": {
            "type": "string"
          },
          "user": {
            "type": "string",
            "description": "ID of related users document"
          },
          "agent": {
            "type": "string",
            "description": "ID of related agents document"
          },
          "examples": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "ID of related resources document"
            }
          }
        }
      },
      "Workflow": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "tenant": {
            "type": "string",
            "description": "ID of related projects document"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "functions": {
            "type": "string",
            "description": "ID of related functions document"
          },
          "module": {
            "type": "string",
            "description": "ID of related modules document"
          },
          "package": {
            "type": "string",
            "description": "ID of related packages document"
          },
          "deployment": {
            "type": "string",
            "description": "ID of related deployments document"
          },
          "public": {
            "type": "boolean"
          },
          "clonedFrom": {
            "type": "string",
            "description": "ID of related workflows document"
          },
          "pricing": {
            "type": "object"
          }
        }
      },
      "Agent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "tenant": {
            "type": "string",
            "description": "ID of related projects document"
          },
          "name": {
            "type": "string"
          },
          "public": {
            "type": "boolean"
          },
          "clonedFrom": {
            "type": "string",
            "description": "ID of related agents document"
          },
          "pricing": {
            "type": "object"
          }
        }
      },
      "Queue": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "tenant": {
            "type": "string",
            "description": "ID of related projects document"
          },
          "name": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "description": "ID of related roles document"
          },
          "tasks": {
            "type": "object"
          }
        }
      },
      "Task": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "tenant": {
            "type": "string",
            "description": "ID of related projects document"
          },
          "status": {
            "type": "string",
            "enum": [
              "backlog",
              "todo",
              "in-progress",
              "review",
              "done"
            ]
          },
          "queue": {
            "type": "string",
            "description": "ID of related queues document"
          },
          "assigned": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "ID of related users,roles,agents document"
            }
          },
          "parent": {
            "type": "string",
            "description": "ID of related tasks document"
          },
          "description": {
            "type": "string"
          },
          "subtasks": {
            "type": "object"
          },
          "dependentOn": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "ID of related tasks document"
            }
          },
          "dependents": {
            "type": "object"
          }
        }
      },
      "Goal": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "tenant": {
            "type": "string",
            "description": "ID of related projects document"
          },
          "title": {
            "type": "string"
          },
          "object": {
            "type": "string"
          },
          "keyResults": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "Noun": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "tenant": {
            "type": "string",
            "description": "ID of related projects document"
          },
          "name": {
            "type": "string"
          },
          "singular": {
            "type": "string"
          },
          "plural": {
            "type": "string"
          },
          "possessive": {
            "type": "string"
          },
          "pluralPossessive": {
            "type": "string"
          },
          "verb": {
            "type": "string"
          },
          "act": {
            "type": "string"
          },
          "activity": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "type": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "ID of related things document"
            }
          },
          "resources": {
            "type": "object"
          }
        }
      },
      "Thing": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "singular": {
            "type": "string"
          },
          "plural": {
            "type": "string"
          },
          "possessive": {
            "type": "string"
          },
          "pluralPossessive": {
            "type": "string"
          },
          "verb": {
            "type": "string"
          },
          "act": {
            "type": "string"
          },
          "activity": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "resources": {
            "type": "object"
          }
        }
      },
      "Verb": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "tenant": {
            "type": "string",
            "description": "ID of related projects document"
          },
          "action": {
            "type": "string"
          },
          "act": {
            "type": "string"
          },
          "activity": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "subject": {
            "type": "string"
          },
          "object": {
            "type": "string"
          },
          "inverse": {
            "type": "string"
          },
          "inverseAct": {
            "type": "string"
          },
          "inverseActivity": {
            "type": "string"
          },
          "inverseEvent": {
            "type": "string"
          },
          "inverseSubject": {
            "type": "string"
          },
          "inverseObject": {
            "type": "string"
          }
        }
      },
      "Database": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "tenant": {
            "type": "string",
            "description": "ID of related projects document"
          },
          "name": {
            "type": "string"
          },
          "domain": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "Integrated",
              "Dedicated",
              "Self-Hosted"
            ]
          },
          "schemaEnforcement": {
            "type": "string",
            "enum": [
              "flexible",
              "enforced"
            ]
          },
          "databaseType": {
            "type": "string",
            "enum": [
              "Mongo",
              "Postgres",
              "Sqlite"
            ]
          },
          "regions": {
            "type": "string",
            "enum": [
              "us-east-1",
              "us-east-2",
              "us-west-1",
              "us-west-2",
              "eu-west-1",
              "ap-northeast-1",
              "ap-southeast-1",
              "eu-central-1",
              "ap-south-1"
            ]
          },
          "nouns": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "ID of related nouns document"
            }
          }
        }
      },
      "Resource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "tenant": {
            "type": "string",
            "description": "ID of related projects document"
          },
          "yaml": {
            "type": "string"
          },
          "data": {
            "type": "object"
          },
          "embedding": {
            "type": "object"
          },
          "subjectOf": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "ID of related actions document"
            }
          },
          "objectOf": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "ID of related actions document"
            }
          }
        }
      },
      "Action": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "tenant": {
            "type": "string",
            "description": "ID of related projects document"
          },
          "displayName": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "appKey": {
            "type": "string"
          },
          "appName": {
            "type": "string"
          },
          "appId": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "parameters": {
            "type": "object"
          },
          "response": {
            "type": "object"
          }
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "tenant": {
            "type": "string",
            "description": "ID of related projects document"
          },
          "category": {
            "type": "string"
          }
        }
      },
      "Integration": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "tenant": {
            "type": "string",
            "description": "ID of related projects document"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Connection": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "tenant": {
            "type": "string",
            "description": "ID of related projects document"
          },
          "name": {
            "type": "string"
          },
          "user": {
            "type": "string",
            "description": "ID of related users document"
          },
          "integration": {
            "type": "string",
            "description": "ID of related integrations document"
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "inactive",
              "pending"
            ]
          },
          "metadata": {
            "type": "object"
          }
        }
      },
      "Trigger": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "tenant": {
            "type": "string",
            "description": "ID of related projects document"
          },
          "name": {
            "type": "string"
          },
          "payload": {
            "type": "object"
          },
          "config": {
            "type": "object"
          }
        }
      },
      "Search": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "tenant": {
            "type": "string",
            "description": "ID of related projects document"
          },
          "name": {
            "type": "string"
          },
          "query": {
            "type": "string"
          },
          "searchType": {
            "type": "string",
            "enum": [
              "text",
              "vector",
              "hybrid"
            ]
          },
          "results": {
            "type": "object"
          },
          "embedding": {
            "type": "object"
          }
        }
      },
      "Experiment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "tenant": {
            "type": "string",
            "description": "ID of related projects document"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "draft",
              "active",
              "paused",
              "completed"
            ]
          },
          "provider": {
            "type": "string",
            "enum": [
              "vercel",
              "internal"
            ]
          },
          "variants": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "metrics": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "trafficAllocation": {
            "type": "object"
          },
          "targeting": {
            "type": "object"
          },
          "duration": {
            "type": "object"
          },
          "results": {
            "type": "object"
          }
        }
      },
      "Experiment Metric": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "experimentId": {
            "type": "string",
            "description": "ID of related experiments document"
          },
          "variantId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "sessionId": {
            "type": "string"
          },
          "metricName": {
            "type": "string"
          },
          "value": {
            "type": "number"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object"
          }
        }
      },
      "Model": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "tenant": {
            "type": "string",
            "description": "ID of related projects document"
          },
          "name": {
            "type": "string"
          },
          "provider": {
            "type": "string",
            "description": "ID of related providers document"
          },
          "lab": {
            "type": "string",
            "description": "ID of related labs document"
          },
          "description": {
            "type": "string"
          },
          "context_length": {
            "type": "number"
          },
          "pricing": {
            "type": "object"
          },
          "capabilities": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "modelUrl": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          }
        }
      },
      "Provider": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "logoUrl": {
            "type": "string"
          }
        }
      },
      "Lab": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "logoUrl": {
            "type": "string"
          }
        }
      },
      "Prompt": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "tenant": {
            "type": "string",
            "description": "ID of related projects document"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Setting": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "tenant": {
            "type": "string",
            "description": "ID of related projects document"
          },
          "name": {
            "type": "string"
          },
          "settings": {
            "type": "object"
          }
        }
      },
      "Type": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "tenant": {
            "type": "string",
            "description": "ID of related projects document"
          },
          "name": {
            "type": "string"
          },
          "hash": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "json": {
            "type": "object"
          },
          "schema": {
            "type": "object"
          }
        }
      },
      "Module": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "tenant": {
            "type": "string",
            "description": "ID of related projects document"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Package": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "tenant": {
            "type": "string",
            "description": "ID of related projects document"
          },
          "name": {
            "type": "string"
          },
          "package": {
            "type": "object"
          },
          "collections": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "Deployment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "tenant": {
            "type": "string",
            "description": "ID of related projects document"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Benchmark": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "tenant": {
            "type": "string",
            "description": "ID of related projects document"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Eval": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "tenant": {
            "type": "string",
            "description": "ID of related projects document"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "input": {
            "type": "object"
          },
          "expected": {
            "type": "object"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "Eval Run": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "tenant": {
            "type": "string",
            "description": "ID of related projects document"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "testIds": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "results": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "startedAt": {
            "type": "string",
            "format": "date-time"
          },
          "completedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Eval Result": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "tenant": {
            "type": "string",
            "description": "ID of related projects document"
          },
          "name": {
            "type": "string"
          },
          "testId": {
            "type": "string",
            "description": "ID of related evals document"
          },
          "output": {
            "type": "object"
          },
          "score": {
            "type": "number"
          },
          "metrics": {
            "type": "object"
          },
          "duration": {
            "type": "number"
          },
          "error": {
            "type": "string"
          }
        }
      },
      "Dataset": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "tenant": {
            "type": "string",
            "description": "ID of related projects document"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Event": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "tenant": {
            "type": "string",
            "description": "ID of related projects document"
          },
          "type": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "subject": {
            "type": "string",
            "description": "ID of related resources document"
          },
          "data": {
            "type": "object"
          },
          "metadata": {
            "type": "object"
          },
          "action": {
            "type": "string",
            "description": "ID of related actions document"
          },
          "trigger": {
            "type": "string",
            "description": "ID of related triggers document"
          },
          "search": {
            "type": "string",
            "description": "ID of related searches document"
          },
          "function": {
            "type": "string",
            "description": "ID of related functions document"
          },
          "workflow": {
            "type": "string",
            "description": "ID of related workflows document"
          },
          "agent": {
            "type": "string",
            "description": "ID of related agents document"
          },
          "generations": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "ID of related generations document"
            }
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "tenant": {
            "type": "string",
            "description": "ID of related projects document"
          },
          "message": {
            "type": "string"
          },
          "stack": {
            "type": "string"
          },
          "digest": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "source": {
            "type": "string"
          }
        }
      },
      "Generation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "tenant": {
            "type": "string",
            "description": "ID of related projects document"
          },
          "action": {
            "type": "string",
            "description": "ID of related actions document"
          },
          "settings": {
            "type": "string",
            "description": "ID of related resources document"
          },
          "request": {
            "type": "object"
          },
          "response": {
            "type": "object"
          },
          "error": {
            "type": "object"
          },
          "status": {
            "type": "string",
            "enum": [
              "success",
              "error"
            ]
          },
          "duration": {
            "type": "number"
          },
          "processingMode": {
            "type": "string",
            "enum": [
              "realtime",
              "batch"
            ]
          },
          "batch": {
            "type": "string",
            "description": "ID of related generation-batches document"
          }
        }
      },
      "Generation Batch": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "tenant": {
            "type": "string",
            "description": "ID of related projects document"
          },
          "name": {
            "type": "string"
          },
          "provider": {
            "type": "string",
            "enum": [
              "openai",
              "anthropic",
              "google",
              "parasail"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "queued",
              "processing",
              "completed",
              "failed"
            ]
          },
          "batchConfig": {
            "type": "object"
          },
          "providerBatchId": {
            "type": "string"
          },
          "generations": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "ID of related generations document"
            }
          },
          "startedAt": {
            "type": "string",
            "format": "date-time"
          },
          "completedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Trace": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "tenant": {
            "type": "string",
            "description": "ID of related projects document"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "KPI": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "tenant": {
            "type": "string",
            "description": "ID of related projects document"
          },
          "name": {
            "type": "string"
          },
          "goals": {
            "type": "object"
          }
        }
      },
      "Project": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "domain": {
            "type": "string"
          },
          "domains": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "ID of related domains document"
            }
          }
        }
      },
      "Domain": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "domain": {
            "type": "string"
          },
          "project": {
            "type": "string",
            "description": "ID of related projects document"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "active",
              "error"
            ]
          },
          "hostnames": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "vercelId": {
            "type": "string"
          },
          "cloudflareId": {
            "type": "string"
          },
          "errorMessage": {
            "type": "string"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "ID of related roles document"
            }
          },
          "betterAuthAdminButtons": {
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "boolean"
          },
          "image": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "admin",
              "user"
            ]
          },
          "banned": {
            "type": "boolean"
          },
          "banReason": {
            "type": "string"
          },
          "banExpires": {
            "type": "string",
            "format": "date-time"
          },
          "tenants": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "enableAPIKey": {
            "type": "boolean"
          },
          "apiKey": {
            "type": "string"
          },
          "apiKeyIndex": {
            "type": "string"
          }
        }
      },
      "Role": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "superAdmin": {
            "type": "boolean"
          }
        }
      },
      "Tag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Webhook": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "filters": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "enabled": {
            "type": "boolean"
          },
          "secret": {
            "type": "string"
          }
        }
      },
      "API Key": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "enableAPIKey": {
            "type": "boolean"
          },
          "apiKey": {
            "type": "string"
          },
          "apiKeyIndex": {
            "type": "string"
          }
        }
      },
      "Oauth Client": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "clientId": {
            "type": "string"
          },
          "clientSecret": {
            "type": "string"
          },
          "redirectURLs": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "disabled": {
            "type": "boolean"
          },
          "createdBy": {
            "type": "string",
            "description": "ID of related users document"
          }
        }
      },
      "Oauth Code": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "code": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "redirectUri": {
            "type": "string"
          },
          "userId": {
            "type": "string",
            "description": "ID of related users document"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time"
          },
          "used": {
            "type": "boolean"
          }
        }
      },
      "Oauth Token": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "token": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "userId": {
            "type": "string",
            "description": "ID of related users document"
          },
          "clientId": {
            "type": "string"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time"
          },
          "scope": {
            "type": "string"
          }
        }
      }
    }
  }
}