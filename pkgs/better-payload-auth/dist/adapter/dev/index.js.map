{"version":3,"sources":["../../../src/adapter/dev/index.ts"],"sourcesContent":["import { getPayload as getPayloadBase } from 'payload'\n\nimport { buildConfig } from 'payload'\nimport { mongooseAdapter } from '@payloadcms/db-mongodb'\nimport dotenv from 'dotenv'\n\ndotenv.config()\n\nexport const payloadConfig = buildConfig({\n  admin: {\n    user: 'user',\n  },\n  secret: process.env.PAYLOAD_SECRET || 'super-secret-payload-key',\n  db: mongooseAdapter({\n    url: process.env.DATABASE_URI || '',\n  }),\n  collections: [\n    {\n      slug: 'user',\n      admin: {\n        useAsTitle: 'name',\n      },\n      auth: {\n        disableLocalStrategy: true,\n      },\n      fields: [\n        {\n          name: 'name',\n          type: 'text',\n          required: true,\n        },\n        {\n          name: 'email',\n          type: 'email',\n          required: true,\n          unique: true,\n        },\n        {\n          name: 'emailVerified',\n          type: 'checkbox',\n          required: true,\n        },\n        {\n          name: 'image',\n          type: 'text',\n        },\n      ],\n      timestamps: true,\n    },\n    {\n      slug: 'account',\n      admin: {\n        useAsTitle: 'accountId',\n      },\n      fields: [\n        {\n          name: 'accountId',\n          type: 'number',\n          required: true,\n        },\n        {\n          name: 'providerId',\n          type: 'text',\n        },\n        {\n          name: 'user',\n          type: 'relationship',\n          required: true,\n          // @ts-ignore\n          relationTo: 'user',\n        },\n        {\n          name: 'accessToken',\n          type: 'text',\n        },\n        {\n          name: 'refreshToken',\n          type: 'text',\n        },\n        {\n          name: 'idToken',\n          type: 'text',\n        },\n        {\n          name: 'accessTokenExpiresAt',\n          type: 'date',\n        },\n        {\n          name: 'refreshTokenExpiresAt',\n          type: 'date',\n        },\n        {\n          name: 'scope',\n          type: 'text',\n        },\n        {\n          name: 'password',\n          type: 'text',\n        },\n      ],\n      timestamps: true,\n    },\n    {\n      slug: 'verification',\n      admin: {\n        useAsTitle: 'identifier',\n      },\n      fields: [\n        {\n          name: 'identifier',\n          type: 'text',\n          required: true,\n        },\n        {\n          name: 'value',\n          type: 'text',\n          required: true,\n        },\n        {\n          name: 'expiresAt',\n          type: 'date',\n          required: true,\n        },\n      ],\n      timestamps: true,\n    },\n    {\n      slug: 'session',\n      admin: {\n        useAsTitle: 'expiresAt',\n      },\n      fields: [\n        {\n          name: 'expiresAt',\n          type: 'date',\n          required: true,\n        },\n        {\n          name: 'token',\n          type: 'text',\n          required: true,\n          unique: true,\n        },\n        {\n          name: 'ipAddress',\n          type: 'text',\n        },\n        {\n          name: 'userAgent',\n          type: 'text',\n        },\n        {\n          name: 'user',\n          type: 'relationship',\n          required: true,\n          // @ts-ignore\n          relationTo: 'user',\n        },\n      ],\n      timestamps: true,\n    },\n  ],\n})\n\nexport async function getPayload() {\n  return await getPayloadBase({ config: payloadConfig })\n}\n\nexport default payloadConfig\n"],"names":["getPayload","getPayloadBase","buildConfig","mongooseAdapter","dotenv","config","payloadConfig","admin","user","secret","process","env","PAYLOAD_SECRET","db","url","DATABASE_URI","collections","slug","useAsTitle","auth","disableLocalStrategy","fields","name","type","required","unique","timestamps","relationTo"],"mappings":"AAAA,SAASA,cAAcC,cAAc,QAAQ,UAAS;AAEtD,SAASC,WAAW,QAAQ,UAAS;AACrC,SAASC,eAAe,QAAQ,yBAAwB;AACxD,OAAOC,YAAY,SAAQ;AAE3BA,OAAOC,MAAM;AAEb,OAAO,MAAMC,gBAAgBJ,YAAY;IACvCK,OAAO;QACLC,MAAM;IACR;IACAC,QAAQC,QAAQC,GAAG,CAACC,cAAc,IAAI;IACtCC,IAAIV,gBAAgB;QAClBW,KAAKJ,QAAQC,GAAG,CAACI,YAAY,IAAI;IACnC;IACAC,aAAa;QACX;YACEC,MAAM;YACNV,OAAO;gBACLW,YAAY;YACd;YACAC,MAAM;gBACJC,sBAAsB;YACxB;YACAC,QAAQ;gBACN;oBACEC,MAAM;oBACNC,MAAM;oBACNC,UAAU;gBACZ;gBACA;oBACEF,MAAM;oBACNC,MAAM;oBACNC,UAAU;oBACVC,QAAQ;gBACV;gBACA;oBACEH,MAAM;oBACNC,MAAM;oBACNC,UAAU;gBACZ;gBACA;oBACEF,MAAM;oBACNC,MAAM;gBACR;aACD;YACDG,YAAY;QACd;QACA;YACET,MAAM;YACNV,OAAO;gBACLW,YAAY;YACd;YACAG,QAAQ;gBACN;oBACEC,MAAM;oBACNC,MAAM;oBACNC,UAAU;gBACZ;gBACA;oBACEF,MAAM;oBACNC,MAAM;gBACR;gBACA;oBACED,MAAM;oBACNC,MAAM;oBACNC,UAAU;oBACV,aAAa;oBACbG,YAAY;gBACd;gBACA;oBACEL,MAAM;oBACNC,MAAM;gBACR;gBACA;oBACED,MAAM;oBACNC,MAAM;gBACR;gBACA;oBACED,MAAM;oBACNC,MAAM;gBACR;gBACA;oBACED,MAAM;oBACNC,MAAM;gBACR;gBACA;oBACED,MAAM;oBACNC,MAAM;gBACR;gBACA;oBACED,MAAM;oBACNC,MAAM;gBACR;gBACA;oBACED,MAAM;oBACNC,MAAM;gBACR;aACD;YACDG,YAAY;QACd;QACA;YACET,MAAM;YACNV,OAAO;gBACLW,YAAY;YACd;YACAG,QAAQ;gBACN;oBACEC,MAAM;oBACNC,MAAM;oBACNC,UAAU;gBACZ;gBACA;oBACEF,MAAM;oBACNC,MAAM;oBACNC,UAAU;gBACZ;gBACA;oBACEF,MAAM;oBACNC,MAAM;oBACNC,UAAU;gBACZ;aACD;YACDE,YAAY;QACd;QACA;YACET,MAAM;YACNV,OAAO;gBACLW,YAAY;YACd;YACAG,QAAQ;gBACN;oBACEC,MAAM;oBACNC,MAAM;oBACNC,UAAU;gBACZ;gBACA;oBACEF,MAAM;oBACNC,MAAM;oBACNC,UAAU;oBACVC,QAAQ;gBACV;gBACA;oBACEH,MAAM;oBACNC,MAAM;gBACR;gBACA;oBACED,MAAM;oBACNC,MAAM;gBACR;gBACA;oBACED,MAAM;oBACNC,MAAM;oBACNC,UAAU;oBACV,aAAa;oBACbG,YAAY;gBACd;aACD;YACDD,YAAY;QACd;KACD;AACH,GAAE;AAEF,OAAO,eAAe1B;IACpB,OAAO,MAAMC,eAAe;QAAEI,QAAQC;IAAc;AACtD;AAEA,eAAeA,cAAa"}