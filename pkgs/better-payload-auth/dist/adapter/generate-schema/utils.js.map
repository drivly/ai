{"version":3,"sources":["../../../src/adapter/generate-schema/utils.ts"],"sourcesContent":["import path from 'node:path'\n\nexport function padding(str: string, indent = 2) {\n  if (str.trim() === '') return ''\n  return str\n    .split('\\n')\n    .map((x) => (x.length > 0 ? `${' '.repeat(indent)}${x}` : x))\n    .join('\\n')\n}\n\nexport function getPayloadPath(provided_payload_dir_path?: string) {\n  const base_path = process.cwd()\n\n  // If no path provided, use default \"convex\" in current directory\n  if (!provided_payload_dir_path) {\n    return path.join(base_path, 'payload')\n  }\n\n  // If it's already an absolute path and exists, use it directly\n  if (path.isAbsolute(provided_payload_dir_path)) {\n    return provided_payload_dir_path\n  }\n\n  // Otherwise, treat it as relative to current directory\n  return path.join(base_path, provided_payload_dir_path)\n}\n"],"names":["path","padding","str","indent","trim","split","map","x","length","repeat","join","getPayloadPath","provided_payload_dir_path","base_path","process","cwd","isAbsolute"],"mappings":"AAAA,OAAOA,UAAU,YAAW;AAE5B,OAAO,SAASC,QAAQC,GAAW,EAAEC,SAAS,CAAC;IAC7C,IAAID,IAAIE,IAAI,OAAO,IAAI,OAAO;IAC9B,OAAOF,IACJG,KAAK,CAAC,MACNC,GAAG,CAAC,CAACC,IAAOA,EAAEC,MAAM,GAAG,IAAI,GAAG,IAAIC,MAAM,CAACN,UAAUI,GAAG,GAAGA,GACzDG,IAAI,CAAC;AACV;AAEA,OAAO,SAASC,eAAeC,yBAAkC;IAC/D,MAAMC,YAAYC,QAAQC,GAAG;IAE7B,iEAAiE;IACjE,IAAI,CAACH,2BAA2B;QAC9B,OAAOZ,KAAKU,IAAI,CAACG,WAAW;IAC9B;IAEA,+DAA+D;IAC/D,IAAIb,KAAKgB,UAAU,CAACJ,4BAA4B;QAC9C,OAAOA;IACT;IAEA,uDAAuD;IACvD,OAAOZ,KAAKU,IAAI,CAACG,WAAWD;AAC9B"}