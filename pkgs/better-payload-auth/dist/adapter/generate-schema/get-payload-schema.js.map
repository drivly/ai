{"version":3,"sources":["../../../src/adapter/generate-schema/get-payload-schema.ts"],"sourcesContent":["import fs from 'node:fs/promises'\n\nexport const getPayloadSchema = async (payloadDirPath: string): Promise<string> => {\n  let files: string[]\n  try {\n    files = await fs.readdir(payloadDirPath)\n  } catch (error: any) {\n    if (error.code === 'ENOENT') {\n      throw new Error(\n        `Payload directory not found at \"${payloadDirPath}\". Please run this CLI from the project root directory where the payload directory is located, otherwise specify a payload directory path in your payloadAdapter options, under schema_generation.payload_dir_path.`,\n      )\n    }\n    console.error(error)\n    throw new Error(`Failed to access payload directory at \"${payloadDirPath}\".`)\n  }\n\n  if (!files.includes(`schema.ts`)) return ''\n  try {\n    const schemaCode = await fs.readFile(`${payloadDirPath}/schema.ts`, 'utf8')\n    return schemaCode\n  } catch (error) {\n    console.error(error)\n    throw new Error(`PayloadAdapter: Failed to read schema.ts file from \"${payloadDirPath}\".`)\n  }\n}\n"],"names":["fs","getPayloadSchema","payloadDirPath","files","readdir","error","code","Error","console","includes","schemaCode","readFile"],"mappings":"AAAA,OAAOA,QAAQ,mBAAkB;AAEjC,OAAO,MAAMC,mBAAmB,OAAOC;IACrC,IAAIC;IACJ,IAAI;QACFA,QAAQ,MAAMH,GAAGI,OAAO,CAACF;IAC3B,EAAE,OAAOG,OAAY;QACnB,IAAIA,MAAMC,IAAI,KAAK,UAAU;YAC3B,MAAM,IAAIC,MACR,CAAC,gCAAgC,EAAEL,eAAe,mNAAmN,CAAC;QAE1Q;QACAM,QAAQH,KAAK,CAACA;QACd,MAAM,IAAIE,MAAM,CAAC,uCAAuC,EAAEL,eAAe,EAAE,CAAC;IAC9E;IAEA,IAAI,CAACC,MAAMM,QAAQ,CAAC,CAAC,SAAS,CAAC,GAAG,OAAO;IACzC,IAAI;QACF,MAAMC,aAAa,MAAMV,GAAGW,QAAQ,CAAC,GAAGT,eAAe,UAAU,CAAC,EAAE;QACpE,OAAOQ;IACT,EAAE,OAAOL,OAAO;QACdG,QAAQH,KAAK,CAACA;QACd,MAAM,IAAIE,MAAM,CAAC,oDAAoD,EAAEL,eAAe,EAAE,CAAC;IAC3F;AACF,EAAC"}