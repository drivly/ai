{"version":3,"sources":["../../../../src/adapter/test/test_payload3/schema.ts"],"sourcesContent":["/**\n * EXAMPLE COLLECTIONS FOR BETTER AUTH\n *\n * Below is what your Payload collections should look like.\n * Please copy these to your actual collection configs.\n * Make sure to add an authStrategy for the users collection if there is one.\n *\n * Example auth strategy:\n * auth: {\n *   disableLocalStrategy: true,\n *   strategies: [\n *     betterAuthStrategy(),\n *     // Add other strategies as needed\n *   ],\n * },\n */\nimport type { CollectionConfig } from 'payload'\n\nconst User: CollectionConfig = {\n  slug: 'user',\n  admin: {\n    useAsTitle: 'name',\n  },\n  fields: [\n    {\n      name: 'name',\n      type: 'text',\n      required: true,\n    },\n    {\n      name: 'email',\n      type: 'email',\n      required: true,\n      unique: true,\n    },\n    {\n      name: 'emailVerified',\n      type: 'checkbox',\n      required: true,\n    },\n    {\n      name: 'image',\n      type: 'upload',\n      relationTo: 'media',\n    },\n  ],\n  timestamps: true,\n} as const\n\nconst Session: CollectionConfig = {\n  slug: 'session',\n  admin: {\n    useAsTitle: 'expiresAt',\n  },\n  fields: [\n    {\n      name: 'expiresAt',\n      type: 'date',\n      required: true,\n    },\n    {\n      name: 'token',\n      type: 'text',\n      required: true,\n      unique: true,\n    },\n    {\n      name: 'ipAddress',\n      type: 'text',\n    },\n    {\n      name: 'userAgent',\n      type: 'text',\n    },\n    {\n      name: 'userId',\n      type: 'relationship',\n      required: true,\n      relationTo: 'user',\n    },\n  ],\n  timestamps: true,\n} as const\n\nconst Account: CollectionConfig = {\n  slug: 'account',\n  admin: {\n    useAsTitle: 'accountId',\n  },\n  fields: [\n    {\n      name: 'accountId',\n      type: 'text',\n      required: true,\n    },\n    {\n      name: 'providerId',\n      type: 'text',\n      required: true,\n    },\n    {\n      name: 'userId',\n      type: 'relationship',\n      required: true,\n      relationTo: 'user',\n    },\n    {\n      name: 'accessToken',\n      type: 'text',\n    },\n    {\n      name: 'refreshToken',\n      type: 'text',\n    },\n    {\n      name: 'idToken',\n      type: 'text',\n    },\n    {\n      name: 'accessTokenExpiresAt',\n      type: 'date',\n    },\n    {\n      name: 'refreshTokenExpiresAt',\n      type: 'date',\n    },\n    {\n      name: 'scope',\n      type: 'text',\n    },\n    {\n      name: 'password',\n      type: 'text',\n    },\n  ],\n  timestamps: true,\n} as const\n\nconst Verification: CollectionConfig = {\n  slug: 'verification',\n  admin: {\n    useAsTitle: 'identifier',\n  },\n  fields: [\n    {\n      name: 'identifier',\n      type: 'text',\n      required: true,\n    },\n    {\n      name: 'value',\n      type: 'text',\n      required: true,\n    },\n    {\n      name: 'expiresAt',\n      type: 'date',\n      required: true,\n    },\n  ],\n  timestamps: true,\n} as const\n\nconst Admin: CollectionConfig = {\n  slug: 'admin',\n  admin: {\n    useAsTitle: 'name',\n  },\n  fields: [\n    {\n      name: 'name',\n      type: 'text',\n      required: true,\n    },\n    {\n      name: 'isAdmin',\n      type: 'checkbox',\n      required: true,\n    },\n    {\n      name: 'status',\n      type: 'text',\n    },\n    {\n      name: 'date',\n      type: 'date',\n    },\n    {\n      name: 'number',\n      type: 'number',\n    },\n    {\n      name: 'str_array',\n      type: 'text',\n    },\n    {\n      name: 'num_array',\n      type: 'text',\n    },\n  ],\n  timestamps: true,\n} as const\n\nexport { User, Session, Account, Verification, Admin }\n"],"names":["User","slug","admin","useAsTitle","fields","name","type","required","unique","relationTo","timestamps","Session","Account","Verification","Admin"],"mappings":"AAAA;;;;;;;;;;;;;;;CAeC,GAGD,MAAMA,OAAyB;IAC7BC,MAAM;IACNC,OAAO;QACLC,YAAY;IACd;IACAC,QAAQ;QACN;YACEC,MAAM;YACNC,MAAM;YACNC,UAAU;QACZ;QACA;YACEF,MAAM;YACNC,MAAM;YACNC,UAAU;YACVC,QAAQ;QACV;QACA;YACEH,MAAM;YACNC,MAAM;YACNC,UAAU;QACZ;QACA;YACEF,MAAM;YACNC,MAAM;YACNG,YAAY;QACd;KACD;IACDC,YAAY;AACd;AAEA,MAAMC,UAA4B;IAChCV,MAAM;IACNC,OAAO;QACLC,YAAY;IACd;IACAC,QAAQ;QACN;YACEC,MAAM;YACNC,MAAM;YACNC,UAAU;QACZ;QACA;YACEF,MAAM;YACNC,MAAM;YACNC,UAAU;YACVC,QAAQ;QACV;QACA;YACEH,MAAM;YACNC,MAAM;QACR;QACA;YACED,MAAM;YACNC,MAAM;QACR;QACA;YACED,MAAM;YACNC,MAAM;YACNC,UAAU;YACVE,YAAY;QACd;KACD;IACDC,YAAY;AACd;AAEA,MAAME,UAA4B;IAChCX,MAAM;IACNC,OAAO;QACLC,YAAY;IACd;IACAC,QAAQ;QACN;YACEC,MAAM;YACNC,MAAM;YACNC,UAAU;QACZ;QACA;YACEF,MAAM;YACNC,MAAM;YACNC,UAAU;QACZ;QACA;YACEF,MAAM;YACNC,MAAM;YACNC,UAAU;YACVE,YAAY;QACd;QACA;YACEJ,MAAM;YACNC,MAAM;QACR;QACA;YACED,MAAM;YACNC,MAAM;QACR;QACA;YACED,MAAM;YACNC,MAAM;QACR;QACA;YACED,MAAM;YACNC,MAAM;QACR;QACA;YACED,MAAM;YACNC,MAAM;QACR;QACA;YACED,MAAM;YACNC,MAAM;QACR;QACA;YACED,MAAM;YACNC,MAAM;QACR;KACD;IACDI,YAAY;AACd;AAEA,MAAMG,eAAiC;IACrCZ,MAAM;IACNC,OAAO;QACLC,YAAY;IACd;IACAC,QAAQ;QACN;YACEC,MAAM;YACNC,MAAM;YACNC,UAAU;QACZ;QACA;YACEF,MAAM;YACNC,MAAM;YACNC,UAAU;QACZ;QACA;YACEF,MAAM;YACNC,MAAM;YACNC,UAAU;QACZ;KACD;IACDG,YAAY;AACd;AAEA,MAAMI,QAA0B;IAC9Bb,MAAM;IACNC,OAAO;QACLC,YAAY;IACd;IACAC,QAAQ;QACN;YACEC,MAAM;YACNC,MAAM;YACNC,UAAU;QACZ;QACA;YACEF,MAAM;YACNC,MAAM;YACNC,UAAU;QACZ;QACA;YACEF,MAAM;YACNC,MAAM;QACR;QACA;YACED,MAAM;YACNC,MAAM;QACR;QACA;YACED,MAAM;YACNC,MAAM;QACR;QACA;YACED,MAAM;YACNC,MAAM;QACR;QACA;YACED,MAAM;YACNC,MAAM;QACR;KACD;IACDI,YAAY;AACd;AAEA,SAASV,IAAI,EAAEW,OAAO,EAAEC,OAAO,EAAEC,YAAY,EAAEC,KAAK,GAAE"}