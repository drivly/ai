{"version":3,"sources":["../../../../../src/plugin/collections/accounts/hooks/sync-password-to-user.ts"],"sourcesContent":["import type { CollectionAfterChangeHook } from 'payload'\nimport type { CollectionHookWithBetterAuth } from '../../../types'\n\ntype CollectionAfterChangeHookWithBetterAuth =\n  CollectionHookWithBetterAuth<CollectionAfterChangeHook>\n\ntype SyncPasswordToUserOptions = {\n  userSlug: string\n  accountSlug: string\n}\n\nexport const getSyncPasswordToUserHook = (\n  options: SyncPasswordToUserOptions,\n): CollectionAfterChangeHook => {\n  const hook: CollectionAfterChangeHookWithBetterAuth = async ({\n    doc,\n    req,\n    operation,\n    context,\n  }) => {\n    if (context?.syncAccountHook) return doc\n\n    if (operation !== 'create' && operation !== 'update') {\n      return doc\n    }\n\n    const userField = req.payload.betterAuth.options.account?.fields?.userId || 'userId'\n\n    if (!doc[userField]) {\n      return doc\n    }\n\n    const account = await req.payload.findByID({\n      collection: options.accountSlug,\n      id: doc.id,\n      depth: 0,\n      req,\n      showHiddenFields: true,\n    })\n\n    if (!account || !account.password) {\n      return doc\n    }\n\n    const [salt, hash] = account.password.split(':')\n\n    if (!salt || !hash) {\n      return doc\n    }\n\n    const userId = typeof doc[userField] === 'string' ? doc[userField] : doc[userField]?.id\n\n    try {\n      await req.payload.update({\n        collection: options.userSlug,\n        id: userId,\n        data: {\n          salt,\n          hash,\n        },\n        req,\n        context: { syncPasswordToUser: true },\n      })\n    } catch (error) {\n      console.error('Failed to sync password to user:', error)\n    }\n\n    return doc\n  }\n\n  return hook as CollectionAfterChangeHook\n}\n"],"names":["getSyncPasswordToUserHook","options","hook","doc","req","operation","context","syncAccountHook","userField","payload","betterAuth","account","fields","userId","findByID","collection","accountSlug","id","depth","showHiddenFields","password","salt","hash","split","update","userSlug","data","syncPasswordToUser","error","console"],"mappings":"AAWA,OAAO,MAAMA,4BAA4B,CACvCC;IAEA,MAAMC,OAAgD,OAAO,EAC3DC,GAAG,EACHC,GAAG,EACHC,SAAS,EACTC,OAAO,EACR;QACC,IAAIA,SAASC,iBAAiB,OAAOJ;QAErC,IAAIE,cAAc,YAAYA,cAAc,UAAU;YACpD,OAAOF;QACT;QAEA,MAAMK,YAAYJ,IAAIK,OAAO,CAACC,UAAU,CAACT,OAAO,CAACU,OAAO,EAAEC,QAAQC,UAAU;QAE5E,IAAI,CAACV,GAAG,CAACK,UAAU,EAAE;YACnB,OAAOL;QACT;QAEA,MAAMQ,UAAU,MAAMP,IAAIK,OAAO,CAACK,QAAQ,CAAC;YACzCC,YAAYd,QAAQe,WAAW;YAC/BC,IAAId,IAAIc,EAAE;YACVC,OAAO;YACPd;YACAe,kBAAkB;QACpB;QAEA,IAAI,CAACR,WAAW,CAACA,QAAQS,QAAQ,EAAE;YACjC,OAAOjB;QACT;QAEA,MAAM,CAACkB,MAAMC,KAAK,GAAGX,QAAQS,QAAQ,CAACG,KAAK,CAAC;QAE5C,IAAI,CAACF,QAAQ,CAACC,MAAM;YAClB,OAAOnB;QACT;QAEA,MAAMU,SAAS,OAAOV,GAAG,CAACK,UAAU,KAAK,WAAWL,GAAG,CAACK,UAAU,GAAGL,GAAG,CAACK,UAAU,EAAES;QAErF,IAAI;YACF,MAAMb,IAAIK,OAAO,CAACe,MAAM,CAAC;gBACvBT,YAAYd,QAAQwB,QAAQ;gBAC5BR,IAAIJ;gBACJa,MAAM;oBACJL;oBACAC;gBACF;gBACAlB;gBACAE,SAAS;oBAAEqB,oBAAoB;gBAAK;YACtC;QACF,EAAE,OAAOC,OAAO;YACdC,QAAQD,KAAK,CAAC,oCAAoCA;QACpD;QAEA,OAAOzB;IACT;IAEA,OAAOD;AACT,EAAC"}