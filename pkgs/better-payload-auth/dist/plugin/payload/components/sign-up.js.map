{"version":3,"sources":["../../../../src/plugin/payload/components/sign-up.tsx"],"sourcesContent":["'use client'\n\nimport { DiscordLogoIcon, GitHubLogoIcon } from '@radix-ui/react-icons'\nimport { inferAdditionalFields } from 'better-auth/client/plugins'\nimport { createAuthClient } from 'better-auth/react'\nimport { Loader2, X } from 'lucide-react'\nimport Image from 'next/image'\nimport Link from 'next/link'\nimport { useRouter } from 'next/navigation'\nimport { useState } from 'react'\nimport { toast } from 'sonner'\nimport { Button } from './ui/button'\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from './ui/card'\nimport { Input } from './ui/input'\nimport { Label } from './ui/label'\nimport { PasswordInput } from './ui/password-input'\n\nexport function SignUp({\n  admin = false,\n  apiRoute,\n  userSlug,\n  defaultAdminRole,\n}: {\n  admin?: boolean\n  apiRoute: string\n  userSlug: string\n  defaultAdminRole: string\n}) {\n  const [firstName, setFirstName] = useState('')\n  const [lastName, setLastName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [passwordConfirmation, setPasswordConfirmation] = useState('')\n  const [image, setImage] = useState<File | null>(null)\n  const [imagePreview, setImagePreview] = useState<string | null>(null)\n  const router = useRouter()\n\n  const authClient = createAuthClient({\n    plugins: [\n      inferAdditionalFields({\n        user: {\n          role: {\n            type: 'string',\n          },\n        },\n      }),\n    ],\n  })\n\n  const handleImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0]\n    if (file) {\n      setImage(file)\n      const reader = new FileReader()\n      reader.onloadend = () => {\n        setImagePreview(reader.result as string)\n      }\n      reader.readAsDataURL(file)\n    }\n  }\n\n  const addAdminRole = async (userId: string) => {\n    try {\n      const req = await fetch(\n        `${process.env.NEXT_PUBLIC_SERVER_URL}${apiRoute}/${userSlug}/${userId}`,\n        {\n          method: 'PATCH',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            role: defaultAdminRole ?? 'admin',\n          }),\n        },\n      )\n    } catch (err) {\n      console.log(err)\n    }\n  }\n  const [loading, setLoading] = useState(false)\n\n  return (\n    <Card className=\"z-50 rounded-md rounded-t-none w-full max-w-md mx-auto shadow-lg\">\n      <CardHeader className=\"space-y-1\">\n        <CardTitle className=\"text-xl md:text-2xl font-bold\">Sign Up</CardTitle>\n        <CardDescription className=\"text-sm text-muted-foreground\">\n          Enter your information to create an account\n        </CardDescription>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        <div className=\"space-y-4\">\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"first-name\" className=\"text-sm font-medium\">\n                First name\n              </Label>\n              <Input\n                id=\"first-name\"\n                placeholder=\"Max\"\n                required\n                onChange={(e) => {\n                  setFirstName(e.target.value)\n                }}\n                value={firstName}\n                className=\"w-full\"\n              />\n            </div>\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"last-name\" className=\"text-sm font-medium\">\n                Last name\n              </Label>\n              <Input\n                id=\"last-name\"\n                placeholder=\"Robinson\"\n                required\n                onChange={(e) => {\n                  setLastName(e.target.value)\n                }}\n                value={lastName}\n                className=\"w-full\"\n              />\n            </div>\n          </div>\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"email\" className=\"text-sm font-medium\">\n              Email\n            </Label>\n            <Input\n              id=\"email\"\n              type=\"email\"\n              placeholder=\"m@example.com\"\n              required\n              onChange={(e) => {\n                setEmail(e.target.value)\n              }}\n              value={email}\n              className=\"w-full\"\n            />\n          </div>\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"password\" className=\"text-sm font-medium\">\n              Password\n            </Label>\n            <PasswordInput\n              id=\"password\"\n              value={password}\n              onChange={(e: any) => setPassword(e.target.value)}\n              autoComplete=\"new-password\"\n              placeholder=\"Password\"\n              className=\"w-full\"\n            />\n          </div>\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"password_confirmation\" className=\"text-sm font-medium\">\n              Confirm Password\n            </Label>\n            <PasswordInput\n              id=\"password_confirmation\"\n              value={passwordConfirmation}\n              onChange={(e: any) => setPasswordConfirmation(e.target.value)}\n              autoComplete=\"new-password\"\n              placeholder=\"Confirm Password\"\n              className=\"w-full\"\n            />\n          </div>\n\n          {!admin && (\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"image\" className=\"text-sm font-medium\">\n                Profile Image (optional)\n              </Label>\n              <div className=\"flex items-center gap-3\">\n                {imagePreview && (\n                  <div className=\"relative w-12 h-12 rounded-full overflow-hidden flex-shrink-0\">\n                    <Image src={imagePreview} alt=\"Profile preview\" fill className=\"object-cover\" />\n                  </div>\n                )}\n                <div className=\"flex-1 flex items-center gap-2\">\n                  <Input\n                    id=\"image\"\n                    type=\"file\"\n                    accept=\"image/*\"\n                    onChange={handleImageChange}\n                    className=\"w-full text-sm\"\n                  />\n                  {imagePreview && (\n                    <Button\n                      variant=\"ghost\"\n                      size=\"icon\"\n                      className=\"h-8 w-8 flex-shrink-0\"\n                      onClick={() => {\n                        setImage(null)\n                        setImagePreview(null)\n                      }}\n                    >\n                      <X className=\"h-4 w-4\" />\n                    </Button>\n                  )}\n                </div>\n              </div>\n            </div>\n          )}\n\n          <Button\n            type=\"submit\"\n            className=\"w-full\"\n            disabled={loading}\n            onClick={async () => {\n              if (password !== passwordConfirmation) {\n                toast.error('Please ensure your password and confirm password match.')\n                return\n              }\n              const user = await authClient.signUp.email({\n                email,\n                password,\n                // @ts-ignore\n                role: admin ? 'admin' : 'user',\n                name: `${firstName} ${lastName}`,\n                callbackURL: admin ? '/admin' : '/dashboard',\n                fetchOptions: {\n                  onResponse: () => {\n                    setLoading(false)\n                  },\n                  onRequest: () => {\n                    setLoading(true)\n                  },\n                  onError: (ctx) => {\n                    toast.error(ctx.error.message)\n                  },\n                  onSuccess: async () => {\n                    router.push(admin ? '/admin' : '/dashboard')\n                  },\n                },\n              })\n\n              const userId = user.data?.user.id\n\n              if (userId && admin) {\n                await addAdminRole(userId)\n              }\n            }}\n          >\n            {loading ? <Loader2 size={16} className=\"animate-spin mr-2\" /> : null}\n            {loading ? 'Creating account...' : 'Create an account'}\n          </Button>\n\n          {!admin && (\n            <div>\n              <div className=\"relative my-4\">\n                <div className=\"relative flex justify-center text-xs uppercase border-b border-muted pb-4\">\n                  <span className=\"bg-card px-2 text-muted-foreground\">Or continue with</span>\n                </div>\n              </div>\n              <div className=\"grid grid-cols-4 gap-2 sm:grid-cols-7\">\n                <Button\n                  variant=\"outline\"\n                  size=\"icon\"\n                  className=\"h-10 w-10\"\n                  onClick={async () => {\n                    await authClient.signIn.social({\n                      provider: 'github',\n                      callbackURL: '/dashboard',\n                    })\n                  }}\n                  title=\"GitHub\"\n                >\n                  <GitHubLogoIcon className=\"h-4 w-4\" />\n                </Button>\n                <Button\n                  variant=\"outline\"\n                  size=\"icon\"\n                  className=\"h-10 w-10\"\n                  onClick={async () => {\n                    await authClient.signIn.social({\n                      provider: 'discord',\n                      callbackURL: '/dashboard',\n                    })\n                  }}\n                  title=\"Discord\"\n                >\n                  <DiscordLogoIcon className=\"h-4 w-4\" />\n                </Button>\n                <Button\n                  variant=\"outline\"\n                  size=\"icon\"\n                  className=\"h-10 w-10\"\n                  onClick={async () => {\n                    await authClient.signIn.social({\n                      provider: 'google',\n                      callbackURL: '/dashboard',\n                    })\n                  }}\n                  title=\"Google\"\n                >\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"16\"\n                    height=\"16\"\n                    viewBox=\"0 0 256 262\"\n                  >\n                    <path\n                      fill=\"#4285F4\"\n                      d=\"M255.878 133.451c0-10.734-.871-18.567-2.756-26.69H130.55v48.448h71.947c-1.45 12.04-9.283 30.172-26.69 42.356l-.244 1.622l38.755 30.023l2.685.268c24.659-22.774 38.875-56.282 38.875-96.027\"\n                    />\n                    <path\n                      fill=\"#34A853\"\n                      d=\"M130.55 261.1c35.248 0 64.839-11.605 86.453-31.622l-41.196-31.913c-11.024 7.688-25.82 13.055-45.257 13.055c-34.523 0-63.824-22.773-74.269-54.25l-1.531.13l-40.298 31.187l-.527 1.465C35.393 231.798 79.49 261.1 130.55 261.1\"\n                    />\n                    <path\n                      fill=\"#FBBC05\"\n                      d=\"M56.281 156.37c-2.756-8.123-4.351-16.827-4.351-25.82c0-8.994 1.595-17.697 4.206-25.82l-.073-1.73L15.26 71.312l-1.335.635C5.077 89.644 0 109.517 0 130.55s5.077 40.905 13.925 58.602z\"\n                    />\n                    <path\n                      fill=\"#EB4335\"\n                      d=\"M130.55 50.479c24.514 0 41.05 10.589 50.479 19.438l36.844-35.974C195.245 12.91 165.798 0 130.55 0C79.49 0 35.393 29.301 13.925 71.947l42.211 32.783c10.59-31.477 39.891-54.251 74.414-54.251\"\n                    />\n                  </svg>\n                </Button>\n                <Button\n                  variant=\"outline\"\n                  size=\"icon\"\n                  className=\"h-10 w-10\"\n                  onClick={async () => {\n                    const { data } = await authClient.signIn.social({\n                      provider: 'microsoft',\n                      callbackURL: '/dashboard',\n                    })\n                  }}\n                  title=\"Microsoft\"\n                >\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"16\"\n                    height=\"16\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path\n                      fill=\"currentColor\"\n                      d=\"M2 3h9v9H2zm9 19H2v-9h9zM21 3v9h-9V3zm0 19h-9v-9h9z\"\n                    ></path>\n                  </svg>\n                </Button>\n                <Button\n                  variant=\"outline\"\n                  size=\"icon\"\n                  className=\"h-10 w-10\"\n                  onClick={async () => {\n                    await authClient.signIn.social({\n                      provider: 'twitch',\n                      callbackURL: '/dashboard',\n                    })\n                  }}\n                  title=\"Twitch\"\n                >\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"16\"\n                    height=\"16\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path\n                      fill=\"currentColor\"\n                      d=\"M11.64 5.93h1.43v4.28h-1.43m3.93-4.28H17v4.28h-1.43M7 2L3.43 5.57v12.86h4.28V22l3.58-3.57h2.85L20.57 12V2m-1.43 9.29l-2.85 2.85h-2.86l-2.5 2.5v-2.5H7.71V3.43h11.43Z\"\n                    ></path>\n                  </svg>\n                </Button>\n                <Button\n                  variant=\"outline\"\n                  size=\"icon\"\n                  className=\"h-10 w-10\"\n                  onClick={async () => {\n                    await authClient.signIn.social({\n                      provider: 'facebook',\n                      callbackURL: '/dashboard',\n                    })\n                  }}\n                  title=\"Facebook\"\n                >\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"16\"\n                    height=\"16\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path\n                      fill=\"currentColor\"\n                      d=\"M22 12c0-5.52-4.48-10-10-10S2 6.48 2 12c0 4.84 3.44 8.87 8 9.8V15H8v-3h2V9.5C10 7.57 11.57 6 13.5 6H16v3h-2c-.55 0-1 .45-1 1v2h3v3h-3v6.95c5.05-.5 9-4.76 9-9.95\"\n                    ></path>\n                  </svg>\n                </Button>\n                <Button\n                  variant=\"outline\"\n                  size=\"icon\"\n                  className=\"h-10 w-10\"\n                  onClick={async () => {\n                    await authClient.signIn.social({\n                      provider: 'twitter',\n                      callbackURL: '/dashboard',\n                    })\n                  }}\n                  title=\"Twitter\"\n                >\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"16\"\n                    height=\"16\"\n                    viewBox=\"0 0 14 14\"\n                  >\n                    <g fill=\"none\">\n                      <g clipPath=\"url(#primeTwitter0)\">\n                        <path\n                          fill=\"currentColor\"\n                          d=\"M11.025.656h2.147L8.482 6.03L14 13.344H9.68L6.294 8.909l-3.87 4.435H.275l5.016-5.75L0 .657h4.43L7.486 4.71zm-.755 11.4h1.19L3.78 1.877H2.504z\"\n                        ></path>\n                      </g>\n                      <defs>\n                        <clipPath id=\"primeTwitter0\">\n                          <path fill=\"#fff\" d=\"M0 0h14v14H0z\"></path>\n                        </clipPath>\n                      </defs>\n                    </g>\n                  </svg>\n                </Button>\n              </div>\n            </div>\n          )}\n        </div>\n      </CardContent>\n      <CardFooter className=\"flex flex-col\">\n        <div className=\"w-full border-t pt-4\">\n          <p className=\"text-center text-xs text-muted-foreground\">\n            Secured by{' '}\n            <Link\n              className=\"font-medium text-orange-500\"\n              href=\"https://github.com/forrestdevs/payload-better-auth\"\n            >\n              payload-better-auth\n            </Link>\n          </p>\n        </div>\n      </CardFooter>\n    </Card>\n  )\n}\n\nasync function convertImageToBase64(file: File): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader()\n    reader.onloadend = () => resolve(reader.result as string)\n    reader.onerror = reject\n    reader.readAsDataURL(file)\n  })\n}\n"],"names":["DiscordLogoIcon","GitHubLogoIcon","inferAdditionalFields","createAuthClient","Loader2","X","Image","Link","useRouter","useState","toast","Button","Card","CardContent","CardDescription","CardFooter","CardHeader","CardTitle","Input","Label","PasswordInput","SignUp","admin","apiRoute","userSlug","defaultAdminRole","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","passwordConfirmation","setPasswordConfirmation","image","setImage","imagePreview","setImagePreview","router","authClient","plugins","user","role","type","handleImageChange","e","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","addAdminRole","userId","req","fetch","process","env","NEXT_PUBLIC_SERVER_URL","method","credentials","headers","body","JSON","stringify","err","console","log","loading","setLoading","className","div","htmlFor","id","placeholder","required","onChange","value","autoComplete","src","alt","fill","accept","variant","size","onClick","disabled","error","signUp","name","callbackURL","fetchOptions","onResponse","onRequest","onError","ctx","message","onSuccess","push","data","span","signIn","social","provider","title","svg","xmlns","width","height","viewBox","path","d","g","clipPath","defs","p","href","convertImageToBase64","Promise","resolve","reject","onerror"],"mappings":"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"}