{"version":3,"sources":["../../../../src/plugin/payload/components/admin-buttons.tsx"],"sourcesContent":["'use client'\n\nimport React, { CSSProperties, useEffect, useState } from 'react'\nimport { adminClient } from 'better-auth/client/plugins'\nimport { createAuthClient } from 'better-auth/react'\nimport { useParams, usePathname, useRouter } from 'next/navigation'\nimport { toast } from 'sonner'\nimport { Toaster } from 'sonner'\nimport { Button } from '@payloadcms/ui'\nimport './styles.css'\n\nimport '@payloadcms/ui/styles.css'\n\nasync function getDocumentData(id: string, path: string) {\n  const apiUrl = `${path}/api`\n  try {\n    // Try to load the /api page and parse the HTML response\n    const response = await fetch(apiUrl)\n    if (response.ok) {\n      const htmlResponse = await response.text()\n      // Parse the HTML to extract user data\n      try {\n        let documentData: any = null\n        const parser = new DOMParser()\n        const doc = parser.parseFromString(htmlResponse, 'text/html')\n\n        // Look for the JSON data in the query inspector\n        const jsonRows = doc.querySelectorAll('.query-inspector__row-line')\n        if (jsonRows.length > 0) {\n          documentData = {}\n\n          jsonRows.forEach((row) => {\n            const keyMatch = row.innerHTML.match(/\"([^\"]+)\"\\s*:/)\n            if (keyMatch) {\n              const key = keyMatch[1].trim()\n              const valueElement = row.querySelector('.query-inspector__value')\n              if (valueElement) {\n                let value = valueElement.textContent?.trim() ?? ''\n\n                // Convert values to appropriate types\n                if (value === 'true') value = 'true'\n                else if (value === 'false') value = 'false'\n                else if (value === 'null') value = 'null'\n                else if (!isNaN(Number(value))) value = Number(value).toString()\n                else if (value.startsWith('\"') && value.endsWith('\"')) {\n                  value = value.substring(1, value.length - 1).trim()\n                }\n\n                documentData[key] = value\n              }\n            }\n          })\n        }\n\n        return documentData\n      } catch (parseError) {\n        console.error('Error parsing document data from HTML:', parseError)\n        return null\n      }\n    }\n  } catch (apiError) {\n    console.error('Error fetching document data from API:', apiError)\n  }\n}\n\nexport default function AdminButtons({ userSlug }: { userSlug: string }) {\n  const router = useRouter()\n  const path = usePathname()\n  const params = useParams()\n  const [id, setId] = useState('')\n  const [documentData, setDocumentData] = useState<any>(null)\n\n  const authClient = createAuthClient({\n    plugins: [adminClient()],\n  })\n\n  useEffect(() => {\n    async function fetchDocumentData() {\n      // Get the ID from the params.segments array\n      const segments = params.segments as string[]\n      const userSlugIndex = segments.findIndex((segment) => segment === userSlug)\n      const id =\n        userSlugIndex !== -1 && userSlugIndex < segments.length - 1\n          ? segments[userSlugIndex + 1]\n          : segments[segments.length - 1]\n\n      const documentData = await getDocumentData(id, path)\n      setId(id)\n      setDocumentData(documentData)\n    }\n    fetchDocumentData()\n  }, [params, path, userSlug])\n\n  const handleImpersonate = async () => {\n    await authClient.admin.impersonateUser({\n      userId: id,\n      fetchOptions: {\n        onSuccess() {\n          router.push('/')\n        },\n        onError(error: any) {\n          console.error('Error impersonating user:', error)\n          toast.error('Failed to impersonate user')\n        },\n      },\n    })\n  }\n\n  const handleBan = async () => {\n    await authClient.admin.banUser({\n      userId: id,\n      fetchOptions: {\n        onSuccess() {\n          toast.success('User banned successfully')\n          router.refresh()\n        },\n        onError(error: any) {\n          console.error('Error banning user:', error)\n          toast.error('Failed to ban user')\n        },\n      },\n    })\n  }\n\n  const handleUnban = async () => {\n    await authClient.admin.unbanUser({\n      userId: id,\n      fetchOptions: {\n        onSuccess() {\n          toast.success('User unbanned successfully')\n          router.refresh()\n        },\n        onError(error: any) {\n          console.error('Error unbanning user:', error)\n          toast.error('Failed to unban user')\n        },\n      },\n    })\n  }\n\n  const handleRevokeAllSessions = async () => {\n    await authClient.admin.revokeUserSessions({\n      userId: id,\n      fetchOptions: {\n        onSuccess() {\n          toast.success('All sessions revoked successfully')\n          router.refresh()\n        },\n        onError(error: any) {\n          console.error('Error revoking all sessions:', error)\n          toast.error('Failed to revoke all sessions')\n        },\n      },\n    })\n  }\n\n  return (\n    <>\n      <style>{`\n        .admin-actions-container {\n          display: flex;\n          flex-direction: column;\n        }\n        .admin-actions-container h3 {\n          margin-bottom: 1rem;\n        }\n        .admin-actions-container .btn {\n          margin-block: 0.5rem;\n        }\n        .ban-button {\n          background-color: oklch(0.258 0.092 26.042);\n          color: oklch(0.577 0.245 27.325);\n          border: 1px solid oklch(0.396 0.141 25.723);\n          &:hover {\n            color: #fff;\n            background-color: oklch(0.505 0.213 27.518);\n          }\n        }\n        .revoke-sessions-button {\n          --theme-elevation-800: oklch(0.396 0.141 25.723);\n          color: oklch(0.637 0.237 25.331);\n          &:hover {\n            --theme-elevation-400: oklch(0.396 0.141 25.723);\n            color: #fff;\n            background-color: oklch(0.396 0.141 25.723);\n          }\n        }\n      `}</style>\n      <div className=\"admin-actions-container\">\n        <h3>Admin Actions</h3>\n        <div style={{ display: 'flex', flexWrap: 'wrap', columnGap: '0.5rem' }}>\n          <Button onClick={handleImpersonate} buttonStyle=\"primary\">\n            Impersonate\n          </Button>\n          <Button\n            onClick={handleRevokeAllSessions}\n            buttonStyle=\"secondary\"\n            className=\"revoke-sessions-button\"\n          >\n            Revoke All Sessions\n          </Button>\n          <Button onClick={handleBan} buttonStyle=\"error\" className=\"ban-button\">\n            Ban\n          </Button>\n          <Button onClick={handleUnban} buttonStyle=\"primary\">\n            Unban\n          </Button>\n        </div>\n      </div>\n      <Toaster />\n    </>\n  )\n}\n"],"names":["React","useEffect","useState","adminClient","createAuthClient","useParams","usePathname","useRouter","toast","Toaster","Button","getDocumentData","id","path","apiUrl","response","fetch","ok","htmlResponse","text","documentData","parser","DOMParser","doc","parseFromString","jsonRows","querySelectorAll","length","forEach","row","keyMatch","innerHTML","match","key","trim","valueElement","querySelector","value","textContent","isNaN","Number","toString","startsWith","endsWith","substring","parseError","console","error","apiError","AdminButtons","userSlug","router","params","setId","setDocumentData","authClient","plugins","fetchDocumentData","segments","userSlugIndex","findIndex","segment","handleImpersonate","admin","impersonateUser","userId","fetchOptions","onSuccess","push","onError","handleBan","banUser","success","refresh","handleUnban","unbanUser","handleRevokeAllSessions","revokeUserSessions","style","div","className","h3","display","flexWrap","columnGap","onClick","buttonStyle"],"mappings":"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"}