{"version":3,"sources":["../../../src/plugin/lib/respect-save-to-jwt-fields-middleware.ts"],"sourcesContent":["import { setCookieCache } from 'better-auth/cookies'\nimport { createAuthMiddleware } from 'better-auth/api'\nimport type { SanitizedBetterAuthOptions, PayloadBetterAuthPluginOptions } from '..'\nimport type { Config, Payload } from 'payload'\nimport { prepareSessionData } from './prepare-session-data'\n\n/**\n * Sets up a middleware that enforces the saveToJwt configuration when setting session data.\n * This ensures that only fields specified in saveToJwt are included in the cookie cache\n * for both user and session objects.\n *\n * The middleware runs after authentication and filters the session data based on\n * the collection configurations before storing it in the cookie cache.\n */\nexport function respectSaveToJwtFieldsMiddleware({\n  sanitizedOptions,\n  payloadConfig,\n  pluginOptions,\n}: {\n  sanitizedOptions: SanitizedBetterAuthOptions\n  payloadConfig: Payload['config'] | Config\n  pluginOptions: PayloadBetterAuthPluginOptions\n}) {\n  if (typeof sanitizedOptions.hooks !== 'object') sanitizedOptions.hooks = {}\n\n  sanitizedOptions.hooks.after = createAuthMiddleware(async (ctx) => {\n    const newSession = ctx.context?.newSession\n    if (!newSession) return\n\n    const filteredSessionData = await prepareSessionData({\n      newSession,\n      payloadConfig,\n      collectionSlugs: {\n        userCollectionSlug: pluginOptions.users?.slug ?? 'users',\n        sessionCollectionSlug: pluginOptions.sessions?.slug ?? 'sessions',\n      },\n    })\n\n    if (filteredSessionData) {\n      await setCookieCache(ctx, filteredSessionData as any)\n    }\n  })\n}\n"],"names":["setCookieCache","createAuthMiddleware","prepareSessionData","respectSaveToJwtFieldsMiddleware","sanitizedOptions","payloadConfig","pluginOptions","hooks","after","ctx","newSession","context","filteredSessionData","collectionSlugs","userCollectionSlug","users","slug","sessionCollectionSlug","sessions"],"mappings":"AAAA,SAASA,cAAc,QAAQ,sBAAqB;AACpD,SAASC,oBAAoB,QAAQ,kBAAiB;AAGtD,SAASC,kBAAkB,QAAQ,yBAAwB;AAE3D;;;;;;;CAOC,GACD,OAAO,SAASC,iCAAiC,EAC/CC,gBAAgB,EAChBC,aAAa,EACbC,aAAa,EAKd;IACC,IAAI,OAAOF,iBAAiBG,KAAK,KAAK,UAAUH,iBAAiBG,KAAK,GAAG,CAAC;IAE1EH,iBAAiBG,KAAK,CAACC,KAAK,GAAGP,qBAAqB,OAAOQ;QACzD,MAAMC,aAAaD,IAAIE,OAAO,EAAED;QAChC,IAAI,CAACA,YAAY;QAEjB,MAAME,sBAAsB,MAAMV,mBAAmB;YACnDQ;YACAL;YACAQ,iBAAiB;gBACfC,oBAAoBR,cAAcS,KAAK,EAAEC,QAAQ;gBACjDC,uBAAuBX,cAAcY,QAAQ,EAAEF,QAAQ;YACzD;QACF;QAEA,IAAIJ,qBAAqB;YACvB,MAAMZ,eAAeS,KAAKG;QAC5B;IACF;AACF"}