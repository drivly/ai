{"version":3,"sources":["../../../src/plugin/lib/payload-access.ts"],"sourcesContent":["import type { Access, FieldAccess } from 'payload'\n\nexport type AdminRolesConfig = {\n  adminRoles?: string[]\n}\n\nexport type AdminOrCurrentUserConfig = AdminRolesConfig & {\n  idField?: string\n}\n\nexport type AdminOrCurrentUserUpdateConfig = AdminOrCurrentUserConfig & {\n  allowedFields?: string[]\n  userSlug: string\n}\n\nexport const isAdminWithRoles =\n  (config: AdminRolesConfig = {}): FieldAccess =>\n  ({ req }) => {\n    const { adminRoles = ['admin'] } = config\n    if (!req?.user || !req.user.role || !adminRoles.includes(req.user.role)) return false\n    return true\n  }\n\nexport const isAdminOrCurrentUserWithRoles =\n  (config: AdminOrCurrentUserConfig = {}): Access =>\n  ({ req }) => {\n    const { adminRoles = ['admin'], idField = 'id' } = config\n    if (isAdminWithRoles({ adminRoles })({ req })) return true\n    if (!req?.user) return false\n    return {\n      [idField]: {\n        equals: req?.user?.id,\n      },\n    }\n  }\n\nexport const isAdminOrCurrentUserUpdateWithAllowedFields = (\n  config: AdminOrCurrentUserUpdateConfig,\n): Access => {\n  return async ({ req, id, data }) => {\n    const { adminRoles = ['admin'], allowedFields = [], userSlug, idField = 'id' } = config\n    const user = req.user\n\n    if (isAdminWithRoles({ adminRoles })({ req })) return true\n\n    if (!user) return false\n\n    if (user[idField] === id && data) {\n      const dataKeys = Object.keys(data)\n\n      const hasCurrentPassword = dataKeys.includes('currentPassword')\n      const hasPassword = dataKeys.includes('password')\n\n      if (hasPassword || hasCurrentPassword) {\n        if (!(hasCurrentPassword && hasPassword)) return false\n        try {\n          if (!user.email) return false\n\n          const result = await req.payload.login({\n            collection: userSlug,\n            data: {\n              email: user.email,\n              password: data.currentPassword,\n            },\n          })\n\n          if (!result) return false\n\n          allowedFields.push('password', 'currentPassword')\n        } catch (error) {\n          return false\n        }\n      }\n\n      const hasDisallowedField = dataKeys.some((key) => !allowedFields.includes(key))\n\n      return !hasDisallowedField\n    }\n\n    return false\n  }\n}\n"],"names":["isAdminWithRoles","config","req","adminRoles","user","role","includes","isAdminOrCurrentUserWithRoles","idField","equals","id","isAdminOrCurrentUserUpdateWithAllowedFields","data","allowedFields","userSlug","dataKeys","Object","keys","hasCurrentPassword","hasPassword","email","result","payload","login","collection","password","currentPassword","push","error","hasDisallowedField","some","key"],"mappings":"AAeA,OAAO,MAAMA,mBACX,CAACC,SAA2B,CAAC,CAAC,GAC9B,CAAC,EAAEC,GAAG,EAAE;QACN,MAAM,EAAEC,aAAa;YAAC;SAAQ,EAAE,GAAGF;QACnC,IAAI,CAACC,KAAKE,QAAQ,CAACF,IAAIE,IAAI,CAACC,IAAI,IAAI,CAACF,WAAWG,QAAQ,CAACJ,IAAIE,IAAI,CAACC,IAAI,GAAG,OAAO;QAChF,OAAO;IACT,EAAC;AAEH,OAAO,MAAME,gCACX,CAACN,SAAmC,CAAC,CAAC,GACtC,CAAC,EAAEC,GAAG,EAAE;QACN,MAAM,EAAEC,aAAa;YAAC;SAAQ,EAAEK,UAAU,IAAI,EAAE,GAAGP;QACnD,IAAID,iBAAiB;YAAEG;QAAW,GAAG;YAAED;QAAI,IAAI,OAAO;QACtD,IAAI,CAACA,KAAKE,MAAM,OAAO;QACvB,OAAO;YACL,CAACI,QAAQ,EAAE;gBACTC,QAAQP,KAAKE,MAAMM;YACrB;QACF;IACF,EAAC;AAEH,OAAO,MAAMC,8CAA8C,CACzDV;IAEA,OAAO,OAAO,EAAEC,GAAG,EAAEQ,EAAE,EAAEE,IAAI,EAAE;QAC7B,MAAM,EAAET,aAAa;YAAC;SAAQ,EAAEU,gBAAgB,EAAE,EAAEC,QAAQ,EAAEN,UAAU,IAAI,EAAE,GAAGP;QACjF,MAAMG,OAAOF,IAAIE,IAAI;QAErB,IAAIJ,iBAAiB;YAAEG;QAAW,GAAG;YAAED;QAAI,IAAI,OAAO;QAEtD,IAAI,CAACE,MAAM,OAAO;QAElB,IAAIA,IAAI,CAACI,QAAQ,KAAKE,MAAME,MAAM;YAChC,MAAMG,WAAWC,OAAOC,IAAI,CAACL;YAE7B,MAAMM,qBAAqBH,SAAST,QAAQ,CAAC;YAC7C,MAAMa,cAAcJ,SAAST,QAAQ,CAAC;YAEtC,IAAIa,eAAeD,oBAAoB;gBACrC,IAAI,CAAEA,CAAAA,sBAAsBC,WAAU,GAAI,OAAO;gBACjD,IAAI;oBACF,IAAI,CAACf,KAAKgB,KAAK,EAAE,OAAO;oBAExB,MAAMC,SAAS,MAAMnB,IAAIoB,OAAO,CAACC,KAAK,CAAC;wBACrCC,YAAYV;wBACZF,MAAM;4BACJQ,OAAOhB,KAAKgB,KAAK;4BACjBK,UAAUb,KAAKc,eAAe;wBAChC;oBACF;oBAEA,IAAI,CAACL,QAAQ,OAAO;oBAEpBR,cAAcc,IAAI,CAAC,YAAY;gBACjC,EAAE,OAAOC,OAAO;oBACd,OAAO;gBACT;YACF;YAEA,MAAMC,qBAAqBd,SAASe,IAAI,CAAC,CAACC,MAAQ,CAAClB,cAAcP,QAAQ,CAACyB;YAE1E,OAAO,CAACF;QACV;QAEA,OAAO;IACT;AACF,EAAC"}