name: Release SDKs

on:
  push:
    branches:
      - main
      - next
    paths:
      - '.github/version-stamp-sdks.txt'
  workflow_dispatch:
    inputs:
      dry-run:
        description: 'Dry Run'
        required: false
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'
      custom-command:
        description: 'Custom Command'
        required: false
        default: ''
        type: string

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  build-and-test:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Setup Node.js 22.x
        uses: actions/setup-node@v3
        with:
          node-version: 22.x

      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 10.x

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Build packages
        run: pnpm build
        env:
          PAYLOAD_SECRET: ${{ secrets.PAYLOAD_SECRET }}
          DATABASE_URI: ${{ secrets.DATABASE_URI || 'mongodb://localhost:27017/payload-cms' }}
          RESEND_API_KEY: ${{ secrets.RESEND_API_KEY || 'resend-key-placeholder' }}
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY || 'sk_test_placeholder' }}
        
      - name: Run tests
        run: pnpm test
        env:
          PAYLOAD_SECRET: ${{ secrets.PAYLOAD_SECRET }}
          DATABASE_URI: ${{ secrets.DATABASE_URI || 'mongodb://localhost:27017/payload-cms' }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
          CHROMATIC_PROJECT_TOKEN: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          RESEND_API_KEY: ${{ secrets.RESEND_API_KEY || 'resend-key-placeholder' }}
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY || 'sk_test_placeholder' }}

  release:
    name: Release SDKs
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.ref_name }}
          token: ${{ secrets.WORKFLOW_PAT }}

      - name: Setup Node.js 22.x
        uses: actions/setup-node@v3
        with:
          node-version: 22.x
          registry-url: 'https://registry.npmjs.org'
          scope: '@drivly'
          always-auth: true

      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 10.x
          
      - name: Setup Git
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "GitHub Actions"
          git fetch --all

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm build
        env:
          PAYLOAD_SECRET: ${{ secrets.PAYLOAD_SECRET }}
          DATABASE_URI: ${{ secrets.DATABASE_URI || 'mongodb://localhost:27017/payload-cms' }}
          RESEND_API_KEY: ${{ secrets.RESEND_API_KEY || 'resend-key-placeholder' }}
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY || 'sk_test_placeholder' }}

      - name: Run SDK Release Script
        id: semantic-release
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/next" ]]; then
            echo "Running next branch SDK release script"
            node scripts/release-sdks-next.js ${{ inputs.dry-run == 'true' && '--dry-run' || '' }}
          else
            echo "Running main branch SDK release script"
            node scripts/release-sdks.js ${{ inputs.dry-run == 'true' && '--dry-run' || '' }}
          fi
        continue-on-error: true
        timeout-minutes: 15
        env:
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_PAT }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          FORCE_PATCH_RELEASE: 'true'
          NPM_CONFIG_REGISTRY: 'https://registry.npmjs.org/'
          INITIAL_VERSION: ${{ github.ref == 'refs/heads/next' && '0.1.0' || '0.0.1' }}
          RELEASE_MAJOR: '0'
          
      - name: Debug npm config
        if: steps.semantic-release.outcome != 'success'
        run: |
          npm config list
          echo "::debug::Checking npm auth setup"
          npm whoami || echo "Not authenticated with npm"
          
      - name: Verify npmjs.org access
        run: |
          echo "Checking registry connectivity..."
          curl -s https://registry.npmjs.org/ || echo "Failed to reach npm registry"
          
      - name: Verify NPM publishing configuration
        run: |
          echo "Checking NPM publishing configuration..."
          echo "NPM_CONFIG_REGISTRY: $NPM_CONFIG_REGISTRY"
          echo "NODE_AUTH_TOKEN exists: ${{ !!secrets.NPM_TOKEN }}"
          npm config get registry
          npm config list

      - name: Release outputs
        run: |
          if [ -n "${{ steps.semantic-release.outputs.new_release_version }}" ]; then
            echo "Semantic release outputs - Version: ${{ steps.semantic-release.outputs.new_release_version }}"
          else 
            echo "Semantic release outputs - No version"
          fi
