name: Vercel E2E Tests

on:
  deployment_status:
    branches:
      - main

jobs:
  e2e-tests:
    if: github.event.deployment_status.state == 'success' && github.event.deployment_status.environment == 'Preview'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: '10'

      - name: Install dependencies
        run: pnpm install

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium

      - name: Debug Deployment Status Event
        run: |
          echo "Deployment Status Event:"
          echo "Target URL: ${{ github.event.deployment_status.target_url }}"
          echo "Environment: ${{ github.event.deployment_status.environment }}"
          echo "State: ${{ github.event.deployment_status.state }}"
          echo "GitHub Ref: ${GITHUB_REF}"
          echo "GitHub Ref Name: ${GITHUB_REF_NAME}"
          echo "GitHub Head Ref: ${GITHUB_HEAD_REF}"

      - name: Debug Deployment Status Event
        run: |
          echo "Deployment Status Event:"
          echo "Target URL: ${{ github.event.deployment_status.target_url }}"
          echo "Environment: ${{ github.event.deployment_status.environment }}"
          echo "State: ${{ github.event.deployment_status.state }}"
          echo "GitHub Ref: ${GITHUB_REF}"
          echo "GitHub Ref Name: ${GITHUB_REF_NAME}"
          echo "GitHub Head Ref: ${GITHUB_HEAD_REF}"
          echo "Deployment ID: ${{ github.event.deployment_status.deployment_id }}"
          echo "Repository: ${{ github.repository }}"
          
      - name: Wait for Vercel Preview Deployment
        id: wait_for_vercel
        uses: patrickedqvist/wait-for-vercel-preview@v1.3.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          max_timeout: 300
          check_interval: 5
          headers: '{"x-vercel-protection-bypass": "${{ secrets.VERCEL_AUTOMATION_BYPASS_SECRET }}"}'
          
      - name: Debug Vercel Preview URL
        run: |
          echo "Vercel Preview URL: ${{ steps.wait_for_vercel.outputs.url }}"
          
          # Fallback to branch name-based URL if wait-for-vercel action doesn't return a URL
          if [ -z "${{ steps.wait_for_vercel.outputs.url }}" ]; then
            echo "No URL from wait-for-vercel action, using branch name-based URL construction..."
            BRANCH_NAME=$(echo ${GITHUB_REF_NAME:-${GITHUB_REF#refs/heads/}} | sed 's/\//-/g')
            DEPLOY_URL="https://ai-git-${BRANCH_NAME}.dev.driv.ly"
            echo "VERCEL_PREVIEW_URL=${DEPLOY_URL}" >> $GITHUB_ENV
            echo "Using fallback Vercel Preview URL: ${DEPLOY_URL}"
          else
            echo "VERCEL_PREVIEW_URL=${{ steps.wait_for_vercel.outputs.url }}" >> $GITHUB_ENV
            echo "Using Vercel Preview URL from wait-for-vercel action: ${{ steps.wait_for_vercel.outputs.url }}"
          fi

      - name: Run E2E tests on Vercel Preview
        env:
          BASE_URL: ${{ env.VERCEL_PREVIEW_URL }}
          BROWSER_TESTS: 'true'
          VERCEL_AUTOMATION_BYPASS_SECRET: ${{ secrets.VERCEL_AUTOMATION_BYPASS_SECRET }}
        run: |
          cp tests/vitest.e2e.config.ts ./vitest.e2e.config.ts
          echo "Testing against BASE_URL: ${BASE_URL}"
          pnpm test:e2e
